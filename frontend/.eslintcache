<<<<<<< HEAD
[{"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\index.js":"1","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\App.js":"3","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\store.js":"4","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Header.js":"5","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\CartScreen.js":"9","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\productreducers.js":"10","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\cartreducers.js":"11","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Message.js":"12","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Loader.js":"13","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\productAction.js":"14","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\productConstants.js":"15","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\cartConstants.js":"16","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\cartAction.js":"17","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Product.js":"18","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Rating.js":"19","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\orderReducers.js":"20","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\orderConstants.js":"21","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderListScreen.js":"22","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\orderActions.js":"23","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductListScreen.js":"24","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\userreducers.js":"25","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\userConstants.js":"26","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\LoginScreen.js":"27","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ShippingScreen.js":"28","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PaymentScreen.js":"29","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\userActions.js":"31","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\FormContainer.js":"32","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\CheckoutSteps.js":"33","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js":"34","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Variant.js":"35","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\RegisterScreen.js":"36","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProfileScreen.js":"37","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\DashBoardScreen.js":"38","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderScreen.js":"39","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js":"40","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantListScreen.js":"41","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\categoryReducers.js":"42","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\categoryConstants.js":"43","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\categoryActions.js":"44","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js":"45","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js":"46","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\supplierReducers.js":"47","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\supplierConstants.js":"48","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\variantConstants.js":"49","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\supplierActions.js":"50","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\subcategoryActions.js":"51","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductCreateScreen.js":"52","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report2Screen.js":"53","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report3Screen.js":"54","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report4Screen.js":"55","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report5Screen.js":"56","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report1Screen.js":"57","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantCreateScreen.js":"58"},{"size":612,"mtime":1613376057813,"results":"59","hashOfConfig":"60"},{"size":375,"mtime":1613376057814,"results":"61","hashOfConfig":"60"},{"size":3858,"mtime":1614747428040,"results":"62","hashOfConfig":"60"},{"size":3911,"mtime":1614694644679,"results":"63","hashOfConfig":"60"},{"size":3240,"mtime":1614584120804,"results":"64","hashOfConfig":"60"},{"size":4070,"mtime":1614624056382,"results":"65","hashOfConfig":"60"},{"size":336,"mtime":1613661523293,"results":"66","hashOfConfig":"60"},{"size":4563,"mtime":1614713119953,"results":"67","hashOfConfig":"60"},{"size":3795,"mtime":1614713119933,"results":"68","hashOfConfig":"60"},{"size":7306,"mtime":1614713119931,"results":"69","hashOfConfig":"60"},{"size":1347,"mtime":1614713119912,"results":"70","hashOfConfig":"60"},{"size":305,"mtime":1614713119911,"results":"71","hashOfConfig":"60"},{"size":341,"mtime":1613566630620,"results":"72","hashOfConfig":"60"},{"size":9791,"mtime":1614745721491,"results":"73","hashOfConfig":"60"},{"size":1324,"mtime":1614590257001,"results":"74","hashOfConfig":"60"},{"size":279,"mtime":1613566630833,"results":"75","hashOfConfig":"60"},{"size":3464,"mtime":1614713119859,"results":"76","hashOfConfig":"60"},{"size":987,"mtime":1614523679198,"results":"77","hashOfConfig":"60"},{"size":1342,"mtime":1614523679198,"results":"78","hashOfConfig":"60"},{"size":3555,"mtime":1614255385811,"results":"79","hashOfConfig":"60"},{"size":1475,"mtime":1613631796201,"results":"80","hashOfConfig":"60"},{"size":4002,"mtime":1614679415351,"results":"81","hashOfConfig":"60"},{"size":6829,"mtime":1614667864535,"results":"82","hashOfConfig":"60"},{"size":4263,"mtime":1614747506848,"results":"83","hashOfConfig":"60"},{"size":2435,"mtime":1614659916587,"results":"84","hashOfConfig":"60"},{"size":1023,"mtime":1614624056219,"results":"85","hashOfConfig":"60"},{"size":2497,"mtime":1613566631051,"results":"86","hashOfConfig":"60"},{"size":5775,"mtime":1614713119955,"results":"87","hashOfConfig":"60"},{"size":1622,"mtime":1613566631051,"results":"88","hashOfConfig":"60"},{"size":6931,"mtime":1614255385951,"results":"89","hashOfConfig":"60"},{"size":5101,"mtime":1614713119910,"results":"90","hashOfConfig":"60"},{"size":389,"mtime":1613566630570,"results":"91","hashOfConfig":"60"},{"size":1421,"mtime":1613566630526,"results":"92","hashOfConfig":"60"},{"size":8429,"mtime":1614701281413,"results":"93","hashOfConfig":"60"},{"size":1476,"mtime":1614255385748,"results":"94","hashOfConfig":"60"},{"size":6966,"mtime":1614523679202,"results":"95","hashOfConfig":"60"},{"size":3608,"mtime":1614624056572,"results":"96","hashOfConfig":"60"},{"size":161,"mtime":1614680097559,"results":"97","hashOfConfig":"60"},{"size":5026,"mtime":1614265897785,"results":"98","hashOfConfig":"60"},{"size":6214,"mtime":1614746381611,"results":"99","hashOfConfig":"60"},{"size":3823,"mtime":1614747495284,"results":"100","hashOfConfig":"60"},{"size":2840,"mtime":1614586266974,"results":"101","hashOfConfig":"60"},{"size":1160,"mtime":1614586219334,"results":"102","hashOfConfig":"60"},{"size":3477,"mtime":1614624794726,"results":"103","hashOfConfig":"60"},{"size":1266,"mtime":1614586236156,"results":"104","hashOfConfig":"60"},{"size":2983,"mtime":1614586246151,"results":"105","hashOfConfig":"60"},{"size":2837,"mtime":1614602622879,"results":"106","hashOfConfig":"60"},{"size":1158,"mtime":1614581309700,"results":"107","hashOfConfig":"60"},{"size":1124,"mtime":1614590246270,"results":"108","hashOfConfig":"60"},{"size":3484,"mtime":1614605374816,"results":"109","hashOfConfig":"60"},{"size":3952,"mtime":1614630152215,"results":"110","hashOfConfig":"60"},{"size":8214,"mtime":1614747882650,"results":"111","hashOfConfig":"60"},{"size":3508,"mtime":1614750818195,"results":"112","hashOfConfig":"60"},{"size":1390,"mtime":1614751018724,"results":"113","hashOfConfig":"60"},{"size":3865,"mtime":1614747627729,"results":"114","hashOfConfig":"60"},{"size":1832,"mtime":1614750894589,"results":"115","hashOfConfig":"60"},{"size":2083,"mtime":1614750831814,"results":"116","hashOfConfig":"60"},{"size":5698,"mtime":1614747896380,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"1i9xyw7",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"120"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"120"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"192","usedDeprecatedRules":"120"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"120"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"120"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\index.js",[],["246","247"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\App.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\store.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\HomeScreen.js",["248","249","250","251"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, NavDropdown , Dropdown, Nav, Card, ListGroup, SplitButton, ButtonGroup, Button, Form} from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport { listProductsCat, listProducts } from \"../action/productAction\";\r\n\r\nconst HomeScreen = ({match}) => {\r\n  const dispatch = useDispatch();\r\n  const cat = match.params.cat ? match.params.cat:\"\"\r\n  const productList=useSelector(state=>state.productList)\r\n  const {loading, error, products} =productList\r\n  const cats={consumer_electronics:['laptop','smart phone','dongal'],  kitchen_appliances:[\"rice cooker\",\"oven\", \"electric kettle\", \"heater\"],\r\n   camera:[\"DSLR\",\"Mirrorless\"], phone:[\"samsung\",\"apple\",\"nokia\"], laptop:['asus','dell','toshiba','hp','lenovo'], USB:['kingston','imation'],furniture:['chair,table'],\r\n  books:[],headphone:[],tablets:[]}\r\n  useEffect(() => {\r\n    if(cat){\r\n      dispatch(listProductsCat(cat))\r\n    }\r\n    else{\r\n      console.log('lklk')\r\n      dispatch(listProducts())\r\n    }\r\n  }, [dispatch,cat])\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={2}>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Card.Title><h6><strong>Product Catagaries</strong></h6></Card.Title>\r\n          {Object.keys(cats).map((cat) => (\r\n            <Dropdown as={ButtonGroup} className=\"btn btn-sm p-0\" style={{width:\"100%\"}} block>\r\n              <LinkContainer to={`/products/${cat}`} className=\"p-1\" style={{width:\"85%\"}}>\r\n              <Button className=\"btn btn-sm\" style={{width:\"100%\"}} variant=\"outline-dark\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{cat.replace('_',\" \")}</p></Button>\r\n            </LinkContainer>\r\n              <Dropdown.Toggle split className=\"btn btn-sm\" id=\"dropdown-split-basic\" variant=\"outline-dark\"/>\r\n              <Dropdown.Menu>\r\n            {cats[cat].map((c)=>(\r\n              <LinkContainer to={`/products/${cat}-${c}`} className=\"p-1\" style={{width:\"100%\"}}>\r\n                <Dropdown.Item className=\"btn btn-outline-dark btn-sm\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{c.replace('_',\" \")}</p></Dropdown.Item>\r\n              </LinkContainer>\r\n            ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          ))}\r\n          </Card.Body>\r\n        </Card>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Form.Group controlId=\"formBasicRange\">\r\n            <Form.Label>Price Range</Form.Label><Form.Control type=\"range\" min={0} max={100}/>\r\n          </Form.Group>\r\n          <Row>\r\n            <Col md={6} className='pr-1'>\r\n            <Form.Label>Min</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"0\"></Form.Control>\r\n            </Col>\r\n            <Col md={6} className='pl-1'>\r\n            <Form.Label>Max</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"1,0000\"></Form.Control>\r\n            </Col>\r\n          </Row>\r\n          <Button className=\"btn btn-block btn-sm mt-3\" variant='outline-dark'>Apply</Button>\r\n          </Card.Body>\r\n        </Card>\r\n       \r\n        </Col>\r\n        <Col md={10}>\r\n        {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\" Children={error} />\r\n      ) : (\r\n        <>\r\n        <h1>Latest Products</h1>\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        </>\r\n      )}\r\n        </Col>\r\n      </Row>\r\n      \r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\productreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\cartreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\productAction.js",["252","253","254"],"import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST1,\r\n  PRODUCT_DETAILS_SUCCESS1,\r\n  PRODUCT_DETAILS_FAIL1,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n} from '../constants/productConstants';\r\n\r\nimport {\r\n  VARIANT_LIST_REQUEST,\r\n  VARIANT_LIST_SUCCESS,\r\n  VARIANT_LIST_FAIL,\r\n  VARIANT_DETAILS_REQUEST,\r\n  VARIANT_DETAILS_SUCCESS,\r\n  VARIANT_DETAILS_FAIL,\r\n  VARIANT_CREATE_FAIL,\r\n  VARIANT_CREATE_REQUEST,\r\n  VARIANT_CREATE_SUCCESS,\r\n  VARIANT_UPDATE_REQUEST,\r\n  VARIANT_UPDATE_SUCCESS,\r\n  VARIANT_UPDATE_FAIL,\r\n  VARIANT_DELETE_REQUEST,\r\n  VARIANT_DELETE_FAIL,\r\n  VARIANT_DELETE_SUCCESS,\r\n} from '../constants/variantConstants';\r\n\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/products\");\r\n    console.log(data)\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const listProductsCat = (cat) => async (dispatch) => {\r\n  cat=cat.split(\"-\").join('/')\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(`/api/products/category/${cat}`);\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/products/${productId}`)\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsProductVariant = (productId, variants) => async (dispatch) => {\r\n  try{\r\n    const { data } = await axios.get(`/api/products/${productId}/${variants.color}/${variants.size}`);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS1, payload: data });\r\n    console.log('lllllllllll')\r\n  }\r\n  catch(error){\r\n    dispatch({\r\n            type: PRODUCT_DETAILS_FAIL1,\r\n            payload:variants\r\n          });\r\n  }\r\n}\r\n\r\n\r\n// export const detailsProductVariant = (productId, variants) => async (dispatch) => {\r\n\r\n//   dispatch({ type: PRODUCT_DETAILS_REQUEST1, payload: productId });\r\n//   try {\r\n//     console.log(variants)\r\n//     dispatch({ type: PRODUCT_DETAILS_REQUEST1 });\r\n//     const { data } = await axios.get(`/api/products/${productId}/${variants.color}/${variants.size}`);\r\n//     const h = { ...data, vary: variants };\r\n//     dispatch({ type: PRODUCT_DETAILS_SUCCESS1, payload: h });\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//     dispatch({\r\n//       type: PRODUCT_DETAILS_FAIL1,\r\n//       payload:error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const listProductsAdmin = () => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_LIST_REQUEST });\r\n  try {\r\n\r\n    const { data } = await axios.get(`/api/products/productlist`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const detailsProductAdmin = (productId) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  try {\r\n    \r\n    const {data} = await axios.get(`/api/products/productlist/${productId}`)\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data[0] });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = (newproduct) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n  try {\r\n\r\n    const { data } = await axios.post(`/api/products/addProduct`, newproduct);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_CREATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/products/productlist/edit/${product.product_id}`, product);\r\n\r\n    dispatch({ \r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = axios.delete(`/api/products/productlist/delete/${productId}`);\r\n\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const listVariants = (productId) => async (dispatch) =>{\r\n  dispatch({ type: VARIANT_LIST_REQUEST });\r\n  try {\r\n\r\n      // const { data } = await axios.get(\"/api/product/productlist/${productId}/variantlist\");\r\n      const { data } = await axios.get(`/api/products/productlist/${productId}/variants`);\r\n\r\n      dispatch({\r\n      type: VARIANT_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n  } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: VARIANT_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n  }\r\n}\r\n\r\nexport const detailsVariant = (productId,variantId) => async (dispatch) => {\r\n  dispatch({ type: VARIANT_DETAILS_REQUEST, payload: (productId,variantId) });\r\n  try {\r\n    \r\n    // const {data} = await axios.get(`/api/products/productlist/${productId}/variants/${variantId}`)\r\n    const {data} = await axios.get(`/api/products/productlist/${productId}/variants/${variantId}`)\r\n\r\n    dispatch({ type: VARIANT_DETAILS_SUCCESS, payload: data[0] });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: VARIANT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createVariant = (productId,newvariant) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_CREATE_REQUEST });\r\n  try {\r\n    const { data } = await axios.post(`/api/products/productlist/${productId}/variants/addvariant`, newvariant);\r\n    dispatch({\r\n      type: VARIANT_CREATE_SUCCESS,\r\n      payload: data.variant,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\nexport const updateVariant = (variant) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_UPDATE_REQUEST, payload: variant });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/products/productlist/${variant.product_id}/variants/editvariant/${variant.variant_id}`, variant);\r\n\r\n    dispatch({ type: VARIANT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\nexport const deleteVariant = (productId,variantId) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_DELETE_REQUEST, payload: (productId,variantId) });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = axios.delete(`/api/products/productlist/${productId}/variants/delete/${variantId}`);\r\n\r\n    dispatch({ type: VARIANT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_DELETE_FAIL, payload: message });\r\n  }\r\n};","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\cartAction.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderListScreen.js",["255"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteOrder, deliverOrder, listOrders } from '../action/orderActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { ORDER_DELETE_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\nexport default function OrderListScreen(props) {\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const orderDelete = useSelector((state) => state.orderDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = orderDelete;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const {\r\n    loading: loadingDeliver,\r\n    error: errorDeliver,\r\n    success: successDeliver,\r\n  } = orderDeliver;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successDelete) {\r\n      dispatch({ type: ORDER_DELETE_RESET });\r\n    }\r\n    if (successDeliver) {\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      // props.history.push(`/product/${createdProduct.product_id}/edit`);\r\n    }\r\n    dispatch(listOrders());\r\n  }, [dispatch, successDelete, successDeliver, props.history]);\r\n  // useEffect(() => {\r\n  //   dispatch({ type: ORDER_DELIVER_RESET });\r\n  //   dispatch(listOrders());\r\n  // }, [dispatch, successDeliver]);\r\n\r\n  \r\n  const deleteHandler = (order) => {\r\n    if (window.confirm('Are you sure to delete?')) {\r\n      dispatch(deleteOrder(order._id));\r\n    }\r\n  };\r\n  const deliverHandler = (order) => {\r\n    if (window.confirm('Are you sure to deliver?')) {\r\n      dispatch(deliverOrder(order._id));\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <h1>Orders</h1>\r\n      {loadingDelete && <Loader></Loader>}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingDeliver && <Loader></Loader>}\r\n      {errorDeliver && <Message variant=\"danger\">{errorDeliver}</Message>}\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>USER TYPE</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL PAID</th>\r\n              <th>DELIVERY STATUS</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.order_id}>\r\n                <td>{order.order_id}</td>\r\n                <td>{order.user}</td>\r\n                <td>{order.customer_type}</td>\r\n                <td>{order.order_date ? order.order_date.substring(0, 10) : 'No'}</td>\r\n                <td>{order.total_payment}</td>\r\n                <td>{order.delivery_status}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() => {\r\n                      props.history.push(`/order/${order._id}`);\r\n                    }}\r\n                  >\r\n                    Details\r\n                  </button>\r\n                  {/* <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deleteHandler(order)}\r\n                    >\r\n                      Delete\r\n                    </button> */}\r\n                    {order.delivery_status !== \"delivered\" && \r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deliverHandler(order)}\r\n                    >\r\n                      Mark As Delivered\r\n                    </button>\r\n                    }\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\orderActions.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\userreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ShippingScreen.js",["256","257","258","259","260"],"import React, {useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\nimport { saveShippingAddress} from \"../action/cartAction\";\r\nimport {getUserAddress} from '../action/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Typeahead } from 'react-bootstrap-typeahead'\r\nimport {\r\n  Button,\r\n  Form\r\n} from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\n\r\n  const ShippingScreen = ({history}) => {\r\n    const cart = useSelector(state=>state.cart)\r\n    const {shippingAddress} =cart\r\n    console.log('ttttttttt')\r\n    console.log(shippingAddress)\r\n    console.log('ttttttttt')\r\n    const [addressLine1, setAddressLine1] =useState(shippingAddress.addressLine1)\r\n    const [addressLine2, setAddressLine2] =useState(shippingAddress.addressLine2)\r\n    const [postalCode, setPostalCode] =useState(shippingAddress.postalCode)\r\n    let [city, setCity] = useState(shippingAddress.city?[shippingAddress.city]:[]);\r\n    let [province, setProvince] = useState(shippingAddress.province?[shippingAddress.province]:[]);\r\n    console.log(shippingAddress.province)\r\n    console.log(province)\r\n    const [phone, setPhone] =useState(shippingAddress.phone)\r\n\r\n    const dispatch =useDispatch()\r\n\r\n    const userAddress= useSelector(state=>state.userAddress)\r\n    const {loading, error, address} = userAddress\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    useEffect(()=>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        else{\r\n            console.log(address)\r\n            if(!address.addressLine1){\r\n                dispatch(getUserAddress('profile'))\r\n            }\r\n            else{\r\n                setAddressLine1(address.addressLine1!==\"\"?address.addressLine1:addressLine1)\r\n                setAddressLine2(address.addressLine2!==\"\"?address.addressLine2:addressLine2)\r\n                setPostalCode(address.zip!==\"\"?address.zip:postalCode)\r\n                setCity(address.city!==\"\"?[address.city]:city)\r\n                setProvince(address.province!==\"\"?[address.province]:province)\r\n                setPhone(address.phone!==\"\"?address.phone:phone)\r\n            }\r\n        }\r\n    },[dispatch, history, userInfo, address])\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        city=city[0]\r\n        province=province[0]\r\n        dispatch(saveShippingAddress({addressLine1,addressLine2,city,postalCode,province,phone}))\r\n        history.push('/payment')\r\n    }\r\n    const sub=(a)=>{\r\n        console.log(a[0])\r\n        setProvince(a)\r\n    }\r\n    const subCity=(a)=>{\r\n        if(typeof a[0] ==='object'){\r\n            console.log(a[0].label)\r\n            setCity([a[0].label])\r\n        }\r\n        else{\r\n            console.log(a[0])\r\n            setCity(a)\r\n        }\r\n    }\r\n\r\n    const cities=['Negombo', 'Colombo','Gampaha']\r\n    const provinces=['Western','Southern','Central','Uva','Eastern','Sabaragamuwa','North','North Western','North Central']\r\n\r\n  return (\r\n      <FormContainer>\r\n          <CheckoutSteps step1 step2/>\r\n          <h2>Delivery Details</h2>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='phone'>\r\n                  <Form.Label>Contact Number</Form.Label>\r\n                  <Form.Control type='tel' required placeholder='Contact Number' value={phone} onChange={(e)=>setPhone(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='addressLine1'>\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Address Line1' value={addressLine1} onChange={(e)=>setAddressLine1(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='addressLine2'>\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Address Line2' value={addressLine2} onChange={(e)=>setAddressLine2(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='city'>\r\n                  <Form.Label>City</Form.Label>\r\n                  {/* <Form.Control type='text' required placeholder='Enter City' value={city} onChange={(e)=>setCity(e.target.value)}></Form.Control> */}\r\n                  {/* <Typeahead onChange={setCity} options={cities} placeholder=\"Choose a City...\" selected={city}/> */}\r\n                  <Typeahead allowNew onChange={(selected)=>subCity(selected)} options={cities} selected={city} placeholder=\"Choose a City...\"/>\r\n              </Form.Group>\r\n              <Form.Group controlId='postalCode'>\r\n                  <Form.Label>Postal Code</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Postal Code' value={postalCode} onChange={(e)=>setPostalCode(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='province'>\r\n                  <Form.Label>Province</Form.Label>\r\n                  {/* <Form.Control type='text' required placeholder='Enter Country' value={country} onChange={(e)=>setCountry(e.target.value)}></Form.Control> */}\r\n                  <Typeahead onChange={(selected)=>sub(selected)} options={provinces} selected={province} placeholder=\"Choose a province...\"/>\r\n              </Form.Group>\r\n              {/* <Typeahead onChange={setSelected} options={['yu']} placeholder=\"Choose a state...\" selected={selected}/> */}\r\n              \r\n              <Button type='submit' variant='primary'>Continue</Button>\r\n          </Form>\r\n      </FormContainer>\r\n  )\r\n}\r\nexport default ShippingScreen;","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js",["261"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {createOrder} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const PlaceOrderScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state=>state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n    cart.deliveryCost = cart.itemsPrice>100?0:cart.itemsPrice>50?cart.itemsPrice*0.05:10\r\n    cart.taxPrice =Number((0.15*cart.itemsPrice).toFixed(2))\r\n    cart.totalPrice=Number(cart.itemsPrice)+Number(cart.deliveryCost)+Number(cart.taxPrice)\r\n\r\nconst orderCreate = useSelector(state=>state.orderCreate)\r\nconst {order,success,error}=orderCreate\r\n\r\nuseEffect(()=>{\r\n    if(success){\r\n        history.push(`/order/${order._id}`)\r\n    }\r\n},[history,success])\r\n\r\n    const PlaceOrderHandler=()=>{\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            shippingAddress:cart.shippingAddress,\r\n            paymentMethod:cart.paymentMethod,\r\n            itemsPrice:cart.itemsPrice,\r\n            shippingPrice:cart.shippingPrice,\r\n            taxPrice:cart.taxPrice,\r\n            totalPrice:cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <CheckoutSteps step1 step2 step3 step4/>\r\n    <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Address:</strong>\r\n                        {cart.shippingAddress.address},{cart.shippingAddress.city}{' '}\r\n                        {cart.shippingAddress.postalCode},{' '}\r\n                        {cart.shippingAddress.country}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <strong>Method:</strong>\r\n                    {cart.paymentMethod}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {cart.cartItems.length===0?<Message>Your Cart is Empty</Message>:\r\n                    (\r\n                        <ListGroup variant='flush'>\r\n                            {cart.cartItems.map((item,index)=>(\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Row>\r\n                                                <Col className='text-left' md={2}>{item.qty}</Col>\r\n                                                <Col md={1}>x</Col>\r\n                                                <Col className='text-right' md={3}>${item.price}</Col>\r\n                                                <Col md={1}>=</Col>\r\n                                                <Col className='text-right' md={3}>${(item.qty * item.price).toFixed(2)}</Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n                                            <Card>\r\n                                                <ListGroup variant='flush'>\r\n                                                    <ListGroup.Item>\r\n                                                        <h2>Order Summary</h2>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Items</Col>\r\n                                                            <Col>${cart.itemsPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Delivery</Col>\r\n                                                            <Col>${cart.deliveryCost.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Tax</Col>\r\n                                                            <Col>${cart.taxPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Total</Col>\r\n                                                        <Col>${cart.totalPrice.toFixed(2)}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup>\r\n                                                {error && <Message variant='danger'>{error}</Message>}\r\n                                                </ListGroup>\r\n                                                <ListGroup.Item>\r\n                                                    <Button type='button' className='btn-block' disabled={cart.cartItems===0} onClick={PlaceOrderHandler}>Place Order</Button>\r\n                                                </ListGroup.Item>\r\n                                                </ListGroup>\r\n                                            </Card>\r\n                                        </Col>\r\n    </Row>\r\n</>\r\n  )\r\n}\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\userActions.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js",["262","263","264","265","266","267"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  detailsProductAdmin,\r\n  updateProduct\r\n} from '../action/productAction';\r\nimport { listCategories } from '../action/categoryActions';\r\nimport { listSubcategories } from '../action/subcategoryActions';\r\nimport { listSuppliers } from '../action/supplierActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nexport default function ProductEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const [product_name, setProduct_name] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [weight, setWeight] = useState('');\r\n  const [dimension, setDimension] = useState('');\r\n  const [category_name, setCategory_name] = useState('');\r\n  const [subcat_name, setSubcat_name] = useState('');\r\n  const [supplier_name, setSupplier_name] = useState('');\r\n\r\n  const productDetailsAdmin = useSelector((state) => state.productDetailsAdmin);\r\n  const { loading, error, product } = productDetailsAdmin;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  const categoryList = useSelector((state) => state.categoryList);\r\n  const { loading: catloading, error: caterror, categories:categories } = categoryList;\r\n\r\n  const subcategoryList = useSelector((state) => state.subcategoryList);\r\n  const { loading: scatloading, error: scaterror, subcategories } = subcategoryList;\r\n  \r\n  const supplierList = useSelector((state) => state.supplierList);\r\n  const { loading: suploading, error: superror, suppliers } = supplierList;\r\n\r\n  let categoryId = null;\r\n  categories.forEach(c => {\r\n    if (category_name === c.category_name){\r\n      categoryId = c.category_id;\r\n    }\r\n  })\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push('/productlist');\r\n    }\r\n    if (!catloading && !caterror) {\r\n      dispatch(listCategories());\r\n    }\r\n    if (categoryId !== null || !scatloading && !scaterror) {\r\n      dispatch(listSubcategories(categoryId));\r\n    }\r\n    if (!suploading && !superror) {\r\n      dispatch(listSuppliers());\r\n    }\r\n    if (!product || product.product_id!=productId || successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      dispatch(detailsProductAdmin(productId));\r\n    } else {\r\n      setProduct_name(product.product_name);\r\n      setDescription(product.description);\r\n      setWeight(product.weight);\r\n      setDimension(product.dimension);\r\n      setBrand(product.brand);\r\n      setCategory_name(product.category_name);\r\n      setSubcat_name(product.subcat_name);\r\n      setSupplier_name(product.supplier_name);\r\n    }\r\n  }, [product, dispatch, productId, successUpdate, props.history]);\r\n\r\n  useEffect(() => {\r\n    if (categoryId !== null) {\r\n      dispatch(listSubcategories(categoryId));\r\n    }\r\n  }, [categoryId, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        product_id: productId,\r\n        product_name,\r\n        description,\r\n        weight,\r\n        dimension,\r\n        brand,\r\n        category_name,\r\n        subcat_name,\r\n        supplier_name,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit Product {productId}</h1>\r\n        </div>\r\n        {loadingUpdate && <Loader></Loader>}\r\n        {/* {catloading && <Loader></Loader>} */}\r\n        {/* {caterror && <Message variant=\"danger\">{caterror}</Message>} */}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"product_name\">Product_name</label>\r\n              <input\r\n                id=\"product_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Product name\"\r\n                value={product_name}\r\n                onChange={(e) => setProduct_name(e.target.value)}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                rows=\"3\"\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></textarea>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"weight\">Weight</label>\r\n              <input\r\n                id=\"weight\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Weight\"\r\n                value={weight}\r\n                onChange={(e) => setWeight(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"dimension\">Dimension</label>\r\n              <input\r\n                id=\"dimension\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Dimension\"\r\n                value={dimension}\r\n                onChange={(e) => setDimension(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input\r\n                id=\"brand\"\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"category_name\">Category</label>\r\n              <select\r\n                id=\"category_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category\"\r\n                value={category_name}\r\n                onChange={(e) => setCategory_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the category</option>\r\n                {categories.map(category => <option key={category.category_id}> {category.category_name} </option> )}\r\n              </select>\r\n            </div>\r\n            {/* <div>\r\n              <label htmlFor=\"category_description\">Category_description</label>\r\n              <input\r\n                id=\"category_description\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category_description\"\r\n                value={category_description}\r\n                onChange={(e) => setCategory_description(e.target.value)}\r\n              ></input>\r\n            </div> */}\r\n            <div>\r\n              <label htmlFor=\"subcat_name\">Subcategory</label>\r\n              <select\r\n                id=\"subcat_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Subcategory_name\"\r\n                value={subcat_name}\r\n                onChange={(e) => setSubcat_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the subcategory</option>\r\n                {subcategories.map(subcategory => <option key={subcategory.subcat_id}> {subcategory.subcat_name} </option> )}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"supplier_name\">Supplier</label>\r\n              <select\r\n                id=\"supplier_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Supplier_name\"\r\n                value={supplier_name}\r\n                onChange={(e) => setSupplier_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the supplier</option>\r\n                {suppliers.map(supplier => <option key={supplier.supplier_id}> {supplier.supplier_name} </option> )}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label></label>\r\n              <button className=\"primary\" type=\"submit\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Variant.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\DashBoardScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderScreen.js",["268","269"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {getOrderDetails} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const OrderScreen = ({match}) => {\r\n    const orderId = match.params.id;\r\n    const dispatch = useDispatch()\r\n    \r\n\r\nconst orderDetails = useSelector(state=>state.orderDetails)\r\nconst {order,loading,error}=orderDetails\r\nif(!loading){\r\n    order.itemsPrice = order.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    dispatch(getOrderDetails(orderId))\r\n},[])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p><strong>Name:</strong>{order.user.name}</p>\r\n              <p><strong>Email:</strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address},{order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered?(\r\n                  <Message variant='success'>Delivered</Message>):<Message variant='success'>Not Delivered</Message>}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n              <strong>Method:</strong>\r\n              {order.paymentMethod}\r\n              </p>\r\n              <p>\r\n              <strong>Paid On:</strong>\r\n              {order.paidAt}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          <Row>\r\n                            <Col className=\"text-left\" md={2}>\r\n                              {item.qty}\r\n                            </Col>\r\n                            <Col md={1}>x</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${item.price}\r\n                            </Col>\r\n                            <Col md={1}>=</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${(item.qty * item.price).toFixed(2)}\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Delivery</Col>\r\n                  <Col>${order.deliveryCost.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\nexport default OrderScreen;\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js",["270"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsVariant, updateVariant } from '../action/productAction';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { VARIANT_UPDATE_RESET } from '../constants/variantConstants';\r\n\r\nexport default function VariantEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const variantId = props.match.params.vid;\r\n  const [SKU, setSKU] = useState('');\r\n  const [image_url, setImage_url] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [offer, setOffer] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [no_stock, setNo_stock] = useState('');\r\n  \r\n  const variantDetails = useSelector((state) => state.variantDetails);\r\n  const { loading, error, variant } = variantDetails;\r\n\r\n  const variantUpdate = useSelector((state) => state.variantUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = variantUpdate;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push(`/product/${productId}/variantlist`);\r\n    }\r\n    if (!variant || (variant.variant_id != variantId || successUpdate)) {\r\n      dispatch({ type: VARIANT_UPDATE_RESET });\r\n      dispatch(detailsVariant(productId,variantId));\r\n    } else {\r\n      setSKU(variant.SKU);\r\n      setPrice(variant.price);\r\n      setOffer(variant.offer);\r\n      setColor(variant.color);\r\n      setSize(variant.size);\r\n      setNo_stock(variant.no_stock);\r\n      setImage_url(variant.image_url);\r\n    }\r\n  },[variant, dispatch, productId, variantId, successUpdate, props.history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n        updateVariant(\r\n            {\r\n              variant_id: variantId,\r\n              product_id: productId,\r\n              SKU,\r\n              price,\r\n              offer,\r\n              color,\r\n              size,\r\n              no_stock,\r\n              image_url,\r\n            }\r\n        )\r\n    );\r\n  };\r\n\r\n// const [loadingUpload, setLoadingUpload] = useState(false);\r\n// const [errorUpload, setErrorUpload] = useState('');\r\n// const userSignin = useSelector((state) => state.userSignin);\r\n// const { userInfo } = userSignin;\r\n// const uploadFileHandler = async (e) => {\r\n//   const file = e.target.files[0];\r\n//   const bodyFormData = new FormData();\r\n//   bodyFormData.append('image_url', file);\r\n//   setLoadingUpload(true);\r\n//   try {\r\n//     const { data } = await Axios.post('/api/uploads', bodyFormData);\r\n//     setImage_url(data);\r\n//     setLoadingUpload(false);\r\n//   } catch (error) {\r\n//     setErrorUpload(error.message);\r\n//     setLoadingUpload(false);\r\n//   }\r\n// };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit Product {productId} Variant {variantId} </h1>\r\n        </div>\r\n        {loadingUpdate && <Loader></Loader>}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <label htmlFor=\"SKU\">SKU</label>\r\n            <input\r\n              id=\"SKU\"\r\n              type=\"text\"\r\n              placeholder=\"Enter SKU\"\r\n              value={SKU}\r\n              onChange={(e) => setSKU(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"image_url\">image_url</label>\r\n            <input\r\n              id=\"image_url\"\r\n              type=\"text\"\r\n              placeholder=\"Enter image_url\"\r\n              value={image_url}\r\n              onChange={(e) => setImage_url(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          {/* <div>\r\n            <label htmlFor=\"product_imageFile\">product_image File</label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"product_imageFile\"\r\n              label=\"Choose product_image\"\r\n              onChange={uploadFileHandler}\r\n            ></input>\r\n            {loadingUpload && <Loader></Loader>}\r\n            {errorUpload && (\r\n              <Message variant=\"danger\">{errorUpload}</Message>\r\n            )}\r\n          </div> */}\r\n          <div>\r\n            <label htmlFor=\"price\">Price</label>\r\n            <input\r\n              id=\"price\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Price\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"offer\">Offer</label>\r\n            <input\r\n              id=\"offer\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Offer\"\r\n              value={offer}\r\n              onChange={(e) => setOffer(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"color\">Color</label>\r\n            <input\r\n              id=\"color\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Color\"\r\n              value={color}\r\n              onChange={(e) => setColor(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"size\">Size</label>\r\n            <input\r\n              id=\"size\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Size\"\r\n              value={size}\r\n              onChange={(e) => setSize(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"no_stock\">Count In Stock</label>\r\n            <input\r\n              id=\"no_stock\"\r\n              type=\"text\"\r\n              placeholder=\"Enter no_stock\"\r\n              value={no_stock}\r\n              onChange={(e) => setNo_stock(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div>\r\n            <label></label>\r\n            <button className=\"primary\" type=\"submit\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantListScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\categoryReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\categoryConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\categoryActions.js",["271"],"import axios from \"axios\";\r\nimport {\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_SUCCESS,\r\n  CATEGORY_LIST_FAIL,\r\n  CATEGORY_DETAILS_REQUEST,\r\n  CATEGORY_DETAILS_SUCCESS,\r\n  CATEGORY_DETAILS_FAIL,\r\n  CATEGORY_CREATE_FAIL,\r\n  CATEGORY_CREATE_REQUEST,\r\n  CATEGORY_CREATE_SUCCESS,\r\n  CATEGORY_UPDATE_REQUEST,\r\n  CATEGORY_UPDATE_SUCCESS,\r\n  CATEGORY_UPDATE_FAIL,\r\n  CATEGORY_DELETE_REQUEST,\r\n  CATEGORY_DELETE_FAIL,\r\n  CATEGORY_DELETE_SUCCESS,\r\n} from '../constants/categoryConstants';\r\n\r\n\r\nexport const listCategories = () => async (dispatch) => {\r\n    dispatch({ type: CATEGORY_LIST_REQUEST });\r\n    try {\r\n\r\n      const { data } = await axios.get(`/api/categories`);\r\n\r\n      dispatch({\r\n      type: CATEGORY_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: CATEGORY_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n    }\r\n};\r\n  \r\nexport const detailsCategory = (categoryId) => async (dispatch) => {\r\n  dispatch({ type: CATEGORY_DETAILS_REQUEST, payload: categoryId });\r\n  try {\r\n    dispatch({ type: CATEGORY_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/categories/${categoryId}`)\r\n\r\n    dispatch({ type: CATEGORY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: CATEGORY_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createCategory = () => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_CREATE_REQUEST });\r\n  try {\r\n\r\n    const newcategory = {\r\n      category_name: \"samplecategory\",\r\n      description: \"sampledescription\",\r\n    };\r\n    const { data } = await axios.post('/api/categories/',newcategory);\r\n\r\n\r\n    dispatch({\r\n      type: CATEGORY_CREATE_SUCCESS,\r\n      payload: data.category,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateCategory = (category) => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_UPDATE_REQUEST, payload: category });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/categories/${category.category_id}`, category);\r\n\r\n    dispatch({ type: CATEGORY_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteCategory = (categoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_DELETE_REQUEST, payload: categoryId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/categories/${categoryId}`);\r\n\r\n    dispatch({ type: CATEGORY_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\supplierReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\supplierConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\variantConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\supplierActions.js",["272"],"import axios from \"axios\";\r\nimport {\r\n  SUPPLIER_LIST_REQUEST,\r\n  SUPPLIER_LIST_SUCCESS,\r\n  SUPPLIER_LIST_FAIL,\r\n  SUPPLIER_DETAILS_REQUEST,\r\n  SUPPLIER_DETAILS_SUCCESS,\r\n  SUPPLIER_DETAILS_FAIL,\r\n  SUPPLIER_CREATE_FAIL,\r\n  SUPPLIER_CREATE_REQUEST,\r\n  SUPPLIER_CREATE_SUCCESS,\r\n  SUPPLIER_UPDATE_REQUEST,\r\n  SUPPLIER_UPDATE_SUCCESS,\r\n  SUPPLIER_UPDATE_FAIL,\r\n  SUPPLIER_DELETE_REQUEST,\r\n  SUPPLIER_DELETE_FAIL,\r\n  SUPPLIER_DELETE_SUCCESS,\r\n} from '../constants/supplierConstants';\r\n\r\n\r\nexport const listSuppliers = () => async (dispatch) => {\r\n    dispatch({ type: SUPPLIER_LIST_REQUEST });\r\n    try {\r\n\r\n      const { data } = await axios.get(`/api/suppliers/`);\r\n\r\n      dispatch({\r\n      type: SUPPLIER_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: SUPPLIER_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n    }\r\n};\r\n  \r\nexport const detailsSupplier = (supplierId) => async (dispatch) => {\r\n  dispatch({ type: SUPPLIER_DETAILS_REQUEST, payload: supplierId });\r\n  try {\r\n    dispatch({ type: SUPPLIER_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/suppliers/${supplierId}`)\r\n\r\n    dispatch({ type: SUPPLIER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: SUPPLIER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createSupplier = () => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_CREATE_REQUEST });\r\n  try {\r\n\r\n    const newsupplier = {\r\n        supplier_name: \"samplesupplier\",\r\n        contact_number: null,\r\n        email: null,\r\n    };\r\n    const { data } = await axios.post('/api/suppliers/',newsupplier);\r\n\r\n\r\n    dispatch({\r\n      type: SUPPLIER_CREATE_SUCCESS,\r\n      payload: data.supplier,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateSupplier = (supplier) => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_UPDATE_REQUEST, payload: supplier });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/suppliers/${supplier.supplier_id}`, supplier);\r\n\r\n    dispatch({ type: SUPPLIER_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteSupplier = (supplierId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_DELETE_REQUEST, payload: supplierId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/suppliers/${supplierId}`);\r\n\r\n    dispatch({ type: SUPPLIER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_DELETE_FAIL, payload: message });\r\n  }\r\n};","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\subcategoryActions.js",["273"],"import axios from \"axios\";\r\nimport {\r\n  SUBCATEGORY_LIST_REQUEST,\r\n  SUBCATEGORY_LIST_SUCCESS,\r\n  SUBCATEGORY_LIST_FAIL,\r\n  SUBCATEGORY_DETAILS_REQUEST,\r\n  SUBCATEGORY_DETAILS_SUCCESS,\r\n  SUBCATEGORY_DETAILS_FAIL,\r\n  SUBCATEGORY_CREATE_FAIL,\r\n  SUBCATEGORY_CREATE_REQUEST,\r\n  SUBCATEGORY_CREATE_SUCCESS,\r\n  SUBCATEGORY_UPDATE_REQUEST,\r\n  SUBCATEGORY_UPDATE_SUCCESS,\r\n  SUBCATEGORY_UPDATE_FAIL,\r\n  SUBCATEGORY_DELETE_REQUEST,\r\n  SUBCATEGORY_DELETE_FAIL,\r\n  SUBCATEGORY_DELETE_SUCCESS,\r\n} from '../constants/subcategoryConstants';\r\n\r\n\r\nexport const listSubcategories = (categoryId) => async (dispatch) =>{\r\n    dispatch({ type: SUBCATEGORY_LIST_REQUEST });\r\n    try {\r\n      // const { data } = await axios.get(\"/api/categories/${categoryId}/subcategorylist\");\r\n      const { data } = await axios.get(`/api/categories/${categoryId}/subcategories`);\r\n\r\n      dispatch({\r\n      type: SUBCATEGORY_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({\r\n        type: SUBCATEGORY_LIST_FAIL,\r\n        payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    }\r\n  }\r\n  \r\nexport const detailsSubcategory = (categoryId,subcategoryId) => async (dispatch) => {\r\n  dispatch({ type: SUBCATEGORY_DETAILS_REQUEST, payload: (categoryId,subcategoryId) });\r\n  try {\r\n    dispatch({ type: SUBCATEGORY_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/categories/${categoryId}/subcategories/${subcategoryId}`)\r\n\r\n    dispatch({ type: SUBCATEGORY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: SUBCATEGORY_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createSubcategory = (categoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_CREATE_REQUEST });\r\n  try {\r\n\r\n    const newsubcategory = {\r\n        subcat_name: \"samplesubcategory\",\r\n        category_id: categoryId,\r\n    };\r\n    const { data } = await axios.post(`/api/categories/${categoryId}/subcategories/`,newsubcategory);\r\n\r\n\r\n    dispatch({\r\n      type: SUBCATEGORY_CREATE_SUCCESS,\r\n      payload: data.subcategory,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateSubcategory = (categoryId,subcategory) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_UPDATE_REQUEST, payload: subcategory });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/categories/${categoryId}/subcategories/${subcategory.subcategory_id}`, subcategory);\r\n\r\n    dispatch({ type: SUBCATEGORY_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteSubcategory = (categoryId,subcategoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_DELETE_REQUEST, payload: (categoryId,subcategoryId) });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/categories/${categoryId}/subcategories/${subcategoryId}`);\r\n\r\n    dispatch({ type: SUBCATEGORY_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductCreateScreen.js",["274"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report2Screen.js",["275"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report3Screen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report4Screen.js",["276","277","278","279","280","281","282","283"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report5Screen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report1Screen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantCreateScreen.js",[],{"ruleId":"284","replacedBy":"285"},{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":3,"column":20,"nodeType":"290","messageId":"291","endLine":3,"endColumn":31},{"ruleId":"288","severity":1,"message":"292","line":3,"column":44,"nodeType":"290","messageId":"291","endLine":3,"endColumn":47},{"ruleId":"288","severity":1,"message":"293","line":3,"column":55,"nodeType":"290","messageId":"291","endLine":3,"endColumn":64},{"ruleId":"288","severity":1,"message":"294","line":3,"column":66,"nodeType":"290","messageId":"291","endLine":3,"endColumn":77},{"ruleId":"288","severity":1,"message":"295","line":9,"column":3,"nodeType":"290","messageId":"291","endLine":9,"endColumn":27},{"ruleId":"288","severity":1,"message":"296","line":230,"column":13,"nodeType":"290","messageId":"291","endLine":230,"endColumn":17},{"ruleId":"288","severity":1,"message":"296","line":325,"column":13,"nodeType":"290","messageId":"291","endLine":325,"endColumn":17},{"ruleId":"288","severity":1,"message":"297","line":43,"column":9,"nodeType":"290","messageId":"291","endLine":43,"endColumn":22},{"ruleId":"288","severity":1,"message":"298","line":6,"column":8,"nodeType":"290","messageId":"291","endLine":6,"endColumn":15},{"ruleId":"288","severity":1,"message":"299","line":7,"column":8,"nodeType":"290","messageId":"291","endLine":7,"endColumn":14},{"ruleId":"288","severity":1,"message":"300","line":34,"column":12,"nodeType":"290","messageId":"291","endLine":34,"endColumn":19},{"ruleId":"288","severity":1,"message":"301","line":34,"column":21,"nodeType":"290","messageId":"291","endLine":34,"endColumn":26},{"ruleId":"302","severity":1,"message":"303","line":57,"column":7,"nodeType":"304","endLine":57,"endColumn":45,"suggestions":"305"},{"ruleId":"302","severity":1,"message":"306","line":35,"column":3,"nodeType":"304","endLine":35,"endColumn":20,"suggestions":"307"},{"ruleId":"288","severity":1,"message":"308","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":13},{"ruleId":"309","severity":1,"message":"310","line":37,"column":49,"nodeType":"311","messageId":"312","endLine":37,"endColumn":70,"fix":"313"},{"ruleId":"314","severity":1,"message":"315","line":60,"column":29,"nodeType":"316","messageId":"317","endLine":60,"endColumn":31},{"ruleId":"314","severity":1,"message":"315","line":60,"column":45,"nodeType":"316","messageId":"317","endLine":60,"endColumn":47},{"ruleId":"318","severity":1,"message":"319","line":66,"column":39,"nodeType":"320","messageId":"321","endLine":66,"endColumn":41},{"ruleId":"302","severity":1,"message":"322","line":79,"column":6,"nodeType":"304","endLine":79,"endColumn":66,"suggestions":"323"},{"ruleId":"288","severity":1,"message":"324","line":13,"column":3,"nodeType":"290","messageId":"291","endLine":13,"endColumn":9},{"ruleId":"302","severity":1,"message":"325","line":32,"column":3,"nodeType":"304","endLine":32,"endColumn":5,"suggestions":"326"},{"ruleId":"318","severity":1,"message":"319","line":34,"column":41,"nodeType":"320","messageId":"321","endLine":34,"endColumn":43},{"ruleId":"288","severity":1,"message":"296","line":113,"column":13,"nodeType":"290","messageId":"291","endLine":113,"endColumn":17},{"ruleId":"288","severity":1,"message":"296","line":114,"column":13,"nodeType":"290","messageId":"291","endLine":114,"endColumn":17},{"ruleId":"288","severity":1,"message":"296","line":113,"column":13,"nodeType":"290","messageId":"291","endLine":113,"endColumn":17},{"ruleId":"302","severity":1,"message":"322","line":73,"column":6,"nodeType":"304","endLine":73,"endColumn":46,"suggestions":"327"},{"ruleId":"288","severity":1,"message":"328","line":2,"column":17,"nodeType":"290","messageId":"291","endLine":2,"endColumn":26},{"ruleId":"288","severity":1,"message":"308","line":3,"column":8,"nodeType":"290","messageId":"291","endLine":3,"endColumn":13},{"ruleId":"288","severity":1,"message":"329","line":11,"column":12,"nodeType":"290","messageId":"291","endLine":11,"endColumn":22},{"ruleId":"288","severity":1,"message":"330","line":11,"column":24,"nodeType":"290","messageId":"291","endLine":11,"endColumn":37},{"ruleId":"288","severity":1,"message":"331","line":12,"column":12,"nodeType":"290","messageId":"291","endLine":12,"endColumn":21},{"ruleId":"288","severity":1,"message":"332","line":13,"column":12,"nodeType":"290","messageId":"291","endLine":13,"endColumn":29},{"ruleId":"288","severity":1,"message":"333","line":13,"column":31,"nodeType":"290","messageId":"291","endLine":13,"endColumn":51},{"ruleId":"288","severity":1,"message":"334","line":22,"column":13,"nodeType":"290","messageId":"291","endLine":22,"endColumn":22},{"ruleId":"302","severity":1,"message":"335","line":30,"column":7,"nodeType":"304","endLine":30,"endColumn":9,"suggestions":"336"},"no-native-reassign",["337"],"no-negated-in-lhs",["338"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'ListGroup' is defined but never used.","'SplitButton' is defined but never used.","'PRODUCT_DETAILS_REQUEST1' is defined but never used.","'data' is assigned a value but never used.","'deleteHandler' is assigned a value but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addressLine1', 'addressLine2', 'city', 'phone', 'postalCode', and 'province'. Either include them or remove the dependency array. You can also do a functional update 'setAddressLine1(a => ...)' if you only need 'addressLine1' in the 'setAddressLine1' call.","ArrayExpression",["339"],"React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["340"],"'axios' is defined but never used.","no-useless-rename","Destructuring assignment categories unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"341","text":"342"},"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'categoryId', 'caterror', 'catloading', 'scaterror', 'scatloading', 'superror', and 'suploading'. Either include them or remove the dependency array.",["343"],"'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderId'. Either include them or remove the dependency array.",["344"],["345"],"'useEffect' is defined but never used.","'timeperiod' is assigned a value but never used.","'setTimeperiod' is assigned a value but never used.","'submitted' is assigned a value but never used.","'producttimereport' is assigned a value but never used.","'setProducttimereport' is assigned a value but never used.","'productId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["346"],"no-global-assign","no-unsafe-negation",{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},[1545,1566],"categories",{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},"Update the dependencies array to be: [dispatch, history, userInfo, address, addressLine1, addressLine2, postalCode, city, province, phone]",{"range":"359","text":"360"},"Update the dependencies array to be: [history, order._id, success]",{"range":"361","text":"362"},"Update the dependencies array to be: [product, dispatch, productId, successUpdate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",{"range":"363","text":"364"},"Update the dependencies array to be: [dispatch, orderId]",{"range":"365","text":"366"},"Update the dependencies array to be: [dispatch, successCreate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",{"range":"367","text":"368"},"Update the dependencies array to be: [dispatch]",{"range":"369","text":"370"},[2342,2380],"[dispatch, history, userInfo, address, addressLine1, addressLine2, postalCode, city, province, phone]",[1111,1128],"[history, order._id, success]",[2986,3046],"[product, dispatch, productId, successUpdate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",[835,837],"[dispatch, orderId]",[2811,2851],"[dispatch, successCreate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",[1101,1103],"[dispatch]"]
=======
<<<<<<< HEAD
[{"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\index.js":"1","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reportWebVitals.js":"2","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\store.js":"3","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\App.js":"4","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js":"5","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\supplierReducers.js":"6","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\orderReducers.js":"7","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\RegisterScreen.js":"8","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\categoryReducers.js":"9","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\HomeScreen.js":"10","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\LoginScreen.js":"11","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js":"12","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProfileScreen.js":"13","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\OrderScreen.js":"14","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Footer.js":"15","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\DashBoardScreen.js":"16","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Header.js":"17","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\PaymentScreen.js":"18","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\userreducers.js":"19","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\cartreducers.js":"20","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\productreducers.js":"21","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProductScreen.js":"22","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ShippingScreen.js":"23","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\CartScreen.js":"24","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\OrderListScreen.js":"25","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProductListScreen.js":"26","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\VariantListScreen.js":"27","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js":"28","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\Report1Screen.js":"29","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\Report3Screen.js":"30","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\Report2Screen.js":"31","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\Report4Screen.js":"32","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js":"33","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\Report5Screen.js":"34","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProductCreateScreen.js":"35","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Loader.js":"36","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\FormContainer.js":"37","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\CheckoutSteps.js":"38","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Product.js":"39","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\orderConstants.js":"40","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Rating.js":"41","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\cartConstants.js":"42","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\supplierConstants.js":"43","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js":"44","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Message.js":"45","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\variantConstants.js":"46","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Variant.js":"47","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\categoryConstants.js":"48","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\productConstants.js":"49","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\userConstants.js":"50","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\cartAction.js":"51","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\userActions.js":"52","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\orderActions.js":"53","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\productAction.js":"54","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\subcategoryActions.js":"55","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\supplierActions.js":"56","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\categoryActions.js":"57"},{"size":612,"mtime":1613232055980,"results":"58","hashOfConfig":"59"},{"size":375,"mtime":1613232055981,"results":"60","hashOfConfig":"59"},{"size":3911,"mtime":1614675170689,"results":"61","hashOfConfig":"59"},{"size":3800,"mtime":1614741580133,"results":"62","hashOfConfig":"59"},{"size":2983,"mtime":1614590014338,"results":"63","hashOfConfig":"59"},{"size":2837,"mtime":1614590014338,"results":"64","hashOfConfig":"59"},{"size":3555,"mtime":1614227886266,"results":"65","hashOfConfig":"59"},{"size":6966,"mtime":1614531672711,"results":"66","hashOfConfig":"59"},{"size":2840,"mtime":1614590014338,"results":"67","hashOfConfig":"59"},{"size":4070,"mtime":1614608994573,"results":"68","hashOfConfig":"59"},{"size":2497,"mtime":1613581624640,"results":"69","hashOfConfig":"59"},{"size":6931,"mtime":1614227886308,"results":"70","hashOfConfig":"59"},{"size":3608,"mtime":1614608994573,"results":"71","hashOfConfig":"59"},{"size":5026,"mtime":1614227886308,"results":"72","hashOfConfig":"59"},{"size":336,"mtime":1613835498591,"results":"73","hashOfConfig":"59"},{"size":161,"mtime":1614269436058,"results":"74","hashOfConfig":"59"},{"size":3240,"mtime":1614590014338,"results":"75","hashOfConfig":"59"},{"size":1622,"mtime":1613581624643,"results":"76","hashOfConfig":"59"},{"size":2435,"mtime":1614675170687,"results":"77","hashOfConfig":"59"},{"size":1347,"mtime":1614690862739,"results":"78","hashOfConfig":"59"},{"size":7306,"mtime":1614690862739,"results":"79","hashOfConfig":"59"},{"size":4563,"mtime":1614690862739,"results":"80","hashOfConfig":"59"},{"size":5775,"mtime":1614690862739,"results":"81","hashOfConfig":"59"},{"size":3795,"mtime":1614690862739,"results":"82","hashOfConfig":"59"},{"size":4002,"mtime":1614741580134,"results":"83","hashOfConfig":"59"},{"size":4288,"mtime":1614675170688,"results":"84","hashOfConfig":"59"},{"size":3916,"mtime":1614675170688,"results":"85","hashOfConfig":"59"},{"size":8429,"mtime":1614675170688,"results":"86","hashOfConfig":"59"},{"size":2070,"mtime":1614741580135,"results":"87","hashOfConfig":"59"},{"size":1369,"mtime":1614741580136,"results":"88","hashOfConfig":"59"},{"size":2834,"mtime":1614741580135,"results":"89","hashOfConfig":"59"},{"size":3865,"mtime":1614741580136,"results":"90","hashOfConfig":"59"},{"size":6230,"mtime":1614675170688,"results":"91","hashOfConfig":"59"},{"size":1827,"mtime":1614741580137,"results":"92","hashOfConfig":"59"},{"size":8225,"mtime":1614675170687,"results":"93","hashOfConfig":"59"},{"size":341,"mtime":1613581624605,"results":"94","hashOfConfig":"59"},{"size":389,"mtime":1613581624563,"results":"95","hashOfConfig":"59"},{"size":1421,"mtime":1613581624563,"results":"96","hashOfConfig":"59"},{"size":987,"mtime":1614531672695,"results":"97","hashOfConfig":"59"},{"size":1475,"mtime":1613412534826,"results":"98","hashOfConfig":"59"},{"size":1342,"mtime":1614531672695,"results":"99","hashOfConfig":"59"},{"size":279,"mtime":1613581624605,"results":"100","hashOfConfig":"59"},{"size":1158,"mtime":1614590014338,"results":"101","hashOfConfig":"59"},{"size":1266,"mtime":1614590014338,"results":"102","hashOfConfig":"59"},{"size":305,"mtime":1614690862739,"results":"103","hashOfConfig":"59"},{"size":1124,"mtime":1614601453746,"results":"104","hashOfConfig":"59"},{"size":1476,"mtime":1614227886253,"results":"105","hashOfConfig":"59"},{"size":1160,"mtime":1614590014338,"results":"106","hashOfConfig":"59"},{"size":1324,"mtime":1614601453746,"results":"107","hashOfConfig":"59"},{"size":1023,"mtime":1614608994560,"results":"108","hashOfConfig":"59"},{"size":3464,"mtime":1614690862739,"results":"109","hashOfConfig":"59"},{"size":5101,"mtime":1614690862739,"results":"110","hashOfConfig":"59"},{"size":6829,"mtime":1614675170685,"results":"111","hashOfConfig":"59"},{"size":9994,"mtime":1614741580134,"results":"112","hashOfConfig":"59"},{"size":3952,"mtime":1614675170686,"results":"113","hashOfConfig":"59"},{"size":3484,"mtime":1614675170686,"results":"114","hashOfConfig":"59"},{"size":3477,"mtime":1614675170684,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"aaukxb",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"118"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"118"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"118"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"118"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"118"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"118"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"118"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"182","usedDeprecatedRules":"118"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"118"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"118"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"118"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"118"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"118"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"203","usedDeprecatedRules":"118"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"118"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"118"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"118"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"118"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"118"},"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\index.js",[],["253","254"],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reportWebVitals.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\store.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\App.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\supplierReducers.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\RegisterScreen.js",["255"],"import React, {useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {register} from \"../action/userActions\";\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport {\r\n    Dropdown,\r\nForm,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"react-bootstrap\";\r\n\r\nconst RegisterScreen = ({location,history}) => {\r\n    const [first_name, setFirstName] = useState('')\r\n    const [last_name, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [province, setProvince] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [addressLine1, setAddressLine1] = useState('')\r\n    const [addressLine2, setAddressLine2] = useState('')\r\n    const [zip, setZip] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmpassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state=>state.userRegister)\r\n    const {loading, error, userInfo} = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1]:'/'\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n    const submitHandler =(event)=>{\r\n        event.preventDefault()\r\n        if(password!==confirmpassword){\r\n            setMessage('Password do not match')\r\n        }\r\n        else{\r\n            dispatch(register(email,password,first_name, last_name, zip, addressLine1, addressLine2, city, province, phone))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Row>\r\n                    <Col className='pr-1'>\r\n                        <Form.Group controlId='first_name'>\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type='first_name' placeholder='First Name' value={first_name} onChange={(event)=>setFirstName(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1'>\r\n                        <Form.Group controlId='last_name'>\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type='last_name' placeholder='Last Name' value={last_name} onChange={(event)=>setLastName(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='email Address' value={email} onChange={(event)=>setEmail(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Row>\r\n                    <Col className='pr-1' md={4}>\r\n                        <Form.Group controlId='phone'>\r\n                        <Form.Label>Contact Number</Form.Label>\r\n                        <Form.Control type='tel' placeholder='Phone Number' value={phone} onChange={(event)=>setPhone(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1' md={8}>\r\n                        <Form.Group controlId='addressLine1'>\r\n                        <Form.Label>Address Line 1</Form.Label>\r\n                        <Form.Control type='text' placeholder='Address Line 1' value={addressLine1} onChange={(event)=>setAddressLine1(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className='pr-1' md={8}>\r\n                    <Form.Group controlId='addressLine2'>\r\n                        <Form.Label>Address Line 2</Form.Label>\r\n                        <Form.Control type='text' placeholder='Address Line 2' value={addressLine2} onChange={(event)=>setAddressLine2(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1' md={4}>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className='pr-1' md={5}>\r\n                        <Form.Group controlId='province'>\r\n                        <Form.Label>Province</Form.Label>\r\n                        <Form.Control type='text' placeholder='Province' value={province} onChange={(event)=>setProvince(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='px-1' md={4}>\r\n                        <Form.Group controlId='city'>\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control type='text' placeholder='City' value={city} onChange={(event)=>setCity(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1' md={3}>\r\n                        <Form.Group controlId='zip'>\r\n                        <Form.Label>Zip Code</Form.Label>\r\n                        <Form.Control type='text' placeholder='Zip' value={zip} onChange={(event)=>setZip(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='password' value={password} onChange={(event)=>setPassword(event.target.value)} required></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='confirm password' value={confirmpassword} onChange={(event)=>setConfirmPassword(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n               \r\n                <Button type='submit' variant='primary' block>Register</Button>\r\n                </Form>\r\n                <Row className='py-3 text-right'>\r\n                    <Col>\r\n                    Have an Account?\r\n                    <Link to={redirect ? `/login?redirect=${redirect}`:'/login'} >Login</Link>\r\n                    </Col>\r\n                </Row>\r\n        </FormContainer>\r\n        </>\r\n    )\r\n}\r\nexport default RegisterScreen\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\categoryReducers.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\HomeScreen.js",["256","257","258","259"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, NavDropdown , Dropdown, Nav, Card, ListGroup, SplitButton, ButtonGroup, Button, Form} from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport { listProductsCat, listProducts } from \"../action/productAction\";\r\n\r\nconst HomeScreen = ({match}) => {\r\n  const dispatch = useDispatch();\r\n  const cat = match.params.cat ? match.params.cat:\"\"\r\n  const productList=useSelector(state=>state.productList)\r\n  const {loading, error, products, ca} =productList\r\n  // const cats={consumer_electronics:['laptop','smart phone','dongal'],  kitchen_appliances:[\"rice cooker\",\"oven\", \"electric kettle\", \"heater\"],\r\n  //  camera:[\"DSLR\",\"Mirrorless\"], phone:[\"samsung\",\"apple\",\"nokia\"], laptop:['asus','dell','toshiba','hp','lenovo'], USB:['kingston','imation'],furniture:['chair,table'],\r\n  // books:[],headphone:[],tablets:[]}\r\n  const cats=ca\r\n  console.log(cats)\r\n  console.log(ca)\r\n  console.log(Object.keys(ca))\r\n  useEffect(() => {\r\n    if(cat){\r\n      dispatch(listProductsCat(cat))\r\n    }\r\n    else{\r\n      console.log('lklk')\r\n      dispatch(listProducts())\r\n    }\r\n  }, [dispatch,cat])\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={2}>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Card.Title><h6><strong>Product Catagaries</strong></h6></Card.Title>\r\n          {Object.keys(cats).map((cat) => (\r\n            <Dropdown as={ButtonGroup} className=\"btn btn-sm p-0\" style={{width:\"100%\"}} block>\r\n              <LinkContainer to={`/products/${cat}`} className=\"p-1\" style={{width:\"85%\"}}>\r\n              <Button className=\"btn btn-sm\" style={{width:\"100%\"}} variant=\"outline-dark\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{cat.replace('_',\" \")}</p></Button>\r\n            </LinkContainer>\r\n              <Dropdown.Toggle split className=\"btn btn-sm\" id=\"dropdown-split-basic\" variant=\"outline-dark\"/>\r\n              <Dropdown.Menu>\r\n            {cats[cat].map((c)=>(\r\n              <LinkContainer to={`/products/${cat}-${c}`} className=\"p-1\" style={{width:\"100%\"}}>\r\n                <Dropdown.Item className=\"btn btn-outline-dark btn-sm\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{c.replace('_',\" \")}</p></Dropdown.Item>\r\n              </LinkContainer>\r\n            ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          ))}\r\n          </Card.Body>\r\n        </Card>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Form.Group controlId=\"formBasicRange\">\r\n            <Form.Label>Price Range</Form.Label><Form.Control type=\"range\" min={0} max={100}/>\r\n          </Form.Group>\r\n          <Row>\r\n            <Col md={6} className='pr-1'>\r\n            <Form.Label>Min</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"0\"></Form.Control>\r\n            </Col>\r\n            <Col md={6} className='pl-1'>\r\n            <Form.Label>Max</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"1,0000\"></Form.Control>\r\n            </Col>\r\n          </Row>\r\n          <Button className=\"btn btn-block btn-sm mt-3\" variant='outline-dark'>Apply</Button>\r\n          </Card.Body>\r\n        </Card>\r\n       \r\n        </Col>\r\n        <Col md={10}>\r\n        {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\" Children={error} />\r\n      ) : (\r\n        <>\r\n        <h1>Latest Products</h1>\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        </>\r\n      )}\r\n        </Col>\r\n      </Row>\r\n      \r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js",["260"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {createOrder} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const PlaceOrderScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state=>state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n    cart.deliveryCost = cart.itemsPrice>100?0:cart.itemsPrice>50?cart.itemsPrice*0.05:10\r\n    cart.taxPrice =Number((0.15*cart.itemsPrice).toFixed(2))\r\n    cart.totalPrice=Number(cart.itemsPrice)+Number(cart.deliveryCost)+Number(cart.taxPrice)\r\n\r\nconst orderCreate = useSelector(state=>state.orderCreate)\r\nconst {order,success,error}=orderCreate\r\n\r\nuseEffect(()=>{\r\n    if(success){\r\n        history.push(`/order/${order._id}`)\r\n    }\r\n},[history,success])\r\n\r\n    const PlaceOrderHandler=()=>{\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            shippingAddress:cart.shippingAddress,\r\n            paymentMethod:cart.paymentMethod,\r\n            itemsPrice:cart.itemsPrice,\r\n            shippingPrice:cart.shippingPrice,\r\n            taxPrice:cart.taxPrice,\r\n            totalPrice:cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <CheckoutSteps step1 step2 step3 step4/>\r\n    <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Address:</strong>\r\n                        {cart.shippingAddress.address},{cart.shippingAddress.city}{' '}\r\n                        {cart.shippingAddress.postalCode},{' '}\r\n                        {cart.shippingAddress.country}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <strong>Method:</strong>\r\n                    {cart.paymentMethod}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {cart.cartItems.length===0?<Message>Your Cart is Empty</Message>:\r\n                    (\r\n                        <ListGroup variant='flush'>\r\n                            {cart.cartItems.map((item,index)=>(\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Row>\r\n                                                <Col className='text-left' md={2}>{item.qty}</Col>\r\n                                                <Col md={1}>x</Col>\r\n                                                <Col className='text-right' md={3}>${item.price}</Col>\r\n                                                <Col md={1}>=</Col>\r\n                                                <Col className='text-right' md={3}>${(item.qty * item.price).toFixed(2)}</Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n                                            <Card>\r\n                                                <ListGroup variant='flush'>\r\n                                                    <ListGroup.Item>\r\n                                                        <h2>Order Summary</h2>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Items</Col>\r\n                                                            <Col>${cart.itemsPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Delivery</Col>\r\n                                                            <Col>${cart.deliveryCost.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Tax</Col>\r\n                                                            <Col>${cart.taxPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Total</Col>\r\n                                                        <Col>${cart.totalPrice.toFixed(2)}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup>\r\n                                                {error && <Message variant='danger'>{error}</Message>}\r\n                                                </ListGroup>\r\n                                                <ListGroup.Item>\r\n                                                    <Button type='button' className='btn-block' disabled={cart.cartItems===0} onClick={PlaceOrderHandler}>Place Order</Button>\r\n                                                </ListGroup.Item>\r\n                                                </ListGroup>\r\n                                            </Card>\r\n                                        </Col>\r\n    </Row>\r\n</>\r\n  )\r\n}\r\nexport default PlaceOrderScreen;\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProfileScreen.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\OrderScreen.js",["261","262"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {getOrderDetails} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const OrderScreen = ({match}) => {\r\n    const orderId = match.params.id;\r\n    const dispatch = useDispatch()\r\n    \r\n\r\nconst orderDetails = useSelector(state=>state.orderDetails)\r\nconst {order,loading,error}=orderDetails\r\nif(!loading){\r\n    order.itemsPrice = order.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    dispatch(getOrderDetails(orderId))\r\n},[])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p><strong>Name:</strong>{order.user.name}</p>\r\n              <p><strong>Email:</strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address},{order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered?(\r\n                  <Message variant='success'>Delivered</Message>):<Message variant='success'>Not Delivered</Message>}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n              <strong>Method:</strong>\r\n              {order.paymentMethod}\r\n              </p>\r\n              <p>\r\n              <strong>Paid On:</strong>\r\n              {order.paidAt}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          <Row>\r\n                            <Col className=\"text-left\" md={2}>\r\n                              {item.qty}\r\n                            </Col>\r\n                            <Col md={1}>x</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${item.price}\r\n                            </Col>\r\n                            <Col md={1}>=</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${(item.qty * item.price).toFixed(2)}\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Delivery</Col>\r\n                  <Col>${order.deliveryCost.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\nexport default OrderScreen;\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Footer.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\DashBoardScreen.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Header.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\userreducers.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\cartreducers.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\productreducers.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProductScreen.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ShippingScreen.js",["263","264","265","266","267"],"import React, {useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\nimport { saveShippingAddress} from \"../action/cartAction\";\r\nimport {getUserAddress} from '../action/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Typeahead } from 'react-bootstrap-typeahead'\r\nimport {\r\n  Button,\r\n  Form\r\n} from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\n\r\n  const ShippingScreen = ({history}) => {\r\n    const cart = useSelector(state=>state.cart)\r\n    const {shippingAddress} =cart\r\n    console.log('ttttttttt')\r\n    console.log(shippingAddress)\r\n    console.log('ttttttttt')\r\n    const [addressLine1, setAddressLine1] =useState(shippingAddress.addressLine1)\r\n    const [addressLine2, setAddressLine2] =useState(shippingAddress.addressLine2)\r\n    const [postalCode, setPostalCode] =useState(shippingAddress.postalCode)\r\n    let [city, setCity] = useState(shippingAddress.city?[shippingAddress.city]:[]);\r\n    let [province, setProvince] = useState(shippingAddress.province?[shippingAddress.province]:[]);\r\n    console.log(shippingAddress.province)\r\n    console.log(province)\r\n    const [phone, setPhone] =useState(shippingAddress.phone)\r\n\r\n    const dispatch =useDispatch()\r\n\r\n    const userAddress= useSelector(state=>state.userAddress)\r\n    const {loading, error, address} = userAddress\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    useEffect(()=>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        else{\r\n            console.log(address)\r\n            if(!address.addressLine1){\r\n                dispatch(getUserAddress('profile'))\r\n            }\r\n            else{\r\n                setAddressLine1(address.addressLine1!==\"\"?address.addressLine1:addressLine1)\r\n                setAddressLine2(address.addressLine2!==\"\"?address.addressLine2:addressLine2)\r\n                setPostalCode(address.zip!==\"\"?address.zip:postalCode)\r\n                setCity(address.city!==\"\"?[address.city]:city)\r\n                setProvince(address.province!==\"\"?[address.province]:province)\r\n                setPhone(address.phone!==\"\"?address.phone:phone)\r\n            }\r\n        }\r\n    },[dispatch, history, userInfo, address])\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        city=city[0]\r\n        province=province[0]\r\n        dispatch(saveShippingAddress({addressLine1,addressLine2,city,postalCode,province,phone}))\r\n        history.push('/payment')\r\n    }\r\n    const sub=(a)=>{\r\n        console.log(a[0])\r\n        setProvince(a)\r\n    }\r\n    const subCity=(a)=>{\r\n        if(typeof a[0] ==='object'){\r\n            console.log(a[0].label)\r\n            setCity([a[0].label])\r\n        }\r\n        else{\r\n            console.log(a[0])\r\n            setCity(a)\r\n        }\r\n    }\r\n\r\n    const cities=['Negombo', 'Colombo','Gampaha']\r\n    const provinces=['Western','Southern','Central','Uva','Eastern','Sabaragamuwa','North','North Western','North Central']\r\n\r\n  return (\r\n      <FormContainer>\r\n          <CheckoutSteps step1 step2/>\r\n          <h2>Delivery Details</h2>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='phone'>\r\n                  <Form.Label>Contact Number</Form.Label>\r\n                  <Form.Control type='tel' required placeholder='Contact Number' value={phone} onChange={(e)=>setPhone(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='addressLine1'>\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Address Line1' value={addressLine1} onChange={(e)=>setAddressLine1(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='addressLine2'>\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Address Line2' value={addressLine2} onChange={(e)=>setAddressLine2(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='city'>\r\n                  <Form.Label>City</Form.Label>\r\n                  {/* <Form.Control type='text' required placeholder='Enter City' value={city} onChange={(e)=>setCity(e.target.value)}></Form.Control> */}\r\n                  {/* <Typeahead onChange={setCity} options={cities} placeholder=\"Choose a City...\" selected={city}/> */}\r\n                  <Typeahead allowNew onChange={(selected)=>subCity(selected)} options={cities} selected={city} placeholder=\"Choose a City...\"/>\r\n              </Form.Group>\r\n              <Form.Group controlId='postalCode'>\r\n                  <Form.Label>Postal Code</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Postal Code' value={postalCode} onChange={(e)=>setPostalCode(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='province'>\r\n                  <Form.Label>Province</Form.Label>\r\n                  {/* <Form.Control type='text' required placeholder='Enter Country' value={country} onChange={(e)=>setCountry(e.target.value)}></Form.Control> */}\r\n                  <Typeahead onChange={(selected)=>sub(selected)} options={provinces} selected={province} placeholder=\"Choose a province...\"/>\r\n              </Form.Group>\r\n              {/* <Typeahead onChange={setSelected} options={['yu']} placeholder=\"Choose a state...\" selected={selected}/> */}\r\n              \r\n              <Button type='submit' variant='primary'>Continue</Button>\r\n          </Form>\r\n      </FormContainer>\r\n  )\r\n}\r\nexport default ShippingScreen;","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\CartScreen.js",["268","269","270"],"import React, {useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link} from \"react-router-dom\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { addToCart , removeFromCart} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form\r\n} from \"react-bootstrap\";\r\n\r\nconst CartScreen = ({match,location,history})=>{\r\n    const Id = match.params.id?match.params.id.split('-'):[]\r\n    const productId=Id[0]\r\n    const variantId=Id[1]\r\n    const qty = location.search ? Number(location.search.split('=')[1]):1\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state=>state.cart)\r\n    const {cartItems} = cart\r\n    console.log(cartItems)\r\n    useEffect(()=>{\r\n        if(productId){\r\n            dispatch(addToCart(productId,variantId,qty))\r\n        }\r\n    },[dispatch,productId,qty])\r\n\r\n    console.log(cart)\r\n\r\n    const removeFromCartHandler=(product_id,variant_id)=>{\r\n        dispatch(removeFromCart(product_id,variant_id))\r\n    }\r\n    const checkoutHandler =()=>{\r\n        history.push('/login?redirect=shipping')\r\n        // history.push('/shipping')\r\n    }\r\n\r\n    return <Row>\r\n        <Col md={8}>\r\n            <h1>Shopping Cart</h1>\r\n            {cartItems.length===0 ? (<Message Children={\"Your cart is empty\"}>Your cart is empty<Link to='/'>Go Back</Link></Message>):(<ListGroup variant='flush'>\r\n                {cartItems.map(item=>(\r\n                    <ListGroup.Item key={item.product}>\r\n                        <Row>\r\n                            <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                ${item.price}\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Form.Control as='select' value={item.qty} onChange={(e)=>dispatch(addToCart(item.product_id,item.variant_id,Number(e.target.value)))}>\r\n                                    {[...Array(item.noStock).keys()].map((x)=>(\r\n                                        <option key={x+1} value={x+1}>{x+1}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Button type='button' variant='light' onClick={()=>removeFromCartHandler(item.product_id,item.variant_id)}>\r\n                                    <i className='fas fa-trash'></i>\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                ))}\r\n            </ListGroup>)}\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Subtotal ({cartItems.reduce((acc,item)=>acc+item.qty, 0)})items</h2>\r\n                        LKR {cartItems.reduce((acc,item)=>acc + item.qty * item.price, 0).toFixed(2)}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n}\r\nexport default CartScreen;\r\n\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\OrderListScreen.js",["271"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteOrder, deliverOrder, listOrders } from '../action/orderActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { ORDER_DELETE_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\nexport default function OrderListScreen(props) {\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const orderDelete = useSelector((state) => state.orderDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = orderDelete;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const {\r\n    loading: loadingDeliver,\r\n    error: errorDeliver,\r\n    success: successDeliver,\r\n  } = orderDeliver;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successDelete) {\r\n      dispatch({ type: ORDER_DELETE_RESET });\r\n    }\r\n    if (successDeliver) {\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      // props.history.push(`/product/${createdProduct.product_id}/edit`);\r\n    }\r\n    dispatch(listOrders());\r\n  }, [dispatch, successDelete, successDeliver, props.history]);\r\n  // useEffect(() => {\r\n  //   dispatch({ type: ORDER_DELIVER_RESET });\r\n  //   dispatch(listOrders());\r\n  // }, [dispatch, successDeliver]);\r\n\r\n  \r\n  const deleteHandler = (order) => {\r\n    if (window.confirm('Are you sure to delete?')) {\r\n      dispatch(deleteOrder(order._id));\r\n    }\r\n  };\r\n  const deliverHandler = (order) => {\r\n    if (window.confirm('Are you sure to deliver?')) {\r\n      dispatch(deliverOrder(order._id));\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <h1>Orders</h1>\r\n      {loadingDelete && <Loader></Loader>}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingDeliver && <Loader></Loader>}\r\n      {errorDeliver && <Message variant=\"danger\">{errorDeliver}</Message>}\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>USER TYPE</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL PAID</th>\r\n              <th>DELIVERY STATUS</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.order_id}>\r\n                <td>{order.order_id}</td>\r\n                <td>{order.user}</td>\r\n                <td>{order.customer_type}</td>\r\n                <td>{order.order_date ? order.order_date.substring(0, 10) : 'No'}</td>\r\n                <td>{order.total_payment}</td>\r\n                <td>{order.delivery_status}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() => {\r\n                      props.history.push(`/order/${order._id}`);\r\n                    }}\r\n                  >\r\n                    Details\r\n                  </button>\r\n                  {/* <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deleteHandler(order)}\r\n                    >\r\n                      Delete\r\n                    </button> */}\r\n                    {order.delivery_status !== \"delivered\" && \r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deliverHandler(order)}\r\n                    >\r\n                      Mark As Delivered\r\n                    </button>\r\n                    }\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProductListScreen.js",["272","273"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  createProduct,\r\n  deleteProduct,\r\n  listProductsAdmin,\r\n} from \"../action/productAction\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport {\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_DELETE_RESET,\r\n} from \"../constants/productConstants\";\r\n\r\nexport default function ProductListScreen(props) {\r\n  const productListAdmin = useSelector((state) => state.productListAdmin);\r\n  const { loading, error, products } = productListAdmin;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successCreate) {\r\n      dispatch({ type: PRODUCT_CREATE_RESET });\r\n      // props.history.push(`/product/${createdProduct.product_id}/edit`);\r\n    }\r\n    if (successDelete) {\r\n      dispatch({ type: PRODUCT_DELETE_RESET });\r\n    }\r\n    dispatch(listProductsAdmin());\r\n  }, [ dispatch, props.history, successCreate, successDelete]);\r\n  // createdProduct,\r\n  const deleteHandler = (product) => {\r\n    if (window.confirm(\"Are you sure to delete?\")) {\r\n      dispatch(deleteProduct(product.product_id));\r\n    }\r\n  };\r\n  const createHandler = () => {\r\n    props.history.push(`/newproduct/create`)\r\n    // dispatch(createProduct());\r\n  };\r\n  return (\r\n    <div className=\"admin\">\r\n      <div className=\"row\">\r\n        <h1>Products</h1>\r\n        <button type=\"button\" className=\"primary\" onClick={createHandler}>\r\n          Create Product\r\n        </button>\r\n      </div>\r\n\r\n      {loadingDelete && <Loader></Loader>}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader></Loader>}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>CATEGORY</th>\r\n              <th>SUB-CATEGORY</th>\r\n              <th>BRAND</th>\r\n              <th>SUPPLIER</th>\r\n              <th>WEIGHT</th>\r\n              <th>DIMENSION</th>\r\n              <th>DESCRIPTION</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product.product_id}>\r\n                <td>{product.product_id}</td>\r\n                <td>{product.product_name}</td>\r\n                <td>{product.category_name}</td>\r\n                <td>{product.subcat_name}</td>\r\n                <td>{product.brand}</td>\r\n                <td>{product.supplier_name}</td>\r\n                <td>{product.weight}</td>\r\n                <td>{product.dimension}</td>\r\n                <td>{product.description}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() =>\r\n                      props.history.push(`/product/${product.product_id}/edit`)\r\n                    }\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() => deleteHandler(product)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() =>\r\n                      props.history.push(`/product/${product.product_id}/variantlist`)\r\n                    }\r\n                  >\r\n                    Variants\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\VariantListScreen.js",["274"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    createVariant,\r\n    deleteVariant,\r\n    listVariants,\r\n} from \"../action/productAction\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { VARIANT_CREATE_RESET, VARIANT_DELETE_RESET } from \"../constants/variantConstants\";\r\n\r\nexport default function VariantListScreen(props) {\r\n    const productId = props.match.params.id;\r\n\r\n    const variantList = useSelector((state) => state.variantList);\r\n    const { loading, error, variants } = variantList;\r\n\r\n  const variantCreate = useSelector((state) => state.variantCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    variant: createdVariant,\r\n  } = variantCreate;\r\n\r\n  const variantDelete = useSelector((state) => state.variantDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = variantDelete;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successCreate) {\r\n      dispatch({ type: VARIANT_CREATE_RESET });\r\n      props.history.push(`/product/${productId}/variant/${createdVariant.variant_id}/edit`);\r\n    }\r\n    if (successDelete) {\r\n      dispatch({ type: VARIANT_DELETE_RESET });\r\n    }\r\n    dispatch(listVariants(productId));\r\n  }, [productId, successCreate,successDelete, createVariant, dispatch, props.history]);\r\n\r\n  const deleteHandler = (variant) => {\r\n    if (window.confirm(\"Are you sure to delete?\")) {\r\n      dispatch(deleteVariant(variant.product_id,variant.variant_id));\r\n    }\r\n  };\r\n  const createHandler = () => {\r\n    dispatch(createVariant(productId));\r\n  };\r\n  return (\r\n    <div className=\"admin\">\r\n      <div className=\"row\">\r\n        <h1>Variants List - Product {productId}</h1>\r\n        <button type=\"button\" className=\"primary\" onClick={createHandler}>\r\n          Create Variant\r\n        </button>\r\n      </div>\r\n\r\n      {loadingDelete && <Loader></Loader>}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader></Loader>}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>SKU</th>\r\n              <th>COLOR</th>\r\n              <th>SIZE</th>\r\n              <th>PRICE</th>\r\n              <th>OFFER</th>\r\n              <th>IMAGE_URL</th>\r\n              <th>NO_STOCK</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {variants.map((variant) => (\r\n              <tr key={variant.variant_id}>\r\n                <td>{variant.variant_id}</td>\r\n                <td>{variant.SKU}</td>\r\n                <td>{variant.color}</td>\r\n                <td>{variant.size}</td>\r\n                <td>{variant.price}</td>\r\n                <td>{variant.offer}</td>\r\n                <td>{variant.image_url}</td>\r\n                <td>{variant.no_stock}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() =>\r\n                      props.history.push(`/product/${productId}/variant/${variant.variant_id}/edit`)\r\n                    }\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() => deleteHandler(variant)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js",["275","276","277","278","279","280"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  detailsProductAdmin,\r\n  updateProduct\r\n} from '../action/productAction';\r\nimport { listCategories } from '../action/categoryActions';\r\nimport { listSubcategories } from '../action/subcategoryActions';\r\nimport { listSuppliers } from '../action/supplierActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nexport default function ProductEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const [product_name, setProduct_name] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [weight, setWeight] = useState('');\r\n  const [dimension, setDimension] = useState('');\r\n  const [category_name, setCategory_name] = useState('');\r\n  const [subcat_name, setSubcat_name] = useState('');\r\n  const [supplier_name, setSupplier_name] = useState('');\r\n\r\n  const productDetailsAdmin = useSelector((state) => state.productDetailsAdmin);\r\n  const { loading, error, product } = productDetailsAdmin;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  const categoryList = useSelector((state) => state.categoryList);\r\n  const { loading: catloading, error: caterror, categories:categories } = categoryList;\r\n\r\n  const subcategoryList = useSelector((state) => state.subcategoryList);\r\n  const { loading: scatloading, error: scaterror, subcategories } = subcategoryList;\r\n  \r\n  const supplierList = useSelector((state) => state.supplierList);\r\n  const { loading: suploading, error: superror, suppliers } = supplierList;\r\n\r\n  let categoryId = null;\r\n  categories.forEach(c => {\r\n    if (category_name === c.category_name){\r\n      categoryId = c.category_id;\r\n    }\r\n  })\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push('/productlist');\r\n    }\r\n    if (!catloading && !caterror) {\r\n      dispatch(listCategories());\r\n    }\r\n    if (categoryId !== null || !scatloading && !scaterror) {\r\n      dispatch(listSubcategories(categoryId));\r\n    }\r\n    if (!suploading && !superror) {\r\n      dispatch(listSuppliers());\r\n    }\r\n    if (!product || product.product_id!=productId || successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      dispatch(detailsProductAdmin(productId));\r\n    } else {\r\n      setProduct_name(product.product_name);\r\n      setDescription(product.description);\r\n      setWeight(product.weight);\r\n      setDimension(product.dimension);\r\n      setBrand(product.brand);\r\n      setCategory_name(product.category_name);\r\n      setSubcat_name(product.subcat_name);\r\n      setSupplier_name(product.supplier_name);\r\n    }\r\n  }, [product, dispatch, productId, successUpdate, props.history]);\r\n\r\n  useEffect(() => {\r\n    if (categoryId !== null) {\r\n      dispatch(listSubcategories(categoryId));\r\n    }\r\n  }, [categoryId, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        product_id: productId,\r\n        product_name,\r\n        description,\r\n        weight,\r\n        dimension,\r\n        brand,\r\n        category_name,\r\n        subcat_name,\r\n        supplier_name,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit Product {productId}</h1>\r\n        </div>\r\n        {loadingUpdate && <Loader></Loader>}\r\n        {/* {catloading && <Loader></Loader>} */}\r\n        {/* {caterror && <Message variant=\"danger\">{caterror}</Message>} */}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"product_name\">Product_name</label>\r\n              <input\r\n                id=\"product_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Product name\"\r\n                value={product_name}\r\n                onChange={(e) => setProduct_name(e.target.value)}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                rows=\"3\"\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></textarea>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"weight\">Weight</label>\r\n              <input\r\n                id=\"weight\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Weight\"\r\n                value={weight}\r\n                onChange={(e) => setWeight(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"dimension\">Dimension</label>\r\n              <input\r\n                id=\"dimension\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Dimension\"\r\n                value={dimension}\r\n                onChange={(e) => setDimension(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input\r\n                id=\"brand\"\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"category_name\">Category</label>\r\n              <select\r\n                id=\"category_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category\"\r\n                value={category_name}\r\n                onChange={(e) => setCategory_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the category</option>\r\n                {categories.map(category => <option key={category.category_id}> {category.category_name} </option> )}\r\n              </select>\r\n            </div>\r\n            {/* <div>\r\n              <label htmlFor=\"category_description\">Category_description</label>\r\n              <input\r\n                id=\"category_description\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category_description\"\r\n                value={category_description}\r\n                onChange={(e) => setCategory_description(e.target.value)}\r\n              ></input>\r\n            </div> */}\r\n            <div>\r\n              <label htmlFor=\"subcat_name\">Subcategory</label>\r\n              <select\r\n                id=\"subcat_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Subcategory_name\"\r\n                value={subcat_name}\r\n                onChange={(e) => setSubcat_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the subcategory</option>\r\n                {subcategories.map(subcategory => <option key={subcategory.subcat_id}> {subcategory.subcat_name} </option> )}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"supplier_name\">Supplier</label>\r\n              <select\r\n                id=\"supplier_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Supplier_name\"\r\n                value={supplier_name}\r\n                onChange={(e) => setSupplier_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the supplier</option>\r\n                {suppliers.map(supplier => <option key={supplier.supplier_id}> {supplier.supplier_name} </option> )}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label></label>\r\n              <button className=\"primary\" type=\"submit\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\Report1Screen.js",["281"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function Report1Screen(props) {\r\n  const [year, setYear] = useState('');\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [categoryreports, setCategoryreports] = useState('');\r\n  let l = []\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    async function getCategoryReports(year){\r\n      const response = await axios.get(`/api/reports/report-1/${year}`);\r\n      const res = response.data;\r\n      for (var g in res){\r\n        let k = []\r\n        k.push(g)\r\n        var n = res[g]\r\n        for (var h in n){\r\n          k.push(n[h])\r\n        }\r\n        l.push(k)\r\n      }\r\n      setCategoryreports(l)\r\n      setSubmitted(true);\r\n    }\r\n    getCategoryReports(year);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className=\"admin\">\r\n      <h1>Report 1 - Quarterly sales report</h1>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <label htmlFor=\"year\">Input Year</label>\r\n          <input\r\n            id=\"year\"\r\n            type=\"number\"\r\n            placeholder=\"Enter a year\"\r\n            value={year}\r\n            onChange={(e) => setYear(e.target.value)}\r\n            required\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label></label>\r\n          <button className=\"primary\" type=\"submit\">\r\n            Show Report\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {submitted &&\r\n      <div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>CATEGORY</th>\r\n            <th>Q1 SALES</th>\r\n            <th>Q2 SALES</th>\r\n            <th>Q3 SALES</th>\r\n            <th>Q4 SALES</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {categoryreports.map(r =>\r\n          <tr key={r}>\r\n            <td>{r[0]}</td>\r\n            <td>{r[1]}</td>\r\n            <td>{r[2]}</td>\r\n            <td>{r[3]}</td>\r\n            <td>{r[4]}</td>\r\n          </tr>\r\n        )}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n      }\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\Report3Screen.js",["282"],"// - Product category with most orders\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function Report3Screen(props) {\r\n    const [submitted, setSubmitted] = useState(false);\r\n    // const [from, setFrom] = useState('');\r\n    // const [to, setTo] = useState('');\r\n    const [productcategoryreport, setProductcategoryreport] = useState('');\r\n    // let l = []\r\n  \r\n    const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      async function getProductCategoryReport(){\r\n        const response = await axios.get(`/api/reports/report-3`);\r\n        const res = response.data;\r\n        setProductcategoryreport(res)\r\n        setSubmitted(true);\r\n      }\r\n      getProductCategoryReport();\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <div className=\"admin\">\r\n            <h1>Report 3 - Product category with most orders</h1>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n            <div>\r\n                <label></label>\r\n                <button className=\"primary\" type=\"submit\">\r\n                Show\r\n                </button>\r\n            </div>\r\n            </form>\r\n            {submitted &&\r\n            <div>\r\n                <h2>\r\n                Product Category: {productcategoryreport}\r\n                </h2>\r\n            </div>\r\n            }\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\Report2Screen.js",["283","284","285"],"// - Products with most number of sales in a given period\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function Report2Screen(props) {\r\n    const [from, setFrom] = useState('');\r\n    const [to, setTo] = useState('');\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [productreport, setProductreport] = useState('');\r\n    // let l = []\r\n  \r\n    const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      async function getProductReport(from,to){\r\n        const response = await axios.get(`/api/reports/report-2`,{from,to});\r\n        console.log(response)\r\n        // const res = response.data;\r\n        // for (var g in res){\r\n        //   let k = []\r\n        //   k.push(g)\r\n        //   var n = res[g]\r\n        //   for (var h in n){\r\n        //     k.push(n[h])\r\n        //   }\r\n        //   l.push(k)\r\n        // }\r\n        // setProductreport(l)\r\n        setSubmitted(true);\r\n      }\r\n      getProductReport(from,to);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <div className=\"admin\">\r\n            <h1>Report 2 - Products with most number of sales</h1>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n            <div>\r\n                <label htmlFor=\"from\">From</label>\r\n                <input\r\n                id=\"from\"\r\n                type=\"date\"\r\n                placeholder=\"from\"\r\n                value={from}\r\n                onChange={(e) => setFrom(e.target.value)}\r\n                required\r\n                ></input>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"to\">To</label>\r\n                <input\r\n                id=\"to\"\r\n                type=\"date\"\r\n                placeholder=\"to\"\r\n                value={to}\r\n                onChange={(e) => setTo(e.target.value)}\r\n                required\r\n                ></input>\r\n            </div>\r\n            <div>\r\n                <label></label>\r\n                <button className=\"primary\" type=\"submit\">\r\n                Show\r\n                </button>\r\n            </div>\r\n            </form>\r\n            {submitted &&\r\n            <div>\r\n                <p>\r\n                    TABLE\r\n                </p>\r\n            </div>\r\n            }\r\n        </div>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\n\r\n// {submitted &&\r\n// <div>\r\n// <table className=\"table\">\r\n//     <thead>\r\n//     <tr>\r\n//         <th>CATEGORY</th>\r\n//         <th>Q1 SALES</th>\r\n//         <th>Q2 SALES</th>\r\n//         <th>Q3 SALES</th>\r\n//         <th>Q4 SALES</th>\r\n//     </tr>\r\n//     </thead>\r\n//     <tbody>\r\n//     {categoryreports.map(r =>\r\n//     <tr key={r}>\r\n//         <td>{r[0]}</td>\r\n//         <td>{r[1]}</td>\r\n//         <td>{r[2]}</td>\r\n//         <td>{r[3]}</td>\r\n//         <td>{r[4]}</td>\r\n//     </tr>\r\n//     )}\r\n//     </tbody>\r\n// </table>\r\n// </div>\r\n// }","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\Report4Screen.js",["286","287","288","289","290","291","292","293"],"// - Given a product, time period with most interest to it\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProductsAdmin } from '../action/productAction';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\n\r\nexport default function Report4Screen(props) {\r\n    const [product_name, setProduct_name] = useState('');\r\n    const [timeperiod, setTimeperiod] = useState(null);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [producttimereport, setProducttimereport] = useState('');\r\n        \r\n    const productListAdmin = useSelector((state) => state.productListAdmin);\r\n    const { loading, error, products } = productListAdmin;\r\n\r\n    let productId = null;\r\n    if(products){\r\n        products.forEach(p => {\r\n            if (product_name === p.product_name){\r\n            productId = p.product_id;\r\n            }\r\n        })\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(listProductsAdmin());\r\n    },[]);\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        async function getProductTimeReport(productId){\r\n            // const response = await axios.get(`/api/reports/report-4`,productId);\r\n            // console.log(response);\r\n            // const res = response.data;\r\n            // setProducttimereport(res)\r\n            setSubmitted(true);\r\n        }\r\n        getProductTimeReport();\r\n    };\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"admin\">\r\n            <h1>Report 4 - most interest time period to a product</h1>\r\n            {loading ? (\r\n                <Loader></Loader>\r\n            ) : error ? (\r\n                <Message variant=\"danger\">{error}</Message>\r\n            ) : (\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <label htmlFor=\"product_name\">Product</label>\r\n                    <select\r\n                    id=\"product_name\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter product\"\r\n                    value={product_name}\r\n                    onChange={(e) => setProduct_name(e.target.value)}\r\n                    required\r\n                    >\r\n                    <option value=\"\" disabled selected>select product</option>\r\n                    {products.map(product => <option key={product.product_id}> {product.product_name} </option> )}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label></label>\r\n                    <button className=\"primary\" type=\"submit\">\r\n                    Show\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            // {timeperiod &&\r\n            //     <div className=\"\">\r\n            //         <h1>Product {productId}</h1>\r\n            //         <div className=\"\">\r\n            //             <p>timeperiod</p>\r\n            //             <p>timeperiod</p>\r\n            //         </div>\r\n            //     </div>\r\n            // }\r\n            )}\r\n            \r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\n//     return (\r\n//         <>\r\n//         <div className=\"admin\">\r\n//             <h1>Report3 - Product category with most orders</h1>\r\n//             <form className=\"form\" onSubmit={submitHandler}>\r\n//             <div>\r\n//                 <label></label>\r\n//                 <button className=\"primary\" type=\"submit\">\r\n//                 Show\r\n//                 </button>\r\n//             </div>\r\n//             </form>\r\n//             {submitted &&\r\n//             <div>\r\n//                 <h2>\r\n//                 Product Category: {productcategoryreport}\r\n//                 </h2>\r\n//             </div>\r\n//             }\r\n//         </div>\r\n//         </>\r\n//     );\r\n// };","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js",["294"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsVariant, updateVariant } from '../action/productAction';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { VARIANT_UPDATE_RESET } from '../constants/variantConstants';\r\n\r\nexport default function VariantEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const variantId = props.match.params.vid;\r\n  const [SKU, setSKU] = useState('');\r\n  const [image_url, setImage_url] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [offer, setOffer] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [no_stock, setNo_stock] = useState('');\r\n  \r\n    const variantDetails = useSelector((state) => state.variantDetails);\r\n    const { loading, error, variant } = variantDetails;\r\n\r\n    const variantUpdate = useSelector((state) => state.variantUpdate);\r\n    const {\r\n      loading: loadingUpdate,\r\n      error: errorUpdate,\r\n      success: successUpdate,\r\n    } = variantUpdate;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push(`/product/${productId}/variantlist`);\r\n    }\r\n    if (!variant || (variant.variant_id != variantId || successUpdate)) {\r\n      dispatch({ type: VARIANT_UPDATE_RESET });\r\n      dispatch(detailsVariant(productId,variantId));\r\n    } else {\r\n      setSKU(variant.SKU);\r\n      setPrice(variant.price);\r\n      setOffer(variant.offer);\r\n      setColor(variant.color);\r\n      setSize(variant.size);\r\n      setNo_stock(variant.no_stock);\r\n      setImage_url(variant.image_url);\r\n    }\r\n  },[variant, dispatch, productId, variantId, successUpdate, props.history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n        updateVariant(\r\n            {\r\n              variant_id: variantId,\r\n              product_id: productId,\r\n              SKU,\r\n              price,\r\n              offer,\r\n              color,\r\n              size,\r\n              no_stock,\r\n              image_url,\r\n            }\r\n        )\r\n    );\r\n  };\r\n\r\n// const [loadingUpload, setLoadingUpload] = useState(false);\r\n// const [errorUpload, setErrorUpload] = useState('');\r\n// const userSignin = useSelector((state) => state.userSignin);\r\n// const { userInfo } = userSignin;\r\n// const uploadFileHandler = async (e) => {\r\n//   const file = e.target.files[0];\r\n//   const bodyFormData = new FormData();\r\n//   bodyFormData.append('image_url', file);\r\n//   setLoadingUpload(true);\r\n//   try {\r\n//     const { data } = await Axios.post('/api/uploads', bodyFormData);\r\n//     setImage_url(data);\r\n//     setLoadingUpload(false);\r\n//   } catch (error) {\r\n//     setErrorUpload(error.message);\r\n//     setLoadingUpload(false);\r\n//   }\r\n// };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit Product {productId} Variant {variantId} </h1>\r\n        </div>\r\n        {loadingUpdate && <Loader></Loader>}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <label htmlFor=\"SKU\">SKU</label>\r\n            <input\r\n              id=\"SKU\"\r\n              type=\"text\"\r\n              placeholder=\"Enter SKU\"\r\n              value={SKU}\r\n              onChange={(e) => setSKU(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"image_url\">image_url</label>\r\n            <input\r\n              id=\"image_url\"\r\n              type=\"text\"\r\n              placeholder=\"Enter image_url\"\r\n              value={image_url}\r\n              onChange={(e) => setImage_url(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          {/* <div>\r\n            <label htmlFor=\"product_imageFile\">product_image File</label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"product_imageFile\"\r\n              label=\"Choose product_image\"\r\n              onChange={uploadFileHandler}\r\n            ></input>\r\n            {loadingUpload && <Loader></Loader>}\r\n            {errorUpload && (\r\n              <Message variant=\"danger\">{errorUpload}</Message>\r\n            )}\r\n          </div> */}\r\n          <div>\r\n            <label htmlFor=\"price\">Price</label>\r\n            <input\r\n              id=\"price\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Price\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"offer\">Offer</label>\r\n            <input\r\n              id=\"offer\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Offer\"\r\n              value={offer}\r\n              onChange={(e) => setOffer(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"color\">Color</label>\r\n            <input\r\n              id=\"color\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Color\"\r\n              value={color}\r\n              onChange={(e) => setColor(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"size\">Size</label>\r\n            <input\r\n              id=\"size\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Size\"\r\n              value={size}\r\n              onChange={(e) => setSize(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"no_stock\">Count In Stock</label>\r\n            <input\r\n              id=\"no_stock\"\r\n              type=\"text\"\r\n              placeholder=\"Enter no_stock\"\r\n              value={no_stock}\r\n              onChange={(e) => setNo_stock(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div>\r\n            <label></label>\r\n            <button className=\"primary\" type=\"submit\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\Report5Screen.js",["295"],"// - Customer - order report\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function Report5Screen(props) {\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [orderreports, setOrderreports] = useState('');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    async function getOrderReports(){\r\n      const response = await axios.get(`/api/reports/report-5`);\r\n      const res = response.data;\r\n      console.log(res);\r\n      setOrderreports(res)\r\n      setSubmitted(true);\r\n    }\r\n    getOrderReports();\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className=\"admin\">\r\n      <h1>Report 5 - Order report</h1>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n            <label></label>\r\n            <button className=\"primary\" type=\"submit\">\r\n            Show\r\n            </button>\r\n        </div>\r\n      </form>\r\n      {submitted &&\r\n      <div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ORDER ID</th>\r\n            <th>CUSTOMER ID</th>\r\n            <th>CUSTOMER NAME</th>\r\n            <th>CUSTOMER TYPE</th>\r\n            <th>ORDER DATE</th>\r\n            <th>TOTAL PAYMENT</th>\r\n            <th>PAYMENT METHOD</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {orderreports.map(oreport =>\r\n          <tr key={oreport.ordred_id}>\r\n            <td>{oreport.order_id}</td>\r\n            <td>{oreport.customer_id}</td>\r\n            <td>{oreport.customer_name}</td>\r\n            <td>{oreport.customer_type}</td>\r\n            <td>{oreport.order_date.substring(0, 10)}</td>\r\n            <td>{oreport.total_payment}</td>\r\n            <td>{oreport.payment_method}</td>\r\n          </tr>\r\n        )}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n      }\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProductCreateScreen.js",["296","297","298","299"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listCategories } from '../action/categoryActions';\r\nimport { createProduct } from '../action/productAction';\r\nimport { listSubcategories } from '../action/subcategoryActions';\r\nimport { listSuppliers } from '../action/supplierActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\nexport default function ProductCreateScreen(props) {\r\n  const [product_name, setProduct_name] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [weight, setWeight] = useState('');\r\n  const [dimension, setDimension] = useState('');\r\n  const [category_name, setCategory_name] = useState('');\r\n  const [subcat_name, setSubcat_name] = useState('');\r\n  const [supplier_name, setSupplier_name] = useState('');\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading,\r\n    error,\r\n    success: successCreate,\r\n  } = productCreate;\r\n\r\n  const categoryList = useSelector((state) => state.categoryList);\r\n  const { loading: catloading, error: caterror, categories:categories } = categoryList;\r\n\r\n  const subcategoryList = useSelector((state) => state.subcategoryList);\r\n  const { loading: scatloading, error: scaterror, subcategories } = subcategoryList;\r\n  \r\n  const supplierList = useSelector((state) => state.supplierList);\r\n  const { loading: suploading, error: superror, suppliers } = supplierList;\r\n\r\n  let categoryId = null;\r\n  categories.forEach(c => {\r\n    if (category_name === c.category_name){\r\n      categoryId = c.category_id;\r\n    }\r\n  })\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successCreate) {\r\n        dispatch({ type: PRODUCT_CREATE_RESET });\r\n        props.history.push('/productlist');\r\n    }\r\n    if (!catloading && !caterror) {\r\n        dispatch(listCategories());\r\n    }\r\n    if (categoryId !== null || !scatloading && !scaterror) {\r\n        dispatch(listSubcategories(categoryId));\r\n    }\r\n    if (!suploading && !superror) {\r\n        dispatch(listSuppliers());\r\n    }\r\n    // if (!product || product.product_id!=productId || successUpdate) {\r\n    //   dispatch({ type: PRODUCT_UPDATE_RESET });\r\n    //   dispatch(detailsProductAdmin(productId));\r\n    // }\r\n    // else {\r\n    //   setProduct_name(product.product_name);\r\n    //   setDescription(product.description);\r\n    //   setWeight(product.weight);\r\n    //   setDimension(product.dimension);\r\n    //   setBrand(product.brand);\r\n    //   setCategory_name(product.category_name);\r\n    //   setSubcat_name(product.subcat_name);\r\n    //   setSupplier_name(product.supplier_name);\r\n    // }\r\n  }, [dispatch, successCreate, props.history]);\r\n\r\n  useEffect(() => {\r\n    if (categoryId !== null) {\r\n      dispatch(listSubcategories(categoryId));\r\n    }\r\n  }, [categoryId, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n        createProduct({\r\n        product_name,\r\n        description,\r\n        weight,\r\n        dimension,\r\n        brand,\r\n        category_name,\r\n        subcat_name,\r\n        supplier_name,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Create New Product</h1>\r\n        </div>\r\n        {/* {loadingUpdate && <Loader></Loader>} */}\r\n        {/* {catloading && <Loader></Loader>} */}\r\n        {/* {caterror && <Message variant=\"danger\">{caterror}</Message>} */}\r\n        {/* {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>} */}\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"product_name\">Product_name</label>\r\n              <input\r\n                id=\"product_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Product name\"\r\n                value={product_name}\r\n                onChange={(e) => setProduct_name(e.target.value)}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                rows=\"3\"\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></textarea>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"weight\">Weight</label>\r\n              <input\r\n                id=\"weight\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Weight\"\r\n                value={weight}\r\n                onChange={(e) => setWeight(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"dimension\">Dimension</label>\r\n              <input\r\n                id=\"dimension\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Dimension\"\r\n                value={dimension}\r\n                onChange={(e) => setDimension(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input\r\n                id=\"brand\"\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"category_name\">Category</label>\r\n              <select\r\n                id=\"category_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category\"\r\n                value={category_name}\r\n                onChange={(e) => setCategory_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the category</option>\r\n                {categories.map(category => <option key={category.category_id}> {category.category_name} </option> )}\r\n              </select>\r\n            </div>\r\n            {/* <div>\r\n              <label htmlFor=\"category_description\">Category_description</label>\r\n              <input\r\n                id=\"category_description\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category_description\"\r\n                value={category_description}\r\n                onChange={(e) => setCategory_description(e.target.value)}\r\n              ></input>\r\n            </div> */}\r\n            <div>\r\n              <label htmlFor=\"subcat_name\">Subcategory</label>\r\n              <select\r\n                id=\"subcat_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Subcategory_name\"\r\n                value={subcat_name}\r\n                onChange={(e) => setSubcat_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the subcategory</option>\r\n                {subcategories.map(subcategory => <option key={subcategory.subcat_id}> {subcategory.subcat_name} </option> )}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"supplier_name\">Supplier</label>\r\n              <select\r\n                id=\"supplier_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Supplier_name\"\r\n                value={supplier_name}\r\n                onChange={(e) => setSupplier_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the supplier</option>\r\n                {suppliers.map(supplier => <option key={supplier.supplier_id}> {supplier.supplier_name} </option> )}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label></label>\r\n              <button className=\"primary\" type=\"submit\">\r\n                Create\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Loader.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\FormContainer.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Product.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Rating.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\supplierConstants.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Message.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\variantConstants.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Variant.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\categoryConstants.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\productConstants.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\userConstants.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\cartAction.js",["300","301"],"import axios from 'axios'\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart=(product_id,variant_id,qty) => async (dispatch,getState)=>{\r\n    const {data}=await axios.get(`/api/products/${product_id}`)\r\n    console.log(data)\r\n    if(getState().userLogin){\r\n        \r\n        const {userLogin:{userInfo}}=getState()\r\n        const config={\r\n        headers:{\r\n            'Content-Type':'application/json',\r\n            Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const cart={product:product_id, variant:variant_id, quantity:qty, customerID:5}\r\n        console.log(cart)\r\n        const customerID=5\r\n        const {data1} =await axios.post('/api/cart/addItem',{product_id, variant_id, qty, customerID},config)\r\n    }\r\n\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload:{\r\n            product_id:data.Product.product_id,\r\n            variant_id:data.Onevariant.variantId,\r\n            name:data.Product.product_name,\r\n            image:data.image,\r\n            price:data.Onevariant.price,\r\n            noStock:data.Onevariant.noStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\n// export const addToCart = (product_id,variant_id,qty)=>async(dispatch,getState)=>{\r\n//     try{\r\n//         dispatch({\r\n//             type:CART_ADD_ITEM_REQUEST\r\n//         })\r\n//         const {userLogin:{userInfo}}=getState()\r\n//         const config={\r\n//             headers:{\r\n//                 'Content-Type':'application/json',\r\n//                 Authorization:`Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n//         const cart={product_id,variant_id,qty}\r\n//         const {data} =await axios.put(`/api/cart/addItem`,cart,config)\r\n//         dispatch({\r\n//             type:CART_ADD_ITEM_SUCCESS,\r\n//             payload:data\r\n//         })\r\n//     }\r\n//     catch(error){\r\n//         dispatch({\r\n//             type:CART_ADD_ITEM_FAIL,\r\n//             payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport const removeFromCart= (product_id,variant_id)=>(dispatch,getState)=>{\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload:{product_id,variant_id},\r\n    })\r\n    if(getState().userLogin){\r\n        console.log('dfdfdf')\r\n    }\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress= (data)=>async(dispatch,getState)=>{\r\n    const {data1} =await axios.post('/api/customer/5/shipment',data)\r\n    // console.log(data)\r\n    // if(getState().userLogin){\r\n    //     const {userLogin:{userInfo}}=getState()\r\n    //     const config={\r\n    //     headers:{\r\n    //         'Content-Type':'application/json',\r\n    //         Authorization:`Bearer ${userInfo.token}`\r\n    //         }\r\n    //     }\r\n    //     const {data} =await axios.post('/api/customer/5/shipment',data,config)\r\n    // }\r\n    dispatch({\r\n        type:CART_SAVE_SHIPPING_ADDRESS,\r\n        payload:data,\r\n    })\r\n    localStorage.setItem('shippingAddress',JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod= (data)=>(dispatch)=>{\r\n    dispatch({\r\n        type:CART_SAVE_PAYMENT_METHOD,\r\n        payload:data,\r\n    })\r\n    localStorage.setItem('paymentMethod',JSON.stringify(data))\r\n}\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\userActions.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\orderActions.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\productAction.js",["302","303","304"],"import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST1,\r\n  PRODUCT_DETAILS_SUCCESS1,\r\n  PRODUCT_DETAILS_FAIL1,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n} from '../constants/productConstants';\r\n\r\nimport {\r\n  VARIANT_LIST_REQUEST,\r\n  VARIANT_LIST_SUCCESS,\r\n  VARIANT_LIST_FAIL,\r\n  VARIANT_DETAILS_REQUEST,\r\n  VARIANT_DETAILS_SUCCESS,\r\n  VARIANT_DETAILS_FAIL,\r\n  VARIANT_CREATE_FAIL,\r\n  VARIANT_CREATE_REQUEST,\r\n  VARIANT_CREATE_SUCCESS,\r\n  VARIANT_UPDATE_REQUEST,\r\n  VARIANT_UPDATE_SUCCESS,\r\n  VARIANT_UPDATE_FAIL,\r\n  VARIANT_DELETE_REQUEST,\r\n  VARIANT_DELETE_FAIL,\r\n  VARIANT_DELETE_SUCCESS,\r\n} from '../constants/variantConstants';\r\n\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/products\");\r\n    console.log(data)\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const listProductsCat = (cat) => async (dispatch) => {\r\n  cat=cat.split(\"-\").join('/')\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(`/api/products/category/${cat}`);\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/products/${productId}`)\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsProductVariant = (productId, variants) => async (dispatch) => {\r\n  try{\r\n    const { data } = await axios.get(`/api/products/${productId}/${variants.color}/${variants.size}`);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS1, payload: data });\r\n    console.log('lllllllllll')\r\n  }\r\n  catch(error){\r\n    dispatch({\r\n            type: PRODUCT_DETAILS_FAIL1,\r\n            payload:variants\r\n          });\r\n  }\r\n}\r\n\r\n\r\n// export const detailsProductVariant = (productId, variants) => async (dispatch) => {\r\n\r\n//   dispatch({ type: PRODUCT_DETAILS_REQUEST1, payload: productId });\r\n//   try {\r\n//     console.log(variants)\r\n//     dispatch({ type: PRODUCT_DETAILS_REQUEST1 });\r\n//     const { data } = await axios.get(`/api/products/${productId}/${variants.color}/${variants.size}`);\r\n//     const h = { ...data, vary: variants };\r\n//     dispatch({ type: PRODUCT_DETAILS_SUCCESS1, payload: h });\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//     dispatch({\r\n//       type: PRODUCT_DETAILS_FAIL1,\r\n//       payload:error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const listProductsAdmin = () => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_LIST_REQUEST });\r\n  try {\r\n\r\n    const { data } = await axios.get(`/api/products/productlist`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const detailsProductAdmin = (productId) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  try {\r\n    \r\n    const {data} = await axios.get(`/api/products/productlist/${productId}`)\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data[0] });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = (newproduct) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n  try {\r\n\r\n    const { data } = await axios.post(`/api/products/addProduct`, newproduct);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_CREATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/products/productlist/edit/${product.product_id}`, product);\r\n\r\n    dispatch({ \r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = axios.delete(`/api/products/productlist/delete/${productId}`);\r\n\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const listVariants = (productId) => async (dispatch) =>{\r\n  dispatch({ type: VARIANT_LIST_REQUEST });\r\n  try {\r\n\r\n      // const { data } = await axios.get(\"/api/product/productlist/${productId}/variantlist\");\r\n      const { data } = await axios.get(`/api/products/productlist/${productId}/variants`);\r\n\r\n      dispatch({\r\n      type: VARIANT_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n  } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: VARIANT_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n  }\r\n}\r\n\r\nexport const detailsVariant = (productId,variantId) => async (dispatch) => {\r\n  dispatch({ type: VARIANT_DETAILS_REQUEST, payload: (productId,variantId) });\r\n  try {\r\n    \r\n    // const {data} = await axios.get(`/api/products/productlist/${productId}/variants/${variantId}`)\r\n    const {data} = await axios.get(`/api/products/productlist/${productId}/variants/${variantId}`)\r\n\r\n    dispatch({ type: VARIANT_DETAILS_SUCCESS, payload: data[0] });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: VARIANT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createVariant = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_CREATE_REQUEST });\r\n  try {\r\n    const newvariant = {\r\n      product_id: productId,\r\n      SKU:\"samplesku\",\r\n      price: null,\r\n      offer: null,\r\n      color: null,\r\n      size: null,\r\n      no_stock: null,\r\n      image_url: null,\r\n    };\r\n    const { data } = await axios.post(`/api/products/productlist/${productId}/variants/addvariant`, newvariant);\r\n    dispatch({\r\n      type: VARIANT_CREATE_SUCCESS,\r\n      payload: data.variant,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\nexport const updateVariant = (variant) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_UPDATE_REQUEST, payload: variant });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/products/productlist/${variant.product_id}/variants/editvariant/${variant.variant_id}`, variant);\r\n\r\n    dispatch({ type: VARIANT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\nexport const deleteVariant = (productId,variantId) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_DELETE_REQUEST, payload: (productId,variantId) });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = axios.delete(`/api/products/productlist/${productId}/variants/delete/${variantId}`);\r\n\r\n    dispatch({ type: VARIANT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_DELETE_FAIL, payload: message });\r\n  }\r\n};","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\subcategoryActions.js",["305"],"import axios from \"axios\";\r\nimport {\r\n  SUBCATEGORY_LIST_REQUEST,\r\n  SUBCATEGORY_LIST_SUCCESS,\r\n  SUBCATEGORY_LIST_FAIL,\r\n  SUBCATEGORY_DETAILS_REQUEST,\r\n  SUBCATEGORY_DETAILS_SUCCESS,\r\n  SUBCATEGORY_DETAILS_FAIL,\r\n  SUBCATEGORY_CREATE_FAIL,\r\n  SUBCATEGORY_CREATE_REQUEST,\r\n  SUBCATEGORY_CREATE_SUCCESS,\r\n  SUBCATEGORY_UPDATE_REQUEST,\r\n  SUBCATEGORY_UPDATE_SUCCESS,\r\n  SUBCATEGORY_UPDATE_FAIL,\r\n  SUBCATEGORY_DELETE_REQUEST,\r\n  SUBCATEGORY_DELETE_FAIL,\r\n  SUBCATEGORY_DELETE_SUCCESS,\r\n} from '../constants/subcategoryConstants';\r\n\r\n\r\nexport const listSubcategories = (categoryId) => async (dispatch) =>{\r\n    dispatch({ type: SUBCATEGORY_LIST_REQUEST });\r\n    try {\r\n      // const { data } = await axios.get(\"/api/categories/${categoryId}/subcategorylist\");\r\n      const { data } = await axios.get(`/api/categories/${categoryId}/subcategories`);\r\n\r\n      dispatch({\r\n      type: SUBCATEGORY_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({\r\n        type: SUBCATEGORY_LIST_FAIL,\r\n        payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    }\r\n  }\r\n  \r\nexport const detailsSubcategory = (categoryId,subcategoryId) => async (dispatch) => {\r\n  dispatch({ type: SUBCATEGORY_DETAILS_REQUEST, payload: (categoryId,subcategoryId) });\r\n  try {\r\n    dispatch({ type: SUBCATEGORY_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/categories/${categoryId}/subcategories/${subcategoryId}`)\r\n\r\n    dispatch({ type: SUBCATEGORY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: SUBCATEGORY_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createSubcategory = (categoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_CREATE_REQUEST });\r\n  try {\r\n\r\n    const newsubcategory = {\r\n        subcat_name: \"samplesubcategory\",\r\n        category_id: categoryId,\r\n    };\r\n    const { data } = await axios.post(`/api/categories/${categoryId}/subcategories/`,newsubcategory);\r\n\r\n\r\n    dispatch({\r\n      type: SUBCATEGORY_CREATE_SUCCESS,\r\n      payload: data.subcategory,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateSubcategory = (categoryId,subcategory) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_UPDATE_REQUEST, payload: subcategory });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/categories/${categoryId}/subcategories/${subcategory.subcategory_id}`, subcategory);\r\n\r\n    dispatch({ type: SUBCATEGORY_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteSubcategory = (categoryId,subcategoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_DELETE_REQUEST, payload: (categoryId,subcategoryId) });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/categories/${categoryId}/subcategories/${subcategoryId}`);\r\n\r\n    dispatch({ type: SUBCATEGORY_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\supplierActions.js",["306"],"import axios from \"axios\";\r\nimport {\r\n  SUPPLIER_LIST_REQUEST,\r\n  SUPPLIER_LIST_SUCCESS,\r\n  SUPPLIER_LIST_FAIL,\r\n  SUPPLIER_DETAILS_REQUEST,\r\n  SUPPLIER_DETAILS_SUCCESS,\r\n  SUPPLIER_DETAILS_FAIL,\r\n  SUPPLIER_CREATE_FAIL,\r\n  SUPPLIER_CREATE_REQUEST,\r\n  SUPPLIER_CREATE_SUCCESS,\r\n  SUPPLIER_UPDATE_REQUEST,\r\n  SUPPLIER_UPDATE_SUCCESS,\r\n  SUPPLIER_UPDATE_FAIL,\r\n  SUPPLIER_DELETE_REQUEST,\r\n  SUPPLIER_DELETE_FAIL,\r\n  SUPPLIER_DELETE_SUCCESS,\r\n} from '../constants/supplierConstants';\r\n\r\n\r\nexport const listSuppliers = () => async (dispatch) => {\r\n    dispatch({ type: SUPPLIER_LIST_REQUEST });\r\n    try {\r\n\r\n      const { data } = await axios.get(`/api/suppliers/`);\r\n\r\n      dispatch({\r\n      type: SUPPLIER_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: SUPPLIER_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n    }\r\n};\r\n  \r\nexport const detailsSupplier = (supplierId) => async (dispatch) => {\r\n  dispatch({ type: SUPPLIER_DETAILS_REQUEST, payload: supplierId });\r\n  try {\r\n    dispatch({ type: SUPPLIER_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/suppliers/${supplierId}`)\r\n\r\n    dispatch({ type: SUPPLIER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: SUPPLIER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createSupplier = () => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_CREATE_REQUEST });\r\n  try {\r\n\r\n    const newsupplier = {\r\n        supplier_name: \"samplesupplier\",\r\n        contact_number: null,\r\n        email: null,\r\n    };\r\n    const { data } = await axios.post('/api/suppliers/',newsupplier);\r\n\r\n\r\n    dispatch({\r\n      type: SUPPLIER_CREATE_SUCCESS,\r\n      payload: data.supplier,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateSupplier = (supplier) => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_UPDATE_REQUEST, payload: supplier });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/suppliers/${supplier.supplier_id}`, supplier);\r\n\r\n    dispatch({ type: SUPPLIER_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteSupplier = (supplierId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_DELETE_REQUEST, payload: supplierId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/suppliers/${supplierId}`);\r\n\r\n    dispatch({ type: SUPPLIER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_DELETE_FAIL, payload: message });\r\n  }\r\n};","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\categoryActions.js",["307"],"import axios from \"axios\";\r\nimport {\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_SUCCESS,\r\n  CATEGORY_LIST_FAIL,\r\n  CATEGORY_DETAILS_REQUEST,\r\n  CATEGORY_DETAILS_SUCCESS,\r\n  CATEGORY_DETAILS_FAIL,\r\n  CATEGORY_CREATE_FAIL,\r\n  CATEGORY_CREATE_REQUEST,\r\n  CATEGORY_CREATE_SUCCESS,\r\n  CATEGORY_UPDATE_REQUEST,\r\n  CATEGORY_UPDATE_SUCCESS,\r\n  CATEGORY_UPDATE_FAIL,\r\n  CATEGORY_DELETE_REQUEST,\r\n  CATEGORY_DELETE_FAIL,\r\n  CATEGORY_DELETE_SUCCESS,\r\n} from '../constants/categoryConstants';\r\n\r\n\r\nexport const listCategories = () => async (dispatch) => {\r\n    dispatch({ type: CATEGORY_LIST_REQUEST });\r\n    try {\r\n\r\n      const { data } = await axios.get(`/api/categories`);\r\n\r\n      dispatch({\r\n      type: CATEGORY_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: CATEGORY_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n    }\r\n};\r\n  \r\nexport const detailsCategory = (categoryId) => async (dispatch) => {\r\n  dispatch({ type: CATEGORY_DETAILS_REQUEST, payload: categoryId });\r\n  try {\r\n    dispatch({ type: CATEGORY_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/categories/${categoryId}`)\r\n\r\n    dispatch({ type: CATEGORY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: CATEGORY_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createCategory = () => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_CREATE_REQUEST });\r\n  try {\r\n\r\n    const newcategory = {\r\n      category_name: \"samplecategory\",\r\n      description: \"sampledescription\",\r\n    };\r\n    const { data } = await axios.post('/api/categories/',newcategory);\r\n\r\n\r\n    dispatch({\r\n      type: CATEGORY_CREATE_SUCCESS,\r\n      payload: data.category,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateCategory = (category) => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_UPDATE_REQUEST, payload: category });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/categories/${category.category_id}`, category);\r\n\r\n    dispatch({ type: CATEGORY_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteCategory = (categoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_DELETE_REQUEST, payload: categoryId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/categories/${categoryId}`);\r\n\r\n    dispatch({ type: CATEGORY_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n",{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","severity":1,"message":"313","line":9,"column":5,"nodeType":"314","messageId":"315","endLine":9,"endColumn":13},{"ruleId":"312","severity":1,"message":"316","line":3,"column":20,"nodeType":"314","messageId":"315","endLine":3,"endColumn":31},{"ruleId":"312","severity":1,"message":"317","line":3,"column":44,"nodeType":"314","messageId":"315","endLine":3,"endColumn":47},{"ruleId":"312","severity":1,"message":"318","line":3,"column":55,"nodeType":"314","messageId":"315","endLine":3,"endColumn":64},{"ruleId":"312","severity":1,"message":"319","line":3,"column":66,"nodeType":"314","messageId":"315","endLine":3,"endColumn":77},{"ruleId":"320","severity":1,"message":"321","line":35,"column":3,"nodeType":"322","endLine":35,"endColumn":20,"suggestions":"323"},{"ruleId":"312","severity":1,"message":"324","line":13,"column":3,"nodeType":"314","messageId":"315","endLine":13,"endColumn":9},{"ruleId":"320","severity":1,"message":"325","line":32,"column":3,"nodeType":"322","endLine":32,"endColumn":5,"suggestions":"326"},{"ruleId":"312","severity":1,"message":"327","line":6,"column":8,"nodeType":"314","messageId":"315","endLine":6,"endColumn":15},{"ruleId":"312","severity":1,"message":"328","line":7,"column":8,"nodeType":"314","messageId":"315","endLine":7,"endColumn":14},{"ruleId":"312","severity":1,"message":"329","line":34,"column":12,"nodeType":"314","messageId":"315","endLine":34,"endColumn":19},{"ruleId":"312","severity":1,"message":"330","line":34,"column":21,"nodeType":"314","messageId":"315","endLine":34,"endColumn":26},{"ruleId":"320","severity":1,"message":"331","line":57,"column":7,"nodeType":"322","endLine":57,"endColumn":45,"suggestions":"332"},{"ruleId":"312","severity":1,"message":"333","line":1,"column":27,"nodeType":"314","messageId":"315","endLine":1,"endColumn":35},{"ruleId":"312","severity":1,"message":"328","line":5,"column":8,"nodeType":"314","messageId":"315","endLine":5,"endColumn":14},{"ruleId":"320","severity":1,"message":"334","line":30,"column":7,"nodeType":"322","endLine":30,"endColumn":31,"suggestions":"335"},{"ruleId":"312","severity":1,"message":"336","line":43,"column":9,"nodeType":"314","messageId":"315","endLine":43,"endColumn":22},{"ruleId":"312","severity":1,"message":"337","line":4,"column":3,"nodeType":"314","messageId":"315","endLine":4,"endColumn":16},{"ruleId":"312","severity":1,"message":"338","line":24,"column":14,"nodeType":"314","messageId":"315","endLine":24,"endColumn":28},{"ruleId":"320","severity":1,"message":"339","line":43,"column":6,"nodeType":"322","endLine":43,"endColumn":86,"suggestions":"340"},{"ruleId":"312","severity":1,"message":"341","line":3,"column":8,"nodeType":"314","messageId":"315","endLine":3,"endColumn":13},{"ruleId":"342","severity":1,"message":"343","line":37,"column":49,"nodeType":"344","messageId":"345","endLine":37,"endColumn":70,"fix":"346"},{"ruleId":"347","severity":1,"message":"348","line":60,"column":29,"nodeType":"349","messageId":"350","endLine":60,"endColumn":31},{"ruleId":"347","severity":1,"message":"348","line":60,"column":45,"nodeType":"349","messageId":"350","endLine":60,"endColumn":47},{"ruleId":"351","severity":1,"message":"352","line":66,"column":39,"nodeType":"353","messageId":"354","endLine":66,"endColumn":41},{"ruleId":"320","severity":1,"message":"355","line":79,"column":6,"nodeType":"322","endLine":79,"endColumn":66,"suggestions":"356"},{"ruleId":"312","severity":1,"message":"357","line":1,"column":17,"nodeType":"314","messageId":"315","endLine":1,"endColumn":26},{"ruleId":"312","severity":1,"message":"357","line":2,"column":17,"nodeType":"314","messageId":"315","endLine":2,"endColumn":26},{"ruleId":"312","severity":1,"message":"357","line":2,"column":17,"nodeType":"314","messageId":"315","endLine":2,"endColumn":26},{"ruleId":"312","severity":1,"message":"358","line":9,"column":12,"nodeType":"314","messageId":"315","endLine":9,"endColumn":25},{"ruleId":"312","severity":1,"message":"359","line":9,"column":27,"nodeType":"314","messageId":"315","endLine":9,"endColumn":43},{"ruleId":"312","severity":1,"message":"341","line":3,"column":8,"nodeType":"314","messageId":"315","endLine":3,"endColumn":13},{"ruleId":"312","severity":1,"message":"360","line":11,"column":12,"nodeType":"314","messageId":"315","endLine":11,"endColumn":22},{"ruleId":"312","severity":1,"message":"361","line":11,"column":24,"nodeType":"314","messageId":"315","endLine":11,"endColumn":37},{"ruleId":"312","severity":1,"message":"362","line":12,"column":12,"nodeType":"314","messageId":"315","endLine":12,"endColumn":21},{"ruleId":"312","severity":1,"message":"363","line":13,"column":12,"nodeType":"314","messageId":"315","endLine":13,"endColumn":29},{"ruleId":"312","severity":1,"message":"364","line":13,"column":31,"nodeType":"314","messageId":"315","endLine":13,"endColumn":51},{"ruleId":"312","severity":1,"message":"365","line":22,"column":13,"nodeType":"314","messageId":"315","endLine":22,"endColumn":22},{"ruleId":"320","severity":1,"message":"366","line":30,"column":7,"nodeType":"322","endLine":30,"endColumn":9,"suggestions":"367"},{"ruleId":"351","severity":1,"message":"352","line":34,"column":41,"nodeType":"353","messageId":"354","endLine":34,"endColumn":43},{"ruleId":"312","severity":1,"message":"357","line":2,"column":17,"nodeType":"314","messageId":"315","endLine":2,"endColumn":26},{"ruleId":"342","severity":1,"message":"343","line":29,"column":49,"nodeType":"344","messageId":"345","endLine":29,"endColumn":70,"fix":"368"},{"ruleId":"347","severity":1,"message":"348","line":53,"column":29,"nodeType":"349","messageId":"350","endLine":53,"endColumn":31},{"ruleId":"347","severity":1,"message":"348","line":53,"column":45,"nodeType":"349","messageId":"350","endLine":53,"endColumn":47},{"ruleId":"320","severity":1,"message":"355","line":73,"column":6,"nodeType":"322","endLine":73,"endColumn":46,"suggestions":"369"},{"ruleId":"312","severity":1,"message":"370","line":20,"column":16,"nodeType":"314","messageId":"315","endLine":20,"endColumn":21},{"ruleId":"312","severity":1,"message":"370","line":80,"column":12,"nodeType":"314","messageId":"315","endLine":80,"endColumn":17},{"ruleId":"312","severity":1,"message":"371","line":9,"column":3,"nodeType":"314","messageId":"315","endLine":9,"endColumn":27},{"ruleId":"312","severity":1,"message":"372","line":230,"column":13,"nodeType":"314","messageId":"315","endLine":230,"endColumn":17},{"ruleId":"312","severity":1,"message":"372","line":335,"column":13,"nodeType":"314","messageId":"315","endLine":335,"endColumn":17},{"ruleId":"312","severity":1,"message":"372","line":113,"column":13,"nodeType":"314","messageId":"315","endLine":113,"endColumn":17},{"ruleId":"312","severity":1,"message":"372","line":114,"column":13,"nodeType":"314","messageId":"315","endLine":114,"endColumn":17},{"ruleId":"312","severity":1,"message":"372","line":113,"column":13,"nodeType":"314","messageId":"315","endLine":113,"endColumn":17},"no-native-reassign",["373"],"no-negated-in-lhs",["374"],"no-unused-vars","'Dropdown' is defined but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","'Nav' is defined but never used.","'ListGroup' is defined but never used.","'SplitButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["375"],"'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderId'. Either include them or remove the dependency array.",["376"],"'Message' is defined but never used.","'Loader' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addressLine1', 'addressLine2', 'city', 'phone', 'postalCode', and 'province'. Either include them or remove the dependency array. You can also do a functional update 'setAddressLine1(a => ...)' if you only need 'addressLine1' in the 'setAddressLine1' call.",["377"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'variantId'. Either include it or remove the dependency array.",["378"],"'deleteHandler' is assigned a value but never used.","'createProduct' is defined but never used.","'createdProduct' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'createdVariant.variant_id'. Either include it or remove the dependency array. Outer scope values like 'createVariant' aren't valid dependencies because mutating them doesn't re-render the component.",["379"],"'axios' is defined but never used.","no-useless-rename","Destructuring assignment categories unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"380","text":"381"},"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'categoryId', 'caterror', 'catloading', 'scaterror', 'scatloading', 'superror', and 'suploading'. Either include them or remove the dependency array.",["382"],"'useEffect' is defined but never used.","'productreport' is assigned a value but never used.","'setProductreport' is assigned a value but never used.","'timeperiod' is assigned a value but never used.","'setTimeperiod' is assigned a value but never used.","'submitted' is assigned a value but never used.","'producttimereport' is assigned a value but never used.","'setProducttimereport' is assigned a value but never used.","'productId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["383"],{"range":"384","text":"381"},["385"],"'data1' is assigned a value but never used.","'PRODUCT_DETAILS_REQUEST1' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"394","fix":"395"},[1545,1566],"categories",{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},[1275,1296],{"desc":"400","fix":"401"},"Update the dependencies array to be: [history, order._id, success]",{"range":"402","text":"403"},"Update the dependencies array to be: [dispatch, orderId]",{"range":"404","text":"405"},"Update the dependencies array to be: [dispatch, history, userInfo, address, addressLine1, addressLine2, postalCode, city, province, phone]",{"range":"406","text":"407"},"Update the dependencies array to be: [dispatch, productId, qty, variantId]",{"range":"408","text":"409"},"Update the dependencies array to be: [productId, successCreate, successDelete, dispatch, props.history, createdVariant.variant_id]",{"range":"410","text":"411"},"Update the dependencies array to be: [product, dispatch, productId, successUpdate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",{"range":"412","text":"413"},"Update the dependencies array to be: [dispatch]",{"range":"414","text":"415"},"Update the dependencies array to be: [dispatch, successCreate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",{"range":"416","text":"417"},[1111,1128],"[history, order._id, success]",[835,837],"[dispatch, orderId]",[2342,2380],"[dispatch, history, userInfo, address, addressLine1, addressLine2, postalCode, city, province, phone]",[916,940],"[dispatch, productId, qty, variantId]",[1379,1459],"[productId, successCreate, successDelete, dispatch, props.history, createdVariant.variant_id]",[2986,3046],"[product, dispatch, productId, successUpdate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",[1101,1103],"[dispatch]",[2822,2862],"[dispatch, successCreate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]"]
=======
<<<<<<< HEAD
[{"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\index.js":"1","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\App.js":"3","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\store.js":"4","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Header.js":"5","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\CartScreen.js":"9","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\productreducers.js":"10","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\cartreducers.js":"11","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Message.js":"12","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Loader.js":"13","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\productAction.js":"14","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\productConstants.js":"15","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\cartConstants.js":"16","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\cartAction.js":"17","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Product.js":"18","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Rating.js":"19","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\orderReducers.js":"20","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\orderConstants.js":"21","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderListScreen.js":"22","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\orderActions.js":"23","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductListScreen.js":"24","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\userreducers.js":"25","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\userConstants.js":"26","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\LoginScreen.js":"27","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ShippingScreen.js":"28","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PaymentScreen.js":"29","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\userActions.js":"31","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\FormContainer.js":"32","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\CheckoutSteps.js":"33","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js":"34","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Variant.js":"35","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\RegisterScreen.js":"36","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProfileScreen.js":"37","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\DashBoardScreen.js":"38","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderScreen.js":"39","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js":"40","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantListScreen.js":"41","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\categoryReducers.js":"42","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\categoryConstants.js":"43","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\categoryActions.js":"44","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js":"45","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js":"46","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\supplierReducers.js":"47","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\supplierConstants.js":"48","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\variantConstants.js":"49","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\supplierActions.js":"50","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\subcategoryActions.js":"51","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductCreateScreen.js":"52","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report2Screen.js":"53","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report3Screen.js":"54","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report4Screen.js":"55","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report5Screen.js":"56","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report1Screen.js":"57","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantCreateScreen.js":"58"},{"size":612,"mtime":1613376057813,"results":"59","hashOfConfig":"60"},{"size":375,"mtime":1613376057814,"results":"61","hashOfConfig":"60"},{"size":3858,"mtime":1614747428040,"results":"62","hashOfConfig":"60"},{"size":3911,"mtime":1614694644679,"results":"63","hashOfConfig":"60"},{"size":3240,"mtime":1614584120804,"results":"64","hashOfConfig":"60"},{"size":4070,"mtime":1614624056382,"results":"65","hashOfConfig":"60"},{"size":336,"mtime":1613661523293,"results":"66","hashOfConfig":"60"},{"size":4563,"mtime":1614713119953,"results":"67","hashOfConfig":"60"},{"size":3795,"mtime":1614713119933,"results":"68","hashOfConfig":"60"},{"size":7306,"mtime":1614713119931,"results":"69","hashOfConfig":"60"},{"size":1347,"mtime":1614713119912,"results":"70","hashOfConfig":"60"},{"size":305,"mtime":1614713119911,"results":"71","hashOfConfig":"60"},{"size":341,"mtime":1613566630620,"results":"72","hashOfConfig":"60"},{"size":9791,"mtime":1614745721491,"results":"73","hashOfConfig":"60"},{"size":1324,"mtime":1614590257001,"results":"74","hashOfConfig":"60"},{"size":279,"mtime":1613566630833,"results":"75","hashOfConfig":"60"},{"size":3464,"mtime":1614713119859,"results":"76","hashOfConfig":"60"},{"size":987,"mtime":1614523679198,"results":"77","hashOfConfig":"60"},{"size":1342,"mtime":1614523679198,"results":"78","hashOfConfig":"60"},{"size":3555,"mtime":1614255385811,"results":"79","hashOfConfig":"60"},{"size":1475,"mtime":1613631796201,"results":"80","hashOfConfig":"60"},{"size":4002,"mtime":1614679415351,"results":"81","hashOfConfig":"60"},{"size":6829,"mtime":1614667864535,"results":"82","hashOfConfig":"60"},{"size":4263,"mtime":1614747506848,"results":"83","hashOfConfig":"60"},{"size":2435,"mtime":1614659916587,"results":"84","hashOfConfig":"60"},{"size":1023,"mtime":1614624056219,"results":"85","hashOfConfig":"60"},{"size":2497,"mtime":1613566631051,"results":"86","hashOfConfig":"60"},{"size":5775,"mtime":1614713119955,"results":"87","hashOfConfig":"60"},{"size":1622,"mtime":1613566631051,"results":"88","hashOfConfig":"60"},{"size":6931,"mtime":1614255385951,"results":"89","hashOfConfig":"60"},{"size":5101,"mtime":1614713119910,"results":"90","hashOfConfig":"60"},{"size":389,"mtime":1613566630570,"results":"91","hashOfConfig":"60"},{"size":1421,"mtime":1613566630526,"results":"92","hashOfConfig":"60"},{"size":8429,"mtime":1614701281413,"results":"93","hashOfConfig":"60"},{"size":1476,"mtime":1614255385748,"results":"94","hashOfConfig":"60"},{"size":6966,"mtime":1614523679202,"results":"95","hashOfConfig":"60"},{"size":3608,"mtime":1614624056572,"results":"96","hashOfConfig":"60"},{"size":161,"mtime":1614680097559,"results":"97","hashOfConfig":"60"},{"size":5026,"mtime":1614265897785,"results":"98","hashOfConfig":"60"},{"size":6214,"mtime":1614746381611,"results":"99","hashOfConfig":"60"},{"size":3823,"mtime":1614747495284,"results":"100","hashOfConfig":"60"},{"size":2840,"mtime":1614586266974,"results":"101","hashOfConfig":"60"},{"size":1160,"mtime":1614586219334,"results":"102","hashOfConfig":"60"},{"size":3477,"mtime":1614624794726,"results":"103","hashOfConfig":"60"},{"size":1266,"mtime":1614586236156,"results":"104","hashOfConfig":"60"},{"size":2983,"mtime":1614586246151,"results":"105","hashOfConfig":"60"},{"size":2837,"mtime":1614602622879,"results":"106","hashOfConfig":"60"},{"size":1158,"mtime":1614581309700,"results":"107","hashOfConfig":"60"},{"size":1124,"mtime":1614590246270,"results":"108","hashOfConfig":"60"},{"size":3484,"mtime":1614605374816,"results":"109","hashOfConfig":"60"},{"size":3952,"mtime":1614630152215,"results":"110","hashOfConfig":"60"},{"size":8214,"mtime":1614747882650,"results":"111","hashOfConfig":"60"},{"size":2834,"mtime":1614719425845,"results":"112","hashOfConfig":"60"},{"size":1358,"mtime":1614747639552,"results":"113","hashOfConfig":"60"},{"size":3865,"mtime":1614747627729,"results":"114","hashOfConfig":"60"},{"size":1816,"mtime":1614747602015,"results":"115","hashOfConfig":"60"},{"size":2059,"mtime":1614747681564,"results":"116","hashOfConfig":"60"},{"size":5698,"mtime":1614747896380,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"1i9xyw7",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"120"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"120"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"192","usedDeprecatedRules":"120"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"120"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"120"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"120"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\index.js",[],["247","248"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\App.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\store.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\HomeScreen.js",["249","250","251","252"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, NavDropdown , Dropdown, Nav, Card, ListGroup, SplitButton, ButtonGroup, Button, Form} from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport { listProductsCat, listProducts } from \"../action/productAction\";\r\n\r\nconst HomeScreen = ({match}) => {\r\n  const dispatch = useDispatch();\r\n  const cat = match.params.cat ? match.params.cat:\"\"\r\n  const productList=useSelector(state=>state.productList)\r\n  const {loading, error, products} =productList\r\n  const cats={consumer_electronics:['laptop','smart phone','dongal'],  kitchen_appliances:[\"rice cooker\",\"oven\", \"electric kettle\", \"heater\"],\r\n   camera:[\"DSLR\",\"Mirrorless\"], phone:[\"samsung\",\"apple\",\"nokia\"], laptop:['asus','dell','toshiba','hp','lenovo'], USB:['kingston','imation'],furniture:['chair,table'],\r\n  books:[],headphone:[],tablets:[]}\r\n  useEffect(() => {\r\n    if(cat){\r\n      dispatch(listProductsCat(cat))\r\n    }\r\n    else{\r\n      console.log('lklk')\r\n      dispatch(listProducts())\r\n    }\r\n  }, [dispatch,cat])\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={2}>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Card.Title><h6><strong>Product Catagaries</strong></h6></Card.Title>\r\n          {Object.keys(cats).map((cat) => (\r\n            <Dropdown as={ButtonGroup} className=\"btn btn-sm p-0\" style={{width:\"100%\"}} block>\r\n              <LinkContainer to={`/products/${cat}`} className=\"p-1\" style={{width:\"85%\"}}>\r\n              <Button className=\"btn btn-sm\" style={{width:\"100%\"}} variant=\"outline-dark\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{cat.replace('_',\" \")}</p></Button>\r\n            </LinkContainer>\r\n              <Dropdown.Toggle split className=\"btn btn-sm\" id=\"dropdown-split-basic\" variant=\"outline-dark\"/>\r\n              <Dropdown.Menu>\r\n            {cats[cat].map((c)=>(\r\n              <LinkContainer to={`/products/${cat}-${c}`} className=\"p-1\" style={{width:\"100%\"}}>\r\n                <Dropdown.Item className=\"btn btn-outline-dark btn-sm\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{c.replace('_',\" \")}</p></Dropdown.Item>\r\n              </LinkContainer>\r\n            ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          ))}\r\n          </Card.Body>\r\n        </Card>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Form.Group controlId=\"formBasicRange\">\r\n            <Form.Label>Price Range</Form.Label><Form.Control type=\"range\" min={0} max={100}/>\r\n          </Form.Group>\r\n          <Row>\r\n            <Col md={6} className='pr-1'>\r\n            <Form.Label>Min</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"0\"></Form.Control>\r\n            </Col>\r\n            <Col md={6} className='pl-1'>\r\n            <Form.Label>Max</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"1,0000\"></Form.Control>\r\n            </Col>\r\n          </Row>\r\n          <Button className=\"btn btn-block btn-sm mt-3\" variant='outline-dark'>Apply</Button>\r\n          </Card.Body>\r\n        </Card>\r\n       \r\n        </Col>\r\n        <Col md={10}>\r\n        {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\" Children={error} />\r\n      ) : (\r\n        <>\r\n        <h1>Latest Products</h1>\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        </>\r\n      )}\r\n        </Col>\r\n      </Row>\r\n      \r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\productreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\cartreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\productAction.js",["253","254","255"],"import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST1,\r\n  PRODUCT_DETAILS_SUCCESS1,\r\n  PRODUCT_DETAILS_FAIL1,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n} from '../constants/productConstants';\r\n\r\nimport {\r\n  VARIANT_LIST_REQUEST,\r\n  VARIANT_LIST_SUCCESS,\r\n  VARIANT_LIST_FAIL,\r\n  VARIANT_DETAILS_REQUEST,\r\n  VARIANT_DETAILS_SUCCESS,\r\n  VARIANT_DETAILS_FAIL,\r\n  VARIANT_CREATE_FAIL,\r\n  VARIANT_CREATE_REQUEST,\r\n  VARIANT_CREATE_SUCCESS,\r\n  VARIANT_UPDATE_REQUEST,\r\n  VARIANT_UPDATE_SUCCESS,\r\n  VARIANT_UPDATE_FAIL,\r\n  VARIANT_DELETE_REQUEST,\r\n  VARIANT_DELETE_FAIL,\r\n  VARIANT_DELETE_SUCCESS,\r\n} from '../constants/variantConstants';\r\n\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/products\");\r\n    console.log(data)\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const listProductsCat = (cat) => async (dispatch) => {\r\n  cat=cat.split(\"-\").join('/')\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(`/api/products/category/${cat}`);\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/products/${productId}`)\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsProductVariant = (productId, variants) => async (dispatch) => {\r\n  try{\r\n    const { data } = await axios.get(`/api/products/${productId}/${variants.color}/${variants.size}`);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS1, payload: data });\r\n    console.log('lllllllllll')\r\n  }\r\n  catch(error){\r\n    dispatch({\r\n            type: PRODUCT_DETAILS_FAIL1,\r\n            payload:variants\r\n          });\r\n  }\r\n}\r\n\r\n\r\n// export const detailsProductVariant = (productId, variants) => async (dispatch) => {\r\n\r\n//   dispatch({ type: PRODUCT_DETAILS_REQUEST1, payload: productId });\r\n//   try {\r\n//     console.log(variants)\r\n//     dispatch({ type: PRODUCT_DETAILS_REQUEST1 });\r\n//     const { data } = await axios.get(`/api/products/${productId}/${variants.color}/${variants.size}`);\r\n//     const h = { ...data, vary: variants };\r\n//     dispatch({ type: PRODUCT_DETAILS_SUCCESS1, payload: h });\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//     dispatch({\r\n//       type: PRODUCT_DETAILS_FAIL1,\r\n//       payload:error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const listProductsAdmin = () => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_LIST_REQUEST });\r\n  try {\r\n\r\n    const { data } = await axios.get(`/api/products/productlist`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const detailsProductAdmin = (productId) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  try {\r\n    \r\n    const {data} = await axios.get(`/api/products/productlist/${productId}`)\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data[0] });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = (newproduct) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n  try {\r\n\r\n    const { data } = await axios.post(`/api/products/addProduct`, newproduct);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_CREATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/products/productlist/edit/${product.product_id}`, product);\r\n\r\n    dispatch({ \r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = axios.delete(`/api/products/productlist/delete/${productId}`);\r\n\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const listVariants = (productId) => async (dispatch) =>{\r\n  dispatch({ type: VARIANT_LIST_REQUEST });\r\n  try {\r\n\r\n      // const { data } = await axios.get(\"/api/product/productlist/${productId}/variantlist\");\r\n      const { data } = await axios.get(`/api/products/productlist/${productId}/variants`);\r\n\r\n      dispatch({\r\n      type: VARIANT_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n  } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: VARIANT_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n  }\r\n}\r\n\r\nexport const detailsVariant = (productId,variantId) => async (dispatch) => {\r\n  dispatch({ type: VARIANT_DETAILS_REQUEST, payload: (productId,variantId) });\r\n  try {\r\n    \r\n    // const {data} = await axios.get(`/api/products/productlist/${productId}/variants/${variantId}`)\r\n    const {data} = await axios.get(`/api/products/productlist/${productId}/variants/${variantId}`)\r\n\r\n    dispatch({ type: VARIANT_DETAILS_SUCCESS, payload: data[0] });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: VARIANT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createVariant = (productId,newvariant) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_CREATE_REQUEST });\r\n  try {\r\n    const { data } = await axios.post(`/api/products/productlist/${productId}/variants/addvariant`, newvariant);\r\n    dispatch({\r\n      type: VARIANT_CREATE_SUCCESS,\r\n      payload: data.variant,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\nexport const updateVariant = (variant) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_UPDATE_REQUEST, payload: variant });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/products/productlist/${variant.product_id}/variants/editvariant/${variant.variant_id}`, variant);\r\n\r\n    dispatch({ type: VARIANT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\nexport const deleteVariant = (productId,variantId) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_DELETE_REQUEST, payload: (productId,variantId) });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = axios.delete(`/api/products/productlist/${productId}/variants/delete/${variantId}`);\r\n\r\n    dispatch({ type: VARIANT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_DELETE_FAIL, payload: message });\r\n  }\r\n};","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\cartAction.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderListScreen.js",["256"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteOrder, deliverOrder, listOrders } from '../action/orderActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { ORDER_DELETE_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\nexport default function OrderListScreen(props) {\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const orderDelete = useSelector((state) => state.orderDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = orderDelete;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const {\r\n    loading: loadingDeliver,\r\n    error: errorDeliver,\r\n    success: successDeliver,\r\n  } = orderDeliver;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successDelete) {\r\n      dispatch({ type: ORDER_DELETE_RESET });\r\n    }\r\n    if (successDeliver) {\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      // props.history.push(`/product/${createdProduct.product_id}/edit`);\r\n    }\r\n    dispatch(listOrders());\r\n  }, [dispatch, successDelete, successDeliver, props.history]);\r\n  // useEffect(() => {\r\n  //   dispatch({ type: ORDER_DELIVER_RESET });\r\n  //   dispatch(listOrders());\r\n  // }, [dispatch, successDeliver]);\r\n\r\n  \r\n  const deleteHandler = (order) => {\r\n    if (window.confirm('Are you sure to delete?')) {\r\n      dispatch(deleteOrder(order._id));\r\n    }\r\n  };\r\n  const deliverHandler = (order) => {\r\n    if (window.confirm('Are you sure to deliver?')) {\r\n      dispatch(deliverOrder(order._id));\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <h1>Orders</h1>\r\n      {loadingDelete && <Loader></Loader>}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingDeliver && <Loader></Loader>}\r\n      {errorDeliver && <Message variant=\"danger\">{errorDeliver}</Message>}\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>USER TYPE</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL PAID</th>\r\n              <th>DELIVERY STATUS</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.order_id}>\r\n                <td>{order.order_id}</td>\r\n                <td>{order.user}</td>\r\n                <td>{order.customer_type}</td>\r\n                <td>{order.order_date ? order.order_date.substring(0, 10) : 'No'}</td>\r\n                <td>{order.total_payment}</td>\r\n                <td>{order.delivery_status}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() => {\r\n                      props.history.push(`/order/${order._id}`);\r\n                    }}\r\n                  >\r\n                    Details\r\n                  </button>\r\n                  {/* <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deleteHandler(order)}\r\n                    >\r\n                      Delete\r\n                    </button> */}\r\n                    {order.delivery_status !== \"delivered\" && \r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deliverHandler(order)}\r\n                    >\r\n                      Mark As Delivered\r\n                    </button>\r\n                    }\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\orderActions.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\userreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ShippingScreen.js",["257","258","259","260","261"],"import React, {useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\nimport { saveShippingAddress} from \"../action/cartAction\";\r\nimport {getUserAddress} from '../action/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Typeahead } from 'react-bootstrap-typeahead'\r\nimport {\r\n  Button,\r\n  Form\r\n} from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\n\r\n  const ShippingScreen = ({history}) => {\r\n    const cart = useSelector(state=>state.cart)\r\n    const {shippingAddress} =cart\r\n    console.log('ttttttttt')\r\n    console.log(shippingAddress)\r\n    console.log('ttttttttt')\r\n    const [addressLine1, setAddressLine1] =useState(shippingAddress.addressLine1)\r\n    const [addressLine2, setAddressLine2] =useState(shippingAddress.addressLine2)\r\n    const [postalCode, setPostalCode] =useState(shippingAddress.postalCode)\r\n    let [city, setCity] = useState(shippingAddress.city?[shippingAddress.city]:[]);\r\n    let [province, setProvince] = useState(shippingAddress.province?[shippingAddress.province]:[]);\r\n    console.log(shippingAddress.province)\r\n    console.log(province)\r\n    const [phone, setPhone] =useState(shippingAddress.phone)\r\n\r\n    const dispatch =useDispatch()\r\n\r\n    const userAddress= useSelector(state=>state.userAddress)\r\n    const {loading, error, address} = userAddress\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    useEffect(()=>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        else{\r\n            console.log(address)\r\n            if(!address.addressLine1){\r\n                dispatch(getUserAddress('profile'))\r\n            }\r\n            else{\r\n                setAddressLine1(address.addressLine1!==\"\"?address.addressLine1:addressLine1)\r\n                setAddressLine2(address.addressLine2!==\"\"?address.addressLine2:addressLine2)\r\n                setPostalCode(address.zip!==\"\"?address.zip:postalCode)\r\n                setCity(address.city!==\"\"?[address.city]:city)\r\n                setProvince(address.province!==\"\"?[address.province]:province)\r\n                setPhone(address.phone!==\"\"?address.phone:phone)\r\n            }\r\n        }\r\n    },[dispatch, history, userInfo, address])\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        city=city[0]\r\n        province=province[0]\r\n        dispatch(saveShippingAddress({addressLine1,addressLine2,city,postalCode,province,phone}))\r\n        history.push('/payment')\r\n    }\r\n    const sub=(a)=>{\r\n        console.log(a[0])\r\n        setProvince(a)\r\n    }\r\n    const subCity=(a)=>{\r\n        if(typeof a[0] ==='object'){\r\n            console.log(a[0].label)\r\n            setCity([a[0].label])\r\n        }\r\n        else{\r\n            console.log(a[0])\r\n            setCity(a)\r\n        }\r\n    }\r\n\r\n    const cities=['Negombo', 'Colombo','Gampaha']\r\n    const provinces=['Western','Southern','Central','Uva','Eastern','Sabaragamuwa','North','North Western','North Central']\r\n\r\n  return (\r\n      <FormContainer>\r\n          <CheckoutSteps step1 step2/>\r\n          <h2>Delivery Details</h2>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='phone'>\r\n                  <Form.Label>Contact Number</Form.Label>\r\n                  <Form.Control type='tel' required placeholder='Contact Number' value={phone} onChange={(e)=>setPhone(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='addressLine1'>\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Address Line1' value={addressLine1} onChange={(e)=>setAddressLine1(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='addressLine2'>\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Address Line2' value={addressLine2} onChange={(e)=>setAddressLine2(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='city'>\r\n                  <Form.Label>City</Form.Label>\r\n                  {/* <Form.Control type='text' required placeholder='Enter City' value={city} onChange={(e)=>setCity(e.target.value)}></Form.Control> */}\r\n                  {/* <Typeahead onChange={setCity} options={cities} placeholder=\"Choose a City...\" selected={city}/> */}\r\n                  <Typeahead allowNew onChange={(selected)=>subCity(selected)} options={cities} selected={city} placeholder=\"Choose a City...\"/>\r\n              </Form.Group>\r\n              <Form.Group controlId='postalCode'>\r\n                  <Form.Label>Postal Code</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Postal Code' value={postalCode} onChange={(e)=>setPostalCode(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='province'>\r\n                  <Form.Label>Province</Form.Label>\r\n                  {/* <Form.Control type='text' required placeholder='Enter Country' value={country} onChange={(e)=>setCountry(e.target.value)}></Form.Control> */}\r\n                  <Typeahead onChange={(selected)=>sub(selected)} options={provinces} selected={province} placeholder=\"Choose a province...\"/>\r\n              </Form.Group>\r\n              {/* <Typeahead onChange={setSelected} options={['yu']} placeholder=\"Choose a state...\" selected={selected}/> */}\r\n              \r\n              <Button type='submit' variant='primary'>Continue</Button>\r\n          </Form>\r\n      </FormContainer>\r\n  )\r\n}\r\nexport default ShippingScreen;","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js",["262"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {createOrder} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const PlaceOrderScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state=>state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n    cart.deliveryCost = cart.itemsPrice>100?0:cart.itemsPrice>50?cart.itemsPrice*0.05:10\r\n    cart.taxPrice =Number((0.15*cart.itemsPrice).toFixed(2))\r\n    cart.totalPrice=Number(cart.itemsPrice)+Number(cart.deliveryCost)+Number(cart.taxPrice)\r\n\r\nconst orderCreate = useSelector(state=>state.orderCreate)\r\nconst {order,success,error}=orderCreate\r\n\r\nuseEffect(()=>{\r\n    if(success){\r\n        history.push(`/order/${order._id}`)\r\n    }\r\n},[history,success])\r\n\r\n    const PlaceOrderHandler=()=>{\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            shippingAddress:cart.shippingAddress,\r\n            paymentMethod:cart.paymentMethod,\r\n            itemsPrice:cart.itemsPrice,\r\n            shippingPrice:cart.shippingPrice,\r\n            taxPrice:cart.taxPrice,\r\n            totalPrice:cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <CheckoutSteps step1 step2 step3 step4/>\r\n    <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Address:</strong>\r\n                        {cart.shippingAddress.address},{cart.shippingAddress.city}{' '}\r\n                        {cart.shippingAddress.postalCode},{' '}\r\n                        {cart.shippingAddress.country}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <strong>Method:</strong>\r\n                    {cart.paymentMethod}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {cart.cartItems.length===0?<Message>Your Cart is Empty</Message>:\r\n                    (\r\n                        <ListGroup variant='flush'>\r\n                            {cart.cartItems.map((item,index)=>(\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Row>\r\n                                                <Col className='text-left' md={2}>{item.qty}</Col>\r\n                                                <Col md={1}>x</Col>\r\n                                                <Col className='text-right' md={3}>${item.price}</Col>\r\n                                                <Col md={1}>=</Col>\r\n                                                <Col className='text-right' md={3}>${(item.qty * item.price).toFixed(2)}</Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n                                            <Card>\r\n                                                <ListGroup variant='flush'>\r\n                                                    <ListGroup.Item>\r\n                                                        <h2>Order Summary</h2>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Items</Col>\r\n                                                            <Col>${cart.itemsPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Delivery</Col>\r\n                                                            <Col>${cart.deliveryCost.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Tax</Col>\r\n                                                            <Col>${cart.taxPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Total</Col>\r\n                                                        <Col>${cart.totalPrice.toFixed(2)}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup>\r\n                                                {error && <Message variant='danger'>{error}</Message>}\r\n                                                </ListGroup>\r\n                                                <ListGroup.Item>\r\n                                                    <Button type='button' className='btn-block' disabled={cart.cartItems===0} onClick={PlaceOrderHandler}>Place Order</Button>\r\n                                                </ListGroup.Item>\r\n                                                </ListGroup>\r\n                                            </Card>\r\n                                        </Col>\r\n    </Row>\r\n</>\r\n  )\r\n}\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\userActions.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js",["263","264","265","266","267","268"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  detailsProductAdmin,\r\n  updateProduct\r\n} from '../action/productAction';\r\nimport { listCategories } from '../action/categoryActions';\r\nimport { listSubcategories } from '../action/subcategoryActions';\r\nimport { listSuppliers } from '../action/supplierActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nexport default function ProductEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const [product_name, setProduct_name] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [weight, setWeight] = useState('');\r\n  const [dimension, setDimension] = useState('');\r\n  const [category_name, setCategory_name] = useState('');\r\n  const [subcat_name, setSubcat_name] = useState('');\r\n  const [supplier_name, setSupplier_name] = useState('');\r\n\r\n  const productDetailsAdmin = useSelector((state) => state.productDetailsAdmin);\r\n  const { loading, error, product } = productDetailsAdmin;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  const categoryList = useSelector((state) => state.categoryList);\r\n  const { loading: catloading, error: caterror, categories:categories } = categoryList;\r\n\r\n  const subcategoryList = useSelector((state) => state.subcategoryList);\r\n  const { loading: scatloading, error: scaterror, subcategories } = subcategoryList;\r\n  \r\n  const supplierList = useSelector((state) => state.supplierList);\r\n  const { loading: suploading, error: superror, suppliers } = supplierList;\r\n\r\n  let categoryId = null;\r\n  categories.forEach(c => {\r\n    if (category_name === c.category_name){\r\n      categoryId = c.category_id;\r\n    }\r\n  })\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push('/productlist');\r\n    }\r\n    if (!catloading && !caterror) {\r\n      dispatch(listCategories());\r\n    }\r\n    if (categoryId !== null || !scatloading && !scaterror) {\r\n      dispatch(listSubcategories(categoryId));\r\n    }\r\n    if (!suploading && !superror) {\r\n      dispatch(listSuppliers());\r\n    }\r\n    if (!product || product.product_id!=productId || successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      dispatch(detailsProductAdmin(productId));\r\n    } else {\r\n      setProduct_name(product.product_name);\r\n      setDescription(product.description);\r\n      setWeight(product.weight);\r\n      setDimension(product.dimension);\r\n      setBrand(product.brand);\r\n      setCategory_name(product.category_name);\r\n      setSubcat_name(product.subcat_name);\r\n      setSupplier_name(product.supplier_name);\r\n    }\r\n  }, [product, dispatch, productId, successUpdate, props.history]);\r\n\r\n  useEffect(() => {\r\n    if (categoryId !== null) {\r\n      dispatch(listSubcategories(categoryId));\r\n    }\r\n  }, [categoryId, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        product_id: productId,\r\n        product_name,\r\n        description,\r\n        weight,\r\n        dimension,\r\n        brand,\r\n        category_name,\r\n        subcat_name,\r\n        supplier_name,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit Product {productId}</h1>\r\n        </div>\r\n        {loadingUpdate && <Loader></Loader>}\r\n        {/* {catloading && <Loader></Loader>} */}\r\n        {/* {caterror && <Message variant=\"danger\">{caterror}</Message>} */}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"product_name\">Product_name</label>\r\n              <input\r\n                id=\"product_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Product name\"\r\n                value={product_name}\r\n                onChange={(e) => setProduct_name(e.target.value)}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                rows=\"3\"\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></textarea>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"weight\">Weight</label>\r\n              <input\r\n                id=\"weight\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Weight\"\r\n                value={weight}\r\n                onChange={(e) => setWeight(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"dimension\">Dimension</label>\r\n              <input\r\n                id=\"dimension\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Dimension\"\r\n                value={dimension}\r\n                onChange={(e) => setDimension(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input\r\n                id=\"brand\"\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"category_name\">Category</label>\r\n              <select\r\n                id=\"category_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category\"\r\n                value={category_name}\r\n                onChange={(e) => setCategory_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the category</option>\r\n                {categories.map(category => <option key={category.category_id}> {category.category_name} </option> )}\r\n              </select>\r\n            </div>\r\n            {/* <div>\r\n              <label htmlFor=\"category_description\">Category_description</label>\r\n              <input\r\n                id=\"category_description\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category_description\"\r\n                value={category_description}\r\n                onChange={(e) => setCategory_description(e.target.value)}\r\n              ></input>\r\n            </div> */}\r\n            <div>\r\n              <label htmlFor=\"subcat_name\">Subcategory</label>\r\n              <select\r\n                id=\"subcat_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Subcategory_name\"\r\n                value={subcat_name}\r\n                onChange={(e) => setSubcat_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the subcategory</option>\r\n                {subcategories.map(subcategory => <option key={subcategory.subcat_id}> {subcategory.subcat_name} </option> )}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"supplier_name\">Supplier</label>\r\n              <select\r\n                id=\"supplier_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Supplier_name\"\r\n                value={supplier_name}\r\n                onChange={(e) => setSupplier_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the supplier</option>\r\n                {suppliers.map(supplier => <option key={supplier.supplier_id}> {supplier.supplier_name} </option> )}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label></label>\r\n              <button className=\"primary\" type=\"submit\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Variant.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\DashBoardScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderScreen.js",["269","270"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {getOrderDetails} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const OrderScreen = ({match}) => {\r\n    const orderId = match.params.id;\r\n    const dispatch = useDispatch()\r\n    \r\n\r\nconst orderDetails = useSelector(state=>state.orderDetails)\r\nconst {order,loading,error}=orderDetails\r\nif(!loading){\r\n    order.itemsPrice = order.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    dispatch(getOrderDetails(orderId))\r\n},[])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p><strong>Name:</strong>{order.user.name}</p>\r\n              <p><strong>Email:</strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address},{order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered?(\r\n                  <Message variant='success'>Delivered</Message>):<Message variant='success'>Not Delivered</Message>}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n              <strong>Method:</strong>\r\n              {order.paymentMethod}\r\n              </p>\r\n              <p>\r\n              <strong>Paid On:</strong>\r\n              {order.paidAt}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          <Row>\r\n                            <Col className=\"text-left\" md={2}>\r\n                              {item.qty}\r\n                            </Col>\r\n                            <Col md={1}>x</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${item.price}\r\n                            </Col>\r\n                            <Col md={1}>=</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${(item.qty * item.price).toFixed(2)}\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Delivery</Col>\r\n                  <Col>${order.deliveryCost.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\nexport default OrderScreen;\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js",["271"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsVariant, updateVariant } from '../action/productAction';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { VARIANT_UPDATE_RESET } from '../constants/variantConstants';\r\n\r\nexport default function VariantEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const variantId = props.match.params.vid;\r\n  const [SKU, setSKU] = useState('');\r\n  const [image_url, setImage_url] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [offer, setOffer] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [no_stock, setNo_stock] = useState('');\r\n  \r\n  const variantDetails = useSelector((state) => state.variantDetails);\r\n  const { loading, error, variant } = variantDetails;\r\n\r\n  const variantUpdate = useSelector((state) => state.variantUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = variantUpdate;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push(`/product/${productId}/variantlist`);\r\n    }\r\n    if (!variant || (variant.variant_id != variantId || successUpdate)) {\r\n      dispatch({ type: VARIANT_UPDATE_RESET });\r\n      dispatch(detailsVariant(productId,variantId));\r\n    } else {\r\n      setSKU(variant.SKU);\r\n      setPrice(variant.price);\r\n      setOffer(variant.offer);\r\n      setColor(variant.color);\r\n      setSize(variant.size);\r\n      setNo_stock(variant.no_stock);\r\n      setImage_url(variant.image_url);\r\n    }\r\n  },[variant, dispatch, productId, variantId, successUpdate, props.history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n        updateVariant(\r\n            {\r\n              variant_id: variantId,\r\n              product_id: productId,\r\n              SKU,\r\n              price,\r\n              offer,\r\n              color,\r\n              size,\r\n              no_stock,\r\n              image_url,\r\n            }\r\n        )\r\n    );\r\n  };\r\n\r\n// const [loadingUpload, setLoadingUpload] = useState(false);\r\n// const [errorUpload, setErrorUpload] = useState('');\r\n// const userSignin = useSelector((state) => state.userSignin);\r\n// const { userInfo } = userSignin;\r\n// const uploadFileHandler = async (e) => {\r\n//   const file = e.target.files[0];\r\n//   const bodyFormData = new FormData();\r\n//   bodyFormData.append('image_url', file);\r\n//   setLoadingUpload(true);\r\n//   try {\r\n//     const { data } = await Axios.post('/api/uploads', bodyFormData);\r\n//     setImage_url(data);\r\n//     setLoadingUpload(false);\r\n//   } catch (error) {\r\n//     setErrorUpload(error.message);\r\n//     setLoadingUpload(false);\r\n//   }\r\n// };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit Product {productId} Variant {variantId} </h1>\r\n        </div>\r\n        {loadingUpdate && <Loader></Loader>}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <label htmlFor=\"SKU\">SKU</label>\r\n            <input\r\n              id=\"SKU\"\r\n              type=\"text\"\r\n              placeholder=\"Enter SKU\"\r\n              value={SKU}\r\n              onChange={(e) => setSKU(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"image_url\">image_url</label>\r\n            <input\r\n              id=\"image_url\"\r\n              type=\"text\"\r\n              placeholder=\"Enter image_url\"\r\n              value={image_url}\r\n              onChange={(e) => setImage_url(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          {/* <div>\r\n            <label htmlFor=\"product_imageFile\">product_image File</label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"product_imageFile\"\r\n              label=\"Choose product_image\"\r\n              onChange={uploadFileHandler}\r\n            ></input>\r\n            {loadingUpload && <Loader></Loader>}\r\n            {errorUpload && (\r\n              <Message variant=\"danger\">{errorUpload}</Message>\r\n            )}\r\n          </div> */}\r\n          <div>\r\n            <label htmlFor=\"price\">Price</label>\r\n            <input\r\n              id=\"price\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Price\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"offer\">Offer</label>\r\n            <input\r\n              id=\"offer\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Offer\"\r\n              value={offer}\r\n              onChange={(e) => setOffer(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"color\">Color</label>\r\n            <input\r\n              id=\"color\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Color\"\r\n              value={color}\r\n              onChange={(e) => setColor(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"size\">Size</label>\r\n            <input\r\n              id=\"size\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Size\"\r\n              value={size}\r\n              onChange={(e) => setSize(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"no_stock\">Count In Stock</label>\r\n            <input\r\n              id=\"no_stock\"\r\n              type=\"text\"\r\n              placeholder=\"Enter no_stock\"\r\n              value={no_stock}\r\n              onChange={(e) => setNo_stock(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div>\r\n            <label></label>\r\n            <button className=\"primary\" type=\"submit\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantListScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\categoryReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\categoryConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\categoryActions.js",["272"],"import axios from \"axios\";\r\nimport {\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_SUCCESS,\r\n  CATEGORY_LIST_FAIL,\r\n  CATEGORY_DETAILS_REQUEST,\r\n  CATEGORY_DETAILS_SUCCESS,\r\n  CATEGORY_DETAILS_FAIL,\r\n  CATEGORY_CREATE_FAIL,\r\n  CATEGORY_CREATE_REQUEST,\r\n  CATEGORY_CREATE_SUCCESS,\r\n  CATEGORY_UPDATE_REQUEST,\r\n  CATEGORY_UPDATE_SUCCESS,\r\n  CATEGORY_UPDATE_FAIL,\r\n  CATEGORY_DELETE_REQUEST,\r\n  CATEGORY_DELETE_FAIL,\r\n  CATEGORY_DELETE_SUCCESS,\r\n} from '../constants/categoryConstants';\r\n\r\n\r\nexport const listCategories = () => async (dispatch) => {\r\n    dispatch({ type: CATEGORY_LIST_REQUEST });\r\n    try {\r\n\r\n      const { data } = await axios.get(`/api/categories`);\r\n\r\n      dispatch({\r\n      type: CATEGORY_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: CATEGORY_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n    }\r\n};\r\n  \r\nexport const detailsCategory = (categoryId) => async (dispatch) => {\r\n  dispatch({ type: CATEGORY_DETAILS_REQUEST, payload: categoryId });\r\n  try {\r\n    dispatch({ type: CATEGORY_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/categories/${categoryId}`)\r\n\r\n    dispatch({ type: CATEGORY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: CATEGORY_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createCategory = () => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_CREATE_REQUEST });\r\n  try {\r\n\r\n    const newcategory = {\r\n      category_name: \"samplecategory\",\r\n      description: \"sampledescription\",\r\n    };\r\n    const { data } = await axios.post('/api/categories/',newcategory);\r\n\r\n\r\n    dispatch({\r\n      type: CATEGORY_CREATE_SUCCESS,\r\n      payload: data.category,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateCategory = (category) => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_UPDATE_REQUEST, payload: category });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/categories/${category.category_id}`, category);\r\n\r\n    dispatch({ type: CATEGORY_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteCategory = (categoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_DELETE_REQUEST, payload: categoryId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/categories/${categoryId}`);\r\n\r\n    dispatch({ type: CATEGORY_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\supplierReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\supplierConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\variantConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\supplierActions.js",["273"],"import axios from \"axios\";\r\nimport {\r\n  SUPPLIER_LIST_REQUEST,\r\n  SUPPLIER_LIST_SUCCESS,\r\n  SUPPLIER_LIST_FAIL,\r\n  SUPPLIER_DETAILS_REQUEST,\r\n  SUPPLIER_DETAILS_SUCCESS,\r\n  SUPPLIER_DETAILS_FAIL,\r\n  SUPPLIER_CREATE_FAIL,\r\n  SUPPLIER_CREATE_REQUEST,\r\n  SUPPLIER_CREATE_SUCCESS,\r\n  SUPPLIER_UPDATE_REQUEST,\r\n  SUPPLIER_UPDATE_SUCCESS,\r\n  SUPPLIER_UPDATE_FAIL,\r\n  SUPPLIER_DELETE_REQUEST,\r\n  SUPPLIER_DELETE_FAIL,\r\n  SUPPLIER_DELETE_SUCCESS,\r\n} from '../constants/supplierConstants';\r\n\r\n\r\nexport const listSuppliers = () => async (dispatch) => {\r\n    dispatch({ type: SUPPLIER_LIST_REQUEST });\r\n    try {\r\n\r\n      const { data } = await axios.get(`/api/suppliers/`);\r\n\r\n      dispatch({\r\n      type: SUPPLIER_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: SUPPLIER_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n    }\r\n};\r\n  \r\nexport const detailsSupplier = (supplierId) => async (dispatch) => {\r\n  dispatch({ type: SUPPLIER_DETAILS_REQUEST, payload: supplierId });\r\n  try {\r\n    dispatch({ type: SUPPLIER_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/suppliers/${supplierId}`)\r\n\r\n    dispatch({ type: SUPPLIER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: SUPPLIER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createSupplier = () => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_CREATE_REQUEST });\r\n  try {\r\n\r\n    const newsupplier = {\r\n        supplier_name: \"samplesupplier\",\r\n        contact_number: null,\r\n        email: null,\r\n    };\r\n    const { data } = await axios.post('/api/suppliers/',newsupplier);\r\n\r\n\r\n    dispatch({\r\n      type: SUPPLIER_CREATE_SUCCESS,\r\n      payload: data.supplier,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateSupplier = (supplier) => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_UPDATE_REQUEST, payload: supplier });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/suppliers/${supplier.supplier_id}`, supplier);\r\n\r\n    dispatch({ type: SUPPLIER_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteSupplier = (supplierId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_DELETE_REQUEST, payload: supplierId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/suppliers/${supplierId}`);\r\n\r\n    dispatch({ type: SUPPLIER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_DELETE_FAIL, payload: message });\r\n  }\r\n};","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\subcategoryActions.js",["274"],"import axios from \"axios\";\r\nimport {\r\n  SUBCATEGORY_LIST_REQUEST,\r\n  SUBCATEGORY_LIST_SUCCESS,\r\n  SUBCATEGORY_LIST_FAIL,\r\n  SUBCATEGORY_DETAILS_REQUEST,\r\n  SUBCATEGORY_DETAILS_SUCCESS,\r\n  SUBCATEGORY_DETAILS_FAIL,\r\n  SUBCATEGORY_CREATE_FAIL,\r\n  SUBCATEGORY_CREATE_REQUEST,\r\n  SUBCATEGORY_CREATE_SUCCESS,\r\n  SUBCATEGORY_UPDATE_REQUEST,\r\n  SUBCATEGORY_UPDATE_SUCCESS,\r\n  SUBCATEGORY_UPDATE_FAIL,\r\n  SUBCATEGORY_DELETE_REQUEST,\r\n  SUBCATEGORY_DELETE_FAIL,\r\n  SUBCATEGORY_DELETE_SUCCESS,\r\n} from '../constants/subcategoryConstants';\r\n\r\n\r\nexport const listSubcategories = (categoryId) => async (dispatch) =>{\r\n    dispatch({ type: SUBCATEGORY_LIST_REQUEST });\r\n    try {\r\n      // const { data } = await axios.get(\"/api/categories/${categoryId}/subcategorylist\");\r\n      const { data } = await axios.get(`/api/categories/${categoryId}/subcategories`);\r\n\r\n      dispatch({\r\n      type: SUBCATEGORY_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({\r\n        type: SUBCATEGORY_LIST_FAIL,\r\n        payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    }\r\n  }\r\n  \r\nexport const detailsSubcategory = (categoryId,subcategoryId) => async (dispatch) => {\r\n  dispatch({ type: SUBCATEGORY_DETAILS_REQUEST, payload: (categoryId,subcategoryId) });\r\n  try {\r\n    dispatch({ type: SUBCATEGORY_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/categories/${categoryId}/subcategories/${subcategoryId}`)\r\n\r\n    dispatch({ type: SUBCATEGORY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: SUBCATEGORY_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createSubcategory = (categoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_CREATE_REQUEST });\r\n  try {\r\n\r\n    const newsubcategory = {\r\n        subcat_name: \"samplesubcategory\",\r\n        category_id: categoryId,\r\n    };\r\n    const { data } = await axios.post(`/api/categories/${categoryId}/subcategories/`,newsubcategory);\r\n\r\n\r\n    dispatch({\r\n      type: SUBCATEGORY_CREATE_SUCCESS,\r\n      payload: data.subcategory,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateSubcategory = (categoryId,subcategory) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_UPDATE_REQUEST, payload: subcategory });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/categories/${categoryId}/subcategories/${subcategory.subcategory_id}`, subcategory);\r\n\r\n    dispatch({ type: SUBCATEGORY_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteSubcategory = (categoryId,subcategoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_DELETE_REQUEST, payload: (categoryId,subcategoryId) });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/categories/${categoryId}/subcategories/${subcategoryId}`);\r\n\r\n    dispatch({ type: SUBCATEGORY_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductCreateScreen.js",["275"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report2Screen.js",["276","277","278"],"// - Products with most number of sales in a given period\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function Report2Screen(props) {\r\n    const [from, setFrom] = useState('');\r\n    const [to, setTo] = useState('');\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [productreport, setProductreport] = useState('');\r\n    // let l = []\r\n  \r\n    const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      async function getProductReport(from,to){\r\n        const response = await axios.get(`/api/reports/report-2`,{from,to});\r\n        console.log(response)\r\n        // const res = response.data;\r\n        // for (var g in res){\r\n        //   let k = []\r\n        //   k.push(g)\r\n        //   var n = res[g]\r\n        //   for (var h in n){\r\n        //     k.push(n[h])\r\n        //   }\r\n        //   l.push(k)\r\n        // }\r\n        // setProductreport(l)\r\n        setSubmitted(true);\r\n      }\r\n      getProductReport(from,to);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <div className=\"admin\">\r\n            <h1>Report 2 - Products with most number of sales</h1>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n            <div>\r\n                <label htmlFor=\"from\">From</label>\r\n                <input\r\n                id=\"from\"\r\n                type=\"date\"\r\n                placeholder=\"from\"\r\n                value={from}\r\n                onChange={(e) => setFrom(e.target.value)}\r\n                required\r\n                ></input>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"to\">To</label>\r\n                <input\r\n                id=\"to\"\r\n                type=\"date\"\r\n                placeholder=\"to\"\r\n                value={to}\r\n                onChange={(e) => setTo(e.target.value)}\r\n                required\r\n                ></input>\r\n            </div>\r\n            <div>\r\n                <label></label>\r\n                <button className=\"primary\" type=\"submit\">\r\n                Show\r\n                </button>\r\n            </div>\r\n            </form>\r\n            {submitted &&\r\n            <div>\r\n                <p>\r\n                    TABLE\r\n                </p>\r\n            </div>\r\n            }\r\n        </div>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\n\r\n// {submitted &&\r\n// <div>\r\n// <table className=\"table\">\r\n//     <thead>\r\n//     <tr>\r\n//         <th>CATEGORY</th>\r\n//         <th>Q1 SALES</th>\r\n//         <th>Q2 SALES</th>\r\n//         <th>Q3 SALES</th>\r\n//         <th>Q4 SALES</th>\r\n//     </tr>\r\n//     </thead>\r\n//     <tbody>\r\n//     {categoryreports.map(r =>\r\n//     <tr key={r}>\r\n//         <td>{r[0]}</td>\r\n//         <td>{r[1]}</td>\r\n//         <td>{r[2]}</td>\r\n//         <td>{r[3]}</td>\r\n//         <td>{r[4]}</td>\r\n//     </tr>\r\n//     )}\r\n//     </tbody>\r\n// </table>\r\n// </div>\r\n// }","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report3Screen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report4Screen.js",["279","280","281","282","283","284","285","286"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report5Screen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report1Screen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantCreateScreen.js",[],{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","severity":1,"message":"292","line":3,"column":20,"nodeType":"293","messageId":"294","endLine":3,"endColumn":31},{"ruleId":"291","severity":1,"message":"295","line":3,"column":44,"nodeType":"293","messageId":"294","endLine":3,"endColumn":47},{"ruleId":"291","severity":1,"message":"296","line":3,"column":55,"nodeType":"293","messageId":"294","endLine":3,"endColumn":64},{"ruleId":"291","severity":1,"message":"297","line":3,"column":66,"nodeType":"293","messageId":"294","endLine":3,"endColumn":77},{"ruleId":"291","severity":1,"message":"298","line":9,"column":3,"nodeType":"293","messageId":"294","endLine":9,"endColumn":27},{"ruleId":"291","severity":1,"message":"299","line":230,"column":13,"nodeType":"293","messageId":"294","endLine":230,"endColumn":17},{"ruleId":"291","severity":1,"message":"299","line":325,"column":13,"nodeType":"293","messageId":"294","endLine":325,"endColumn":17},{"ruleId":"291","severity":1,"message":"300","line":43,"column":9,"nodeType":"293","messageId":"294","endLine":43,"endColumn":22},{"ruleId":"291","severity":1,"message":"301","line":6,"column":8,"nodeType":"293","messageId":"294","endLine":6,"endColumn":15},{"ruleId":"291","severity":1,"message":"302","line":7,"column":8,"nodeType":"293","messageId":"294","endLine":7,"endColumn":14},{"ruleId":"291","severity":1,"message":"303","line":34,"column":12,"nodeType":"293","messageId":"294","endLine":34,"endColumn":19},{"ruleId":"291","severity":1,"message":"304","line":34,"column":21,"nodeType":"293","messageId":"294","endLine":34,"endColumn":26},{"ruleId":"305","severity":1,"message":"306","line":57,"column":7,"nodeType":"307","endLine":57,"endColumn":45,"suggestions":"308"},{"ruleId":"305","severity":1,"message":"309","line":35,"column":3,"nodeType":"307","endLine":35,"endColumn":20,"suggestions":"310"},{"ruleId":"291","severity":1,"message":"311","line":3,"column":8,"nodeType":"293","messageId":"294","endLine":3,"endColumn":13},{"ruleId":"312","severity":1,"message":"313","line":37,"column":49,"nodeType":"314","messageId":"315","endLine":37,"endColumn":70,"fix":"316"},{"ruleId":"317","severity":1,"message":"318","line":60,"column":29,"nodeType":"319","messageId":"320","endLine":60,"endColumn":31},{"ruleId":"317","severity":1,"message":"318","line":60,"column":45,"nodeType":"319","messageId":"320","endLine":60,"endColumn":47},{"ruleId":"321","severity":1,"message":"322","line":66,"column":39,"nodeType":"323","messageId":"324","endLine":66,"endColumn":41},{"ruleId":"305","severity":1,"message":"325","line":79,"column":6,"nodeType":"307","endLine":79,"endColumn":66,"suggestions":"326"},{"ruleId":"291","severity":1,"message":"327","line":13,"column":3,"nodeType":"293","messageId":"294","endLine":13,"endColumn":9},{"ruleId":"305","severity":1,"message":"328","line":32,"column":3,"nodeType":"307","endLine":32,"endColumn":5,"suggestions":"329"},{"ruleId":"321","severity":1,"message":"322","line":34,"column":41,"nodeType":"323","messageId":"324","endLine":34,"endColumn":43},{"ruleId":"291","severity":1,"message":"299","line":113,"column":13,"nodeType":"293","messageId":"294","endLine":113,"endColumn":17},{"ruleId":"291","severity":1,"message":"299","line":114,"column":13,"nodeType":"293","messageId":"294","endLine":114,"endColumn":17},{"ruleId":"291","severity":1,"message":"299","line":113,"column":13,"nodeType":"293","messageId":"294","endLine":113,"endColumn":17},{"ruleId":"305","severity":1,"message":"325","line":73,"column":6,"nodeType":"307","endLine":73,"endColumn":46,"suggestions":"330"},{"ruleId":"291","severity":1,"message":"331","line":2,"column":17,"nodeType":"293","messageId":"294","endLine":2,"endColumn":26},{"ruleId":"291","severity":1,"message":"332","line":9,"column":12,"nodeType":"293","messageId":"294","endLine":9,"endColumn":25},{"ruleId":"291","severity":1,"message":"333","line":9,"column":27,"nodeType":"293","messageId":"294","endLine":9,"endColumn":43},{"ruleId":"291","severity":1,"message":"311","line":3,"column":8,"nodeType":"293","messageId":"294","endLine":3,"endColumn":13},{"ruleId":"291","severity":1,"message":"334","line":11,"column":12,"nodeType":"293","messageId":"294","endLine":11,"endColumn":22},{"ruleId":"291","severity":1,"message":"335","line":11,"column":24,"nodeType":"293","messageId":"294","endLine":11,"endColumn":37},{"ruleId":"291","severity":1,"message":"336","line":12,"column":12,"nodeType":"293","messageId":"294","endLine":12,"endColumn":21},{"ruleId":"291","severity":1,"message":"337","line":13,"column":12,"nodeType":"293","messageId":"294","endLine":13,"endColumn":29},{"ruleId":"291","severity":1,"message":"338","line":13,"column":31,"nodeType":"293","messageId":"294","endLine":13,"endColumn":51},{"ruleId":"291","severity":1,"message":"339","line":22,"column":13,"nodeType":"293","messageId":"294","endLine":22,"endColumn":22},{"ruleId":"305","severity":1,"message":"340","line":30,"column":7,"nodeType":"307","endLine":30,"endColumn":9,"suggestions":"341"},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'ListGroup' is defined but never used.","'SplitButton' is defined but never used.","'PRODUCT_DETAILS_REQUEST1' is defined but never used.","'data' is assigned a value but never used.","'deleteHandler' is assigned a value but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addressLine1', 'addressLine2', 'city', 'phone', 'postalCode', and 'province'. Either include them or remove the dependency array. You can also do a functional update 'setAddressLine1(a => ...)' if you only need 'addressLine1' in the 'setAddressLine1' call.","ArrayExpression",["344"],"React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["345"],"'axios' is defined but never used.","no-useless-rename","Destructuring assignment categories unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"346","text":"347"},"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'categoryId', 'caterror', 'catloading', 'scaterror', 'scatloading', 'superror', and 'suploading'. Either include them or remove the dependency array.",["348"],"'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderId'. Either include them or remove the dependency array.",["349"],["350"],"'useEffect' is defined but never used.","'productreport' is assigned a value but never used.","'setProductreport' is assigned a value but never used.","'timeperiod' is assigned a value but never used.","'setTimeperiod' is assigned a value but never used.","'submitted' is assigned a value but never used.","'producttimereport' is assigned a value but never used.","'setProducttimereport' is assigned a value but never used.","'productId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["351"],"no-global-assign","no-unsafe-negation",{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},[1545,1566],"categories",{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},"Update the dependencies array to be: [dispatch, history, userInfo, address, addressLine1, addressLine2, postalCode, city, province, phone]",{"range":"364","text":"365"},"Update the dependencies array to be: [history, order._id, success]",{"range":"366","text":"367"},"Update the dependencies array to be: [product, dispatch, productId, successUpdate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",{"range":"368","text":"369"},"Update the dependencies array to be: [dispatch, orderId]",{"range":"370","text":"371"},"Update the dependencies array to be: [dispatch, successCreate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",{"range":"372","text":"373"},"Update the dependencies array to be: [dispatch]",{"range":"374","text":"375"},[2342,2380],"[dispatch, history, userInfo, address, addressLine1, addressLine2, postalCode, city, province, phone]",[1111,1128],"[history, order._id, success]",[2986,3046],"[product, dispatch, productId, successUpdate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",[835,837],"[dispatch, orderId]",[2811,2851],"[dispatch, successCreate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",[1101,1103],"[dispatch]"]
=======
[{"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\index.js":"1","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reportWebVitals.js":"2","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\store.js":"3","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\App.js":"4","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reducers\\userreducers.js":"5","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reducers\\cartreducers.js":"6","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reducers\\categoryReducers.js":"7","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js":"8","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\Footer.js":"9","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reducers\\productreducers.js":"10","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reducers\\supplierReducers.js":"11","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\ShippingScreen.js":"12","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reducers\\orderReducers.js":"13","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\LoginScreen.js":"14","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\OrderScreen.js":"15","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js":"16","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\ProfileScreen.js":"17","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\OrderListScreen.js":"18","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\RegisterScreen.js":"19","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\HomeScreen.js":"20","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\PaymentScreen.js":"21","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\VariantListScreen.js":"22","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\CartScreen.js":"23","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js":"24","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\DashBoardScreen.js":"25","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\ProductListScreen.js":"26","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js":"27","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\Header.js":"28","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\ProductScreen.js":"29","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\Loader.js":"30","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\FormContainer.js":"31","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\userConstants.js":"32","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js":"33","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\supplierConstants.js":"34","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\cartConstants.js":"35","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\productConstants.js":"36","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\CheckoutSteps.js":"37","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\Message.js":"38","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\categoryConstants.js":"39","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\orderConstants.js":"40","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\Variant.js":"41","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\action\\cartAction.js":"42","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\action\\productAction.js":"43","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\Product.js":"44","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\variantConstants.js":"45","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\action\\userActions.js":"46","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\action\\categoryActions.js":"47","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\action\\orderActions.js":"48","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\Rating.js":"49","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\action\\subcategoryActions.js":"50","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\action\\supplierActions.js":"51","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\ProductCreateScreen.js":"52","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\Report1Screen.js":"53","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\Report2Screen.js":"54","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\Report3Screen.js":"55","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\Report4Screen.js":"56","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\Report5Screen.js":"57"},{"size":612,"mtime":1613637086174,"results":"58","hashOfConfig":"59"},{"size":375,"mtime":1613637086176,"results":"60","hashOfConfig":"59"},{"size":3911,"mtime":1614662593251,"results":"61","hashOfConfig":"59"},{"size":3800,"mtime":1614743118188,"results":"62","hashOfConfig":"59"},{"size":2435,"mtime":1614623626898,"results":"63","hashOfConfig":"59"},{"size":1347,"mtime":1614698303765,"results":"64","hashOfConfig":"59"},{"size":2840,"mtime":1614602764983,"results":"65","hashOfConfig":"59"},{"size":2983,"mtime":1614602764984,"results":"66","hashOfConfig":"59"},{"size":336,"mtime":1613884556045,"results":"67","hashOfConfig":"59"},{"size":7306,"mtime":1614698303766,"results":"68","hashOfConfig":"59"},{"size":2837,"mtime":1614602764984,"results":"69","hashOfConfig":"59"},{"size":5775,"mtime":1614698304176,"results":"70","hashOfConfig":"59"},{"size":3555,"mtime":1614250841935,"results":"71","hashOfConfig":"59"},{"size":2497,"mtime":1613637086178,"results":"72","hashOfConfig":"59"},{"size":5026,"mtime":1614250841937,"results":"73","hashOfConfig":"59"},{"size":6931,"mtime":1614250841937,"results":"74","hashOfConfig":"59"},{"size":3608,"mtime":1614623209657,"results":"75","hashOfConfig":"59"},{"size":4002,"mtime":1614743118194,"results":"76","hashOfConfig":"59"},{"size":6966,"mtime":1614527985243,"results":"77","hashOfConfig":"59"},{"size":4070,"mtime":1614623209656,"results":"78","hashOfConfig":"59"},{"size":1622,"mtime":1613637086178,"results":"79","hashOfConfig":"59"},{"size":3916,"mtime":1614662593250,"results":"80","hashOfConfig":"59"},{"size":3795,"mtime":1614698304096,"results":"81","hashOfConfig":"59"},{"size":6230,"mtime":1614662593250,"results":"82","hashOfConfig":"59"},{"size":161,"mtime":1614266254243,"results":"83","hashOfConfig":"59"},{"size":4288,"mtime":1614666895249,"results":"84","hashOfConfig":"59"},{"size":8429,"mtime":1614662593249,"results":"85","hashOfConfig":"59"},{"size":3240,"mtime":1614602764650,"results":"86","hashOfConfig":"59"},{"size":4563,"mtime":1614698304176,"results":"87","hashOfConfig":"59"},{"size":341,"mtime":1613637086170,"results":"88","hashOfConfig":"59"},{"size":389,"mtime":1613637086170,"results":"89","hashOfConfig":"59"},{"size":1023,"mtime":1614623209589,"results":"90","hashOfConfig":"59"},{"size":1266,"mtime":1614602764651,"results":"91","hashOfConfig":"59"},{"size":1158,"mtime":1614602764651,"results":"92","hashOfConfig":"59"},{"size":279,"mtime":1613637086172,"results":"93","hashOfConfig":"59"},{"size":1324,"mtime":1614250841933,"results":"94","hashOfConfig":"59"},{"size":1421,"mtime":1613637086169,"results":"95","hashOfConfig":"59"},{"size":305,"mtime":1614698303765,"results":"96","hashOfConfig":"59"},{"size":1160,"mtime":1614602764650,"results":"97","hashOfConfig":"59"},{"size":1475,"mtime":1613637086173,"results":"98","hashOfConfig":"59"},{"size":1476,"mtime":1614250841933,"results":"99","hashOfConfig":"59"},{"size":3464,"mtime":1614698303707,"results":"100","hashOfConfig":"59"},{"size":9994,"mtime":1614743118190,"results":"101","hashOfConfig":"59"},{"size":987,"mtime":1614527985239,"results":"102","hashOfConfig":"59"},{"size":1124,"mtime":1614602764983,"results":"103","hashOfConfig":"59"},{"size":5101,"mtime":1614698303729,"results":"104","hashOfConfig":"59"},{"size":3477,"mtime":1614662592669,"results":"105","hashOfConfig":"59"},{"size":6829,"mtime":1614698303728,"results":"106","hashOfConfig":"59"},{"size":1342,"mtime":1614527985240,"results":"107","hashOfConfig":"59"},{"size":3952,"mtime":1614662593246,"results":"108","hashOfConfig":"59"},{"size":3484,"mtime":1614662593247,"results":"109","hashOfConfig":"59"},{"size":8225,"mtime":1614666895248,"results":"110","hashOfConfig":"59"},{"size":2070,"mtime":1614743118196,"results":"111","hashOfConfig":"59"},{"size":2834,"mtime":1614743118199,"results":"112","hashOfConfig":"59"},{"size":1369,"mtime":1614743118202,"results":"113","hashOfConfig":"59"},{"size":3865,"mtime":1614743118203,"results":"114","hashOfConfig":"59"},{"size":1827,"mtime":1614743118204,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"79fbse",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"118"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"118"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"118"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"118"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"118"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"118"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"118"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"180","usedDeprecatedRules":"118"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"118"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"118"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"118"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"118"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"118"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"118"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"237","usedDeprecatedRules":"118"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\index.js",[],["248","249"],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reportWebVitals.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\store.js",["250","251","252"],"import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productListReducerAdmin,\r\n  productDetailsReducerAdmin,\r\n  productCreateReducer,\r\n  productDeleteReducer,\r\n  productUpdateReducer,\r\n  variantListReducer,\r\n  variantDetailsReducer,\r\n  variantCreateReducer,\r\n  variantUpdateReducer,\r\n  variantDeleteReducer,\r\n} from \"./reducers/productreducers\";\r\n\r\nimport { cartReducer } from \"./reducers/cartreducers\";\r\n\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userAddressReducer,\r\n} from \"./reducers/userreducers\";\r\n\r\nimport {\r\n  orderCreateReducer,\r\n  orderDeleteReducer,\r\n  orderDeliverReducer,\r\n  orderDetailsReducer,\r\n  orderListReducer,\r\n  orderMineListReducer,\r\n  orderPayReducer,\r\n} from \"./reducers/orderReducers\";\r\n\r\nimport {\r\n  categoryListReducer,\r\n  categoryDetailsReducer,\r\n  categoryCreateReducer,\r\n  categoryDeleteReducer,\r\n  categoryUpdateReducer,\r\n} from \"./reducers/categoryReducers\";\r\n\r\nimport {\r\n  subcategoryCreateReducer,\r\n  subcategoryDeleteReducer,\r\n  subcategoryDetailsReducer,\r\n  subcategoryListReducer,\r\n  subcategoryUpdateReducer,\r\n} from \"./reducers/subcategoryReducers\";\r\n\r\nimport {\r\n  supplierCreateReducer,\r\n  supplierDeleteReducer,\r\n  supplierDetailsReducer,\r\n  supplierListReducer,\r\n  supplierUpdateReducer\r\n} from \"./reducers/supplierReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productListAdmin: productListReducerAdmin,\r\n  productDetailsAdmin: productDetailsReducerAdmin,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productDelete: productDeleteReducer,\r\n  variantList: variantListReducer,\r\n  variantDetails: variantDetailsReducer,\r\n  variantCreate: variantCreateReducer,\r\n  variantUpdate: variantUpdateReducer,\r\n  variantDelete: variantDeleteReducer,\r\n  categoryList: categoryListReducer,\r\n  categoryDetails: categoryDetailsReducer,\r\n  categoryCreate: categoryCreateReducer,\r\n  categoryUpdate: categoryUpdateReducer,\r\n  categoryDelete: categoryDeleteReducer,\r\n  subcategoryList: subcategoryListReducer,\r\n  subcategoryDetails: subcategoryDetailsReducer,\r\n  subcategoryCreate: subcategoryCreateReducer,\r\n  subcategoryUpdate: subcategoryUpdateReducer,\r\n  subcategoryDelete: subcategoryDeleteReducer,\r\n  supplierList: supplierListReducer,\r\n  supplierDetails: supplierDetailsReducer,\r\n  supplierCreate: supplierCreateReducer,\r\n  supplierUpdate: supplierUpdateReducer,\r\n  supplierDelete: supplierDeleteReducer,\r\n  cart:cartReducer,\r\n  userLogin:userLoginReducer,\r\n  userRegister:userRegisterReducer,\r\n  userDetails:userDetailsReducer,\r\n  userUpdateProfile:userUpdateProfileReducer,\r\n  userAddress:userAddressReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderMineList: orderMineListReducer,\r\n  orderList: orderListReducer,\r\n  orderDelete: orderDeleteReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport default store;\r\n","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\App.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reducers\\userreducers.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reducers\\cartreducers.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reducers\\categoryReducers.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\Footer.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reducers\\productreducers.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reducers\\supplierReducers.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\ShippingScreen.js",["253","254","255","256","257","258","259","260","261","262","263","264"],"import React, {useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\nimport { saveShippingAddress} from \"../action/cartAction\";\r\nimport {getUserAddress} from '../action/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Typeahead } from 'react-bootstrap-typeahead'\r\nimport {\r\n  Button,\r\n  Form\r\n} from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\n\r\n  const ShippingScreen = ({history}) => {\r\n    const cart = useSelector(state=>state.cart)\r\n    const {shippingAddress} =cart\r\n    console.log('ttttttttt')\r\n    console.log(shippingAddress)\r\n    console.log('ttttttttt')\r\n    const [addressLine1, setAddressLine1] =useState(shippingAddress.addressLine1)\r\n    const [addressLine2, setAddressLine2] =useState(shippingAddress.addressLine2)\r\n    const [postalCode, setPostalCode] =useState(shippingAddress.postalCode)\r\n    let [city, setCity] = useState(shippingAddress.city?[shippingAddress.city]:[]);\r\n    let [province, setProvince] = useState(shippingAddress.province?[shippingAddress.province]:[]);\r\n    console.log(shippingAddress.province)\r\n    console.log(province)\r\n    const [phone, setPhone] =useState(shippingAddress.phone)\r\n\r\n    const dispatch =useDispatch()\r\n\r\n    const userAddress= useSelector(state=>state.userAddress)\r\n    const {loading, error, address} = userAddress\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    useEffect(()=>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        else{\r\n            console.log(address)\r\n            if(!address.addressLine1){\r\n                dispatch(getUserAddress('profile'))\r\n            }\r\n            else{\r\n                setAddressLine1(address.addressLine1!==\"\"?address.addressLine1:addressLine1)\r\n                setAddressLine2(address.addressLine2!==\"\"?address.addressLine2:addressLine2)\r\n                setPostalCode(address.zip!==\"\"?address.zip:postalCode)\r\n                setCity(address.city!==\"\"?[address.city]:city)\r\n                setProvince(address.province!==\"\"?[address.province]:province)\r\n                setPhone(address.phone!==\"\"?address.phone:phone)\r\n            }\r\n        }\r\n    },[dispatch, history, userInfo, address])\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        city=city[0]\r\n        province=province[0]\r\n        dispatch(saveShippingAddress({addressLine1,addressLine2,city,postalCode,province,phone}))\r\n        history.push('/payment')\r\n    }\r\n    const sub=(a)=>{\r\n        console.log(a[0])\r\n        setProvince(a)\r\n    }\r\n    const subCity=(a)=>{\r\n        if(typeof a[0] ==='object'){\r\n            console.log(a[0].label)\r\n            setCity([a[0].label])\r\n        }\r\n        else{\r\n            console.log(a[0])\r\n            setCity(a)\r\n        }\r\n    }\r\n\r\n    const cities=['Negombo', 'Colombo','Gampaha']\r\n    const provinces=['Western','Southern','Central','Uva','Eastern','Sabaragamuwa','North','North Western','North Central']\r\n\r\n  return (\r\n      <FormContainer>\r\n          <CheckoutSteps step1 step2/>\r\n          <h2>Delivery Details</h2>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='phone'>\r\n                  <Form.Label>Contact Number</Form.Label>\r\n                  <Form.Control type='tel' required placeholder='Contact Number' value={phone} onChange={(e)=>setPhone(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='addressLine1'>\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Address Line1' value={addressLine1} onChange={(e)=>setAddressLine1(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='addressLine2'>\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Address Line2' value={addressLine2} onChange={(e)=>setAddressLine2(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='city'>\r\n                  <Form.Label>City</Form.Label>\r\n                  {/* <Form.Control type='text' required placeholder='Enter City' value={city} onChange={(e)=>setCity(e.target.value)}></Form.Control> */}\r\n                  {/* <Typeahead onChange={setCity} options={cities} placeholder=\"Choose a City...\" selected={city}/> */}\r\n                  <Typeahead allowNew onChange={(selected)=>subCity(selected)} options={cities} selected={city} placeholder=\"Choose a City...\"/>\r\n              </Form.Group>\r\n              <Form.Group controlId='postalCode'>\r\n                  <Form.Label>Postal Code</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Postal Code' value={postalCode} onChange={(e)=>setPostalCode(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='province'>\r\n                  <Form.Label>Province</Form.Label>\r\n                  {/* <Form.Control type='text' required placeholder='Enter Country' value={country} onChange={(e)=>setCountry(e.target.value)}></Form.Control> */}\r\n                  <Typeahead onChange={(selected)=>sub(selected)} options={provinces} selected={province} placeholder=\"Choose a province...\"/>\r\n              </Form.Group>\r\n              {/* <Typeahead onChange={setSelected} options={['yu']} placeholder=\"Choose a state...\" selected={selected}/> */}\r\n              \r\n              <Button type='submit' variant='primary'>Continue</Button>\r\n          </Form>\r\n      </FormContainer>\r\n  )\r\n}\r\nexport default ShippingScreen;","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\OrderScreen.js",["265","266"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {getOrderDetails} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const OrderScreen = ({match}) => {\r\n    const orderId = match.params.id;\r\n    const dispatch = useDispatch()\r\n    \r\n\r\nconst orderDetails = useSelector(state=>state.orderDetails)\r\nconst {order,loading,error}=orderDetails\r\nif(!loading){\r\n    order.itemsPrice = order.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    dispatch(getOrderDetails(orderId))\r\n},[])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p><strong>Name:</strong>{order.user.name}</p>\r\n              <p><strong>Email:</strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address},{order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered?(\r\n                  <Message variant='success'>Delivered</Message>):<Message variant='success'>Not Delivered</Message>}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n              <strong>Method:</strong>\r\n              {order.paymentMethod}\r\n              </p>\r\n              <p>\r\n              <strong>Paid On:</strong>\r\n              {order.paidAt}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          <Row>\r\n                            <Col className=\"text-left\" md={2}>\r\n                              {item.qty}\r\n                            </Col>\r\n                            <Col md={1}>x</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${item.price}\r\n                            </Col>\r\n                            <Col md={1}>=</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${(item.qty * item.price).toFixed(2)}\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Delivery</Col>\r\n                  <Col>${order.deliveryCost.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\nexport default OrderScreen;\r\n","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js",["267"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {createOrder} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const PlaceOrderScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state=>state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n    cart.deliveryCost = cart.itemsPrice>100?0:cart.itemsPrice>50?cart.itemsPrice*0.05:10\r\n    cart.taxPrice =Number((0.15*cart.itemsPrice).toFixed(2))\r\n    cart.totalPrice=Number(cart.itemsPrice)+Number(cart.deliveryCost)+Number(cart.taxPrice)\r\n\r\nconst orderCreate = useSelector(state=>state.orderCreate)\r\nconst {order,success,error}=orderCreate\r\n\r\nuseEffect(()=>{\r\n    if(success){\r\n        history.push(`/order/${order._id}`)\r\n    }\r\n},[history,success])\r\n\r\n    const PlaceOrderHandler=()=>{\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            shippingAddress:cart.shippingAddress,\r\n            paymentMethod:cart.paymentMethod,\r\n            itemsPrice:cart.itemsPrice,\r\n            shippingPrice:cart.shippingPrice,\r\n            taxPrice:cart.taxPrice,\r\n            totalPrice:cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <CheckoutSteps step1 step2 step3 step4/>\r\n    <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Address:</strong>\r\n                        {cart.shippingAddress.address},{cart.shippingAddress.city}{' '}\r\n                        {cart.shippingAddress.postalCode},{' '}\r\n                        {cart.shippingAddress.country}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <strong>Method:</strong>\r\n                    {cart.paymentMethod}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {cart.cartItems.length===0?<Message>Your Cart is Empty</Message>:\r\n                    (\r\n                        <ListGroup variant='flush'>\r\n                            {cart.cartItems.map((item,index)=>(\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Row>\r\n                                                <Col className='text-left' md={2}>{item.qty}</Col>\r\n                                                <Col md={1}>x</Col>\r\n                                                <Col className='text-right' md={3}>${item.price}</Col>\r\n                                                <Col md={1}>=</Col>\r\n                                                <Col className='text-right' md={3}>${(item.qty * item.price).toFixed(2)}</Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n                                            <Card>\r\n                                                <ListGroup variant='flush'>\r\n                                                    <ListGroup.Item>\r\n                                                        <h2>Order Summary</h2>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Items</Col>\r\n                                                            <Col>${cart.itemsPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Delivery</Col>\r\n                                                            <Col>${cart.deliveryCost.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Tax</Col>\r\n                                                            <Col>${cart.taxPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Total</Col>\r\n                                                        <Col>${cart.totalPrice.toFixed(2)}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup>\r\n                                                {error && <Message variant='danger'>{error}</Message>}\r\n                                                </ListGroup>\r\n                                                <ListGroup.Item>\r\n                                                    <Button type='button' className='btn-block' disabled={cart.cartItems===0} onClick={PlaceOrderHandler}>Place Order</Button>\r\n                                                </ListGroup.Item>\r\n                                                </ListGroup>\r\n                                            </Card>\r\n                                        </Col>\r\n    </Row>\r\n</>\r\n  )\r\n}\r\nexport default PlaceOrderScreen;\r\n","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\ProfileScreen.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\OrderListScreen.js",["268","269","270"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteOrder, deliverOrder, listOrders } from '../action/orderActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { ORDER_DELETE_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\nexport default function OrderListScreen(props) {\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const orderDelete = useSelector((state) => state.orderDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = orderDelete;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const {\r\n    loading: loadingDeliver,\r\n    error: errorDeliver,\r\n    success: successDeliver,\r\n  } = orderDeliver;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successDelete) {\r\n      dispatch({ type: ORDER_DELETE_RESET });\r\n    }\r\n    if (successDeliver) {\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      // props.history.push(`/product/${createdProduct.product_id}/edit`);\r\n    }\r\n    dispatch(listOrders());\r\n  }, [dispatch, successDelete, successDeliver, props.history]);\r\n  // useEffect(() => {\r\n  //   dispatch({ type: ORDER_DELIVER_RESET });\r\n  //   dispatch(listOrders());\r\n  // }, [dispatch, successDeliver]);\r\n\r\n  \r\n  const deleteHandler = (order) => {\r\n    if (window.confirm('Are you sure to delete?')) {\r\n      dispatch(deleteOrder(order._id));\r\n    }\r\n  };\r\n  const deliverHandler = (order) => {\r\n    if (window.confirm('Are you sure to deliver?')) {\r\n      dispatch(deliverOrder(order._id));\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <h1>Orders</h1>\r\n      {loadingDelete && <Loader></Loader>}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingDeliver && <Loader></Loader>}\r\n      {errorDeliver && <Message variant=\"danger\">{errorDeliver}</Message>}\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>USER TYPE</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL PAID</th>\r\n              <th>DELIVERY STATUS</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.order_id}>\r\n                <td>{order.order_id}</td>\r\n                <td>{order.user}</td>\r\n                <td>{order.customer_type}</td>\r\n                <td>{order.order_date ? order.order_date.substring(0, 10) : 'No'}</td>\r\n                <td>{order.total_payment}</td>\r\n                <td>{order.delivery_status}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() => {\r\n                      props.history.push(`/order/${order._id}`);\r\n                    }}\r\n                  >\r\n                    Details\r\n                  </button>\r\n                  {/* <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deleteHandler(order)}\r\n                    >\r\n                      Delete\r\n                    </button> */}\r\n                    {order.delivery_status !== \"delivered\" && \r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deliverHandler(order)}\r\n                    >\r\n                      Deliver\r\n                    </button>\r\n                    }\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\RegisterScreen.js",["271"],"import React, {useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {register} from \"../action/userActions\";\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport {\r\n    Dropdown,\r\nForm,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"react-bootstrap\";\r\n\r\nconst RegisterScreen = ({location,history}) => {\r\n    const [first_name, setFirstName] = useState('')\r\n    const [last_name, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [province, setProvince] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [addressLine1, setAddressLine1] = useState('')\r\n    const [addressLine2, setAddressLine2] = useState('')\r\n    const [zip, setZip] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmpassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state=>state.userRegister)\r\n    const {loading, error, userInfo} = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1]:'/'\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n    const submitHandler =(event)=>{\r\n        event.preventDefault()\r\n        if(password!==confirmpassword){\r\n            setMessage('Password do not match')\r\n        }\r\n        else{\r\n            dispatch(register(email,password,first_name, last_name, zip, addressLine1, addressLine2, city, province, phone))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Row>\r\n                    <Col className='pr-1'>\r\n                        <Form.Group controlId='first_name'>\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type='first_name' placeholder='First Name' value={first_name} onChange={(event)=>setFirstName(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1'>\r\n                        <Form.Group controlId='last_name'>\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type='last_name' placeholder='Last Name' value={last_name} onChange={(event)=>setLastName(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='email Address' value={email} onChange={(event)=>setEmail(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Row>\r\n                    <Col className='pr-1' md={4}>\r\n                        <Form.Group controlId='phone'>\r\n                        <Form.Label>Contact Number</Form.Label>\r\n                        <Form.Control type='tel' placeholder='Phone Number' value={phone} onChange={(event)=>setPhone(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1' md={8}>\r\n                        <Form.Group controlId='addressLine1'>\r\n                        <Form.Label>Address Line 1</Form.Label>\r\n                        <Form.Control type='text' placeholder='Address Line 1' value={addressLine1} onChange={(event)=>setAddressLine1(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className='pr-1' md={8}>\r\n                    <Form.Group controlId='addressLine2'>\r\n                        <Form.Label>Address Line 2</Form.Label>\r\n                        <Form.Control type='text' placeholder='Address Line 2' value={addressLine2} onChange={(event)=>setAddressLine2(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1' md={4}>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className='pr-1' md={5}>\r\n                        <Form.Group controlId='province'>\r\n                        <Form.Label>Province</Form.Label>\r\n                        <Form.Control type='text' placeholder='Province' value={province} onChange={(event)=>setProvince(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='px-1' md={4}>\r\n                        <Form.Group controlId='city'>\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control type='text' placeholder='City' value={city} onChange={(event)=>setCity(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1' md={3}>\r\n                        <Form.Group controlId='zip'>\r\n                        <Form.Label>Zip Code</Form.Label>\r\n                        <Form.Control type='text' placeholder='Zip' value={zip} onChange={(event)=>setZip(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='password' value={password} onChange={(event)=>setPassword(event.target.value)} required></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='confirm password' value={confirmpassword} onChange={(event)=>setConfirmPassword(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n               \r\n                <Button type='submit' variant='primary' block>Register</Button>\r\n                </Form>\r\n                <Row className='py-3 text-right'>\r\n                    <Col>\r\n                    Have an Account?\r\n                    <Link to={redirect ? `/login?redirect=${redirect}`:'/login'} >Login</Link>\r\n                    </Col>\r\n                </Row>\r\n        </FormContainer>\r\n        </>\r\n    )\r\n}\r\nexport default RegisterScreen\r\n","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\HomeScreen.js",["272","273","274","275"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, NavDropdown , Dropdown, Nav, Card, ListGroup, SplitButton, ButtonGroup, Button, Form} from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport { listProductsCat, listProducts } from \"../action/productAction\";\r\n\r\nconst HomeScreen = ({match}) => {\r\n  const dispatch = useDispatch();\r\n  const cat = match.params.cat ? match.params.cat:\"\"\r\n  const productList=useSelector(state=>state.productList)\r\n  const {loading, error, products, ca} =productList\r\n  // const cats={consumer_electronics:['laptop','smart phone','dongal'],  kitchen_appliances:[\"rice cooker\",\"oven\", \"electric kettle\", \"heater\"],\r\n  //  camera:[\"DSLR\",\"Mirrorless\"], phone:[\"samsung\",\"apple\",\"nokia\"], laptop:['asus','dell','toshiba','hp','lenovo'], USB:['kingston','imation'],furniture:['chair,table'],\r\n  // books:[],headphone:[],tablets:[]}\r\n  const cats=ca\r\n  console.log(cats)\r\n  console.log(ca)\r\n  console.log(Object.keys(ca))\r\n  useEffect(() => {\r\n    if(cat){\r\n      dispatch(listProductsCat(cat))\r\n    }\r\n    else{\r\n      console.log('lklk')\r\n      dispatch(listProducts())\r\n    }\r\n  }, [dispatch,cat])\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={2}>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Card.Title><h6><strong>Product Catagaries</strong></h6></Card.Title>\r\n          {Object.keys(cats).map((cat) => (\r\n            <Dropdown as={ButtonGroup} className=\"btn btn-sm p-0\" style={{width:\"100%\"}} block>\r\n              <LinkContainer to={`/products/${cat}`} className=\"p-1\" style={{width:\"85%\"}}>\r\n              <Button className=\"btn btn-sm\" style={{width:\"100%\"}} variant=\"outline-dark\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{cat.replace('_',\" \")}</p></Button>\r\n            </LinkContainer>\r\n              <Dropdown.Toggle split className=\"btn btn-sm\" id=\"dropdown-split-basic\" variant=\"outline-dark\"/>\r\n              <Dropdown.Menu>\r\n            {cats[cat].map((c)=>(\r\n              <LinkContainer to={`/products/${cat}-${c}`} className=\"p-1\" style={{width:\"100%\"}}>\r\n                <Dropdown.Item className=\"btn btn-outline-dark btn-sm\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{c.replace('_',\" \")}</p></Dropdown.Item>\r\n              </LinkContainer>\r\n            ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          ))}\r\n          </Card.Body>\r\n        </Card>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Form.Group controlId=\"formBasicRange\">\r\n            <Form.Label>Price Range</Form.Label><Form.Control type=\"range\" min={0} max={100}/>\r\n          </Form.Group>\r\n          <Row>\r\n            <Col md={6} className='pr-1'>\r\n            <Form.Label>Min</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"0\"></Form.Control>\r\n            </Col>\r\n            <Col md={6} className='pl-1'>\r\n            <Form.Label>Max</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"1,0000\"></Form.Control>\r\n            </Col>\r\n          </Row>\r\n          <Button className=\"btn btn-block btn-sm mt-3\" variant='outline-dark'>Apply</Button>\r\n          </Card.Body>\r\n        </Card>\r\n       \r\n        </Col>\r\n        <Col md={10}>\r\n        {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\" Children={error} />\r\n      ) : (\r\n        <>\r\n        <h1>Latest Products</h1>\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        </>\r\n      )}\r\n        </Col>\r\n      </Row>\r\n      \r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\VariantListScreen.js",["276"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    createVariant,\r\n    deleteVariant,\r\n    listVariants,\r\n} from \"../action/productAction\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { VARIANT_CREATE_RESET, VARIANT_DELETE_RESET } from \"../constants/variantConstants\";\r\n\r\nexport default function VariantListScreen(props) {\r\n    const productId = props.match.params.id;\r\n\r\n    const variantList = useSelector((state) => state.variantList);\r\n    const { loading, error, variants } = variantList;\r\n\r\n  const variantCreate = useSelector((state) => state.variantCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    variant: createdVariant,\r\n  } = variantCreate;\r\n\r\n  const variantDelete = useSelector((state) => state.variantDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = variantDelete;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successCreate) {\r\n      dispatch({ type: VARIANT_CREATE_RESET });\r\n      props.history.push(`/product/${productId}/variant/${createdVariant.variant_id}/edit`);\r\n    }\r\n    if (successDelete) {\r\n      dispatch({ type: VARIANT_DELETE_RESET });\r\n    }\r\n    dispatch(listVariants(productId));\r\n  }, [productId, successCreate,successDelete, createVariant, dispatch, props.history]);\r\n\r\n  const deleteHandler = (variant) => {\r\n    if (window.confirm(\"Are you sure to delete?\")) {\r\n      dispatch(deleteVariant(variant.product_id,variant.variant_id));\r\n    }\r\n  };\r\n  const createHandler = () => {\r\n    dispatch(createVariant(productId));\r\n  };\r\n  return (\r\n    <div className=\"admin\">\r\n      <div className=\"row\">\r\n        <h1>Variants List - Product {productId}</h1>\r\n        <button type=\"button\" className=\"primary\" onClick={createHandler}>\r\n          Create Variant\r\n        </button>\r\n      </div>\r\n\r\n      {loadingDelete && <Loader></Loader>}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loadingCreate && <Loader></Loader>}\r\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>SKU</th>\r\n              <th>COLOR</th>\r\n              <th>SIZE</th>\r\n              <th>PRICE</th>\r\n              <th>OFFER</th>\r\n              <th>IMAGE_URL</th>\r\n              <th>NO_STOCK</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {variants.map((variant) => (\r\n              <tr key={variant.variant_id}>\r\n                <td>{variant.variant_id}</td>\r\n                <td>{variant.SKU}</td>\r\n                <td>{variant.color}</td>\r\n                <td>{variant.size}</td>\r\n                <td>{variant.price}</td>\r\n                <td>{variant.offer}</td>\r\n                <td>{variant.image_url}</td>\r\n                <td>{variant.no_stock}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() =>\r\n                      props.history.push(`/product/${productId}/variant/${variant.variant_id}/edit`)\r\n                    }\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() => deleteHandler(variant)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\CartScreen.js",["277","278","279"],"import React, {useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link} from \"react-router-dom\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { addToCart , removeFromCart} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form\r\n} from \"react-bootstrap\";\r\n\r\nconst CartScreen = ({match,location,history})=>{\r\n    const Id = match.params.id?match.params.id.split('-'):[]\r\n    const productId=Id[0]\r\n    const variantId=Id[1]\r\n    const qty = location.search ? Number(location.search.split('=')[1]):1\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state=>state.cart)\r\n    const {cartItems} = cart\r\n    console.log(cartItems)\r\n    useEffect(()=>{\r\n        if(productId){\r\n            dispatch(addToCart(productId,variantId,qty))\r\n        }\r\n    },[dispatch,productId,qty])\r\n\r\n    console.log(cart)\r\n\r\n    const removeFromCartHandler=(product_id,variant_id)=>{\r\n        dispatch(removeFromCart(product_id,variant_id))\r\n    }\r\n    const checkoutHandler =()=>{\r\n        history.push('/login?redirect=shipping')\r\n        // history.push('/shipping')\r\n    }\r\n\r\n    return <Row>\r\n        <Col md={8}>\r\n            <h1>Shopping Cart</h1>\r\n            {cartItems.length===0 ? (<Message Children={\"Your cart is empty\"}>Your cart is empty<Link to='/'>Go Back</Link></Message>):(<ListGroup variant='flush'>\r\n                {cartItems.map(item=>(\r\n                    <ListGroup.Item key={item.product}>\r\n                        <Row>\r\n                            <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                ${item.price}\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Form.Control as='select' value={item.qty} onChange={(e)=>dispatch(addToCart(item.product_id,item.variant_id,Number(e.target.value)))}>\r\n                                    {[...Array(item.noStock).keys()].map((x)=>(\r\n                                        <option key={x+1} value={x+1}>{x+1}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Button type='button' variant='light' onClick={()=>removeFromCartHandler(item.product_id,item.variant_id)}>\r\n                                    <i className='fas fa-trash'></i>\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                ))}\r\n            </ListGroup>)}\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Subtotal ({cartItems.reduce((acc,item)=>acc+item.qty, 0)})items</h2>\r\n                        LKR {cartItems.reduce((acc,item)=>acc + item.qty * item.price, 0).toFixed(2)}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n}\r\nexport default CartScreen;\r\n\r\n","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\DashBoardScreen.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\ProductListScreen.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js",["280","281","282"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  detailsProductAdmin,\r\n  updateProduct\r\n} from '../action/productAction';\r\nimport { listCategories } from '../action/categoryActions';\r\nimport { listSubcategories } from '../action/subcategoryActions';\r\nimport { listSuppliers } from '../action/supplierActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nexport default function ProductEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const [product_name, setProduct_name] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [weight, setWeight] = useState('');\r\n  const [dimension, setDimension] = useState('');\r\n  const [category_name, setCategory_name] = useState('');\r\n  const [subcat_name, setSubcat_name] = useState('');\r\n  const [supplier_name, setSupplier_name] = useState('');\r\n\r\n  const productDetailsAdmin = useSelector((state) => state.productDetailsAdmin);\r\n  const { loading, error, product } = productDetailsAdmin;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  const categoryList = useSelector((state) => state.categoryList);\r\n  const { loading: catloading, error: caterror, categories:categories } = categoryList;\r\n\r\n  const subcategoryList = useSelector((state) => state.subcategoryList);\r\n  const { loading: scatloading, error: scaterror, subcategories } = subcategoryList;\r\n  \r\n  const supplierList = useSelector((state) => state.supplierList);\r\n  const { loading: suploading, error: superror, suppliers } = supplierList;\r\n\r\n  let categoryId = null;\r\n  categories.forEach(c => {\r\n    if (category_name === c.category_name){\r\n      categoryId = c.category_id;\r\n    }\r\n  })\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push('/productlist');\r\n    }\r\n    if (!catloading && !caterror) {\r\n      dispatch(listCategories());\r\n    }\r\n    if (categoryId !== null || !scatloading && !scaterror) {\r\n      dispatch(listSubcategories(categoryId));\r\n    }\r\n    if (!suploading && !superror) {\r\n      dispatch(listSuppliers());\r\n    }\r\n    if (!product || product.product_id!=productId || successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      dispatch(detailsProductAdmin(productId));\r\n    } else {\r\n      setProduct_name(product.product_name);\r\n      setDescription(product.description);\r\n      setWeight(product.weight);\r\n      setDimension(product.dimension);\r\n      setBrand(product.brand);\r\n      setCategory_name(product.category_name);\r\n      setSubcat_name(product.subcat_name);\r\n      setSupplier_name(product.supplier_name);\r\n    }\r\n  }, [product, dispatch, productId, successUpdate, props.history]);\r\n\r\n  useEffect(() => {\r\n    if (categoryId !== null) {\r\n      dispatch(listSubcategories(categoryId));\r\n    }\r\n  }, [categoryId, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        product_id: productId,\r\n        product_name,\r\n        description,\r\n        weight,\r\n        dimension,\r\n        brand,\r\n        category_name,\r\n        subcat_name,\r\n        supplier_name,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit Product {productId}</h1>\r\n        </div>\r\n        {loadingUpdate && <Loader></Loader>}\r\n        {/* {catloading && <Loader></Loader>} */}\r\n        {/* {caterror && <Message variant=\"danger\">{caterror}</Message>} */}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"product_name\">Product_name</label>\r\n              <input\r\n                id=\"product_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Product name\"\r\n                value={product_name}\r\n                onChange={(e) => setProduct_name(e.target.value)}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                rows=\"3\"\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></textarea>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"weight\">Weight</label>\r\n              <input\r\n                id=\"weight\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Weight\"\r\n                value={weight}\r\n                onChange={(e) => setWeight(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"dimension\">Dimension</label>\r\n              <input\r\n                id=\"dimension\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Dimension\"\r\n                value={dimension}\r\n                onChange={(e) => setDimension(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input\r\n                id=\"brand\"\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"category_name\">Category</label>\r\n              <select\r\n                id=\"category_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category\"\r\n                value={category_name}\r\n                onChange={(e) => setCategory_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the category</option>\r\n                {categories.map(category => <option key={category.category_id}> {category.category_name} </option> )}\r\n              </select>\r\n            </div>\r\n            {/* <div>\r\n              <label htmlFor=\"category_description\">Category_description</label>\r\n              <input\r\n                id=\"category_description\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category_description\"\r\n                value={category_description}\r\n                onChange={(e) => setCategory_description(e.target.value)}\r\n              ></input>\r\n            </div> */}\r\n            <div>\r\n              <label htmlFor=\"subcat_name\">Subcategory</label>\r\n              <select\r\n                id=\"subcat_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Subcategory_name\"\r\n                value={subcat_name}\r\n                onChange={(e) => setSubcat_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the subcategory</option>\r\n                {subcategories.map(subcategory => <option key={subcategory.subcat_id}> {subcategory.subcat_name} </option> )}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"supplier_name\">Supplier</label>\r\n              <select\r\n                id=\"supplier_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Supplier_name\"\r\n                value={supplier_name}\r\n                onChange={(e) => setSupplier_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the supplier</option>\r\n                {suppliers.map(supplier => <option key={supplier.supplier_id}> {supplier.supplier_name} </option> )}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label></label>\r\n              <button className=\"primary\" type=\"submit\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\Header.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\ProductScreen.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\Loader.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\FormContainer.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\userConstants.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\supplierConstants.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\productConstants.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\Message.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\categoryConstants.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\Variant.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\action\\cartAction.js",["283","284"],"import axios from 'axios'\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart=(product_id,variant_id,qty) => async (dispatch,getState)=>{\r\n    const {data}=await axios.get(`/api/products/${product_id}`)\r\n    console.log(data)\r\n    if(getState().userLogin){\r\n        \r\n        const {userLogin:{userInfo}}=getState()\r\n        const config={\r\n        headers:{\r\n            'Content-Type':'application/json',\r\n            Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const cart={product:product_id, variant:variant_id, quantity:qty, customerID:5}\r\n        console.log(cart)\r\n        const customerID=5\r\n        const {data1} =await axios.post('/api/cart/addItem',{product_id, variant_id, qty, customerID},config)\r\n    }\r\n\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload:{\r\n            product_id:data.Product.product_id,\r\n            variant_id:data.Onevariant.variantId,\r\n            name:data.Product.product_name,\r\n            image:data.image,\r\n            price:data.Onevariant.price,\r\n            noStock:data.Onevariant.noStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\n// export const addToCart = (product_id,variant_id,qty)=>async(dispatch,getState)=>{\r\n//     try{\r\n//         dispatch({\r\n//             type:CART_ADD_ITEM_REQUEST\r\n//         })\r\n//         const {userLogin:{userInfo}}=getState()\r\n//         const config={\r\n//             headers:{\r\n//                 'Content-Type':'application/json',\r\n//                 Authorization:`Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n//         const cart={product_id,variant_id,qty}\r\n//         const {data} =await axios.put(`/api/cart/addItem`,cart,config)\r\n//         dispatch({\r\n//             type:CART_ADD_ITEM_SUCCESS,\r\n//             payload:data\r\n//         })\r\n//     }\r\n//     catch(error){\r\n//         dispatch({\r\n//             type:CART_ADD_ITEM_FAIL,\r\n//             payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport const removeFromCart= (product_id,variant_id)=>(dispatch,getState)=>{\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload:{product_id,variant_id},\r\n    })\r\n    if(getState().userLogin){\r\n        console.log('dfdfdf')\r\n    }\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress= (data)=>async(dispatch,getState)=>{\r\n    const {data1} =await axios.post('/api/customer/5/shipment',data)\r\n    // console.log(data)\r\n    // if(getState().userLogin){\r\n    //     const {userLogin:{userInfo}}=getState()\r\n    //     const config={\r\n    //     headers:{\r\n    //         'Content-Type':'application/json',\r\n    //         Authorization:`Bearer ${userInfo.token}`\r\n    //         }\r\n    //     }\r\n    //     const {data} =await axios.post('/api/customer/5/shipment',data,config)\r\n    // }\r\n    dispatch({\r\n        type:CART_SAVE_SHIPPING_ADDRESS,\r\n        payload:data,\r\n    })\r\n    localStorage.setItem('shippingAddress',JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod= (data)=>(dispatch)=>{\r\n    dispatch({\r\n        type:CART_SAVE_PAYMENT_METHOD,\r\n        payload:data,\r\n    })\r\n    localStorage.setItem('paymentMethod',JSON.stringify(data))\r\n}\r\n","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\action\\productAction.js",["285","286"],"import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST1,\r\n  PRODUCT_DETAILS_SUCCESS1,\r\n  PRODUCT_DETAILS_FAIL1,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n} from '../constants/productConstants';\r\n\r\nimport {\r\n  VARIANT_LIST_REQUEST,\r\n  VARIANT_LIST_SUCCESS,\r\n  VARIANT_LIST_FAIL,\r\n  VARIANT_DETAILS_REQUEST,\r\n  VARIANT_DETAILS_SUCCESS,\r\n  VARIANT_DETAILS_FAIL,\r\n  VARIANT_CREATE_FAIL,\r\n  VARIANT_CREATE_REQUEST,\r\n  VARIANT_CREATE_SUCCESS,\r\n  VARIANT_UPDATE_REQUEST,\r\n  VARIANT_UPDATE_SUCCESS,\r\n  VARIANT_UPDATE_FAIL,\r\n  VARIANT_DELETE_REQUEST,\r\n  VARIANT_DELETE_FAIL,\r\n  VARIANT_DELETE_SUCCESS,\r\n} from '../constants/variantConstants';\r\n\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/products\");\r\n    console.log(data)\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const listProductsCat = (cat) => async (dispatch) => {\r\n  cat=cat.split(\"-\").join('/')\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(`/api/products/category/${cat}`);\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/products/${productId}`)\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const detailsProductVariant = (productId, variants) => async (\r\n  dispatch\r\n  ) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST1, payload: productId });\r\n  try {\r\n    console.log(variants)\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST1 });\r\n    const { data } = await axios.post(`/api/products/v`, variants);\r\n    // const data = productdata[productId-1];\r\n    const h = { ...data, vary: variants };\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS1, payload: h });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL1,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const listProductsAdmin = () => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_LIST_REQUEST });\r\n  try {\r\n\r\n    const { data } = await axios.get(`/api/products/productlist`);\r\n    // const data = [\r\n    //   {\r\n    //     product_id: 1,\r\n    //     product_name: \"ssdsd\",\r\n    //     category_name: \"dvsvs\",\r\n    //     subcat_name: \"sdvsv\",\r\n    //     brand: \"svsv\",\r\n    //     supplier_name: \"sdvsvs\",\r\n    //     weight: \"sdvsdvs\",\r\n    //     dimension: \"vsdvdsv\",\r\n    //     description: \"svsdvsd\",\r\n    //   }\r\n    // ]\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const detailsProductAdmin = (productId) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  try {\r\n    \r\n    const {data} = await axios.get(`/api/products/productlist/${productId}`)\r\n    \r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = (newproduct) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n  try {\r\n    // const newproduct = {\r\n    //   product_name: \"sampleproduct\",\r\n    //   category_name: null,\r\n    //   subcat_name: null,\r\n    //   description: \"sampledescription\",\r\n    //   weight: \"sampleweight\",\r\n    //   dimension: \"sampledimension\",\r\n    //   brand: \"samplebrand\",\r\n    //   supplier_name: null,\r\n    // };\r\n    const { data } = await axios.post(`/api/products/addProduct`, newproduct);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/products/productlist/edit/${product.product_id}`, product);\r\n\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = axios.delete(`/api/products/productlist/delete/${productId}`);\r\n\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const listVariants = (productId) => async (dispatch) =>{\r\n  dispatch({ type: VARIANT_LIST_REQUEST });\r\n  try {\r\n\r\n      // const { data } = await axios.get(\"/api/product/productlist/${productId}/variantlist\");\r\n      const { data } = await axios.get(`/api/products/productlist/${productId}/variants`);\r\n\r\n      dispatch({\r\n      type: VARIANT_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n  } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: VARIANT_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n  }\r\n}\r\n\r\nexport const detailsVariant = (productId,variantId) => async (dispatch) => {\r\n  dispatch({ type: VARIANT_DETAILS_REQUEST, payload: (productId,variantId) });\r\n  try {\r\n    \r\n    // const {data} = await axios.get(`/api/products/productlist/${productId}/variants/${variantId}`)\r\n    const {data} = await axios.get(`/api/products/productlist/${productId}/variants/${variantId}`)\r\n\r\n    dispatch({ type: VARIANT_DETAILS_SUCCESS, payload: data[0] });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: VARIANT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createVariant = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_CREATE_REQUEST });\r\n  try {\r\n    const newvariant = {\r\n      product_id: productId,\r\n      SKU:\"samplesku\",\r\n      price: null,\r\n      offer: null,\r\n      color: null,\r\n      size: null,\r\n      no_stock: null,\r\n      image_url: null,\r\n    };\r\n    const { data } = await axios.post(`/api/products/productlist/${productId}/variants/addvariant`, newvariant);\r\n    dispatch({\r\n      type: VARIANT_CREATE_SUCCESS,\r\n      payload: data.variant,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\nexport const updateVariant = (variant) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_UPDATE_REQUEST, payload: variant });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/products/productlist/${variant.product_id}/variants/editvariant/${variant.variant_id}`, variant);\r\n\r\n    dispatch({ type: VARIANT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\nexport const deleteVariant = (productId,variantId) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_DELETE_REQUEST, payload: (productId,variantId) });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = axios.delete(`/api/products/productlist/${productId}/variants/delete/${variantId}`);\r\n\r\n    dispatch({ type: VARIANT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_DELETE_FAIL, payload: message });\r\n  }\r\n};","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\Product.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\constants\\variantConstants.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\action\\userActions.js",["287"],"import {USER_ADDRESS_FAIL, USER_ADDRESS_REQUEST, USER_ADDRESS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS} from '../constants/userConstants'\r\nimport axios from 'axios'\r\nexport const login = (email, password)=>async(dispatch)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_LOGIN_REQUEST\r\n        })\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const {data} =await axios.post('/api/customer/signin',{email,password},config)\r\n        console.log('bnbn')\r\n        console.log(data)\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout=(dispatch)=>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type:USER_LOGOUT})\r\n}\r\n\r\nexport const register = (email, password, fName,lName,zipCode,addressLine1,addressLine2,city,state,phone)=>async(dispatch)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_REGISTER_REQUEST\r\n        })\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const {data} =await axios.post('/api/customer/register',{email,password, fName,lName,zipCode,addressLine1,addressLine2,city,state,phone},config)\r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id)=>async(dispatch,getState)=>{\r\n    try{\r\n        \r\n        dispatch({\r\n            type:USER_DETAILS_REQUEST\r\n        })\r\n        console.log('vvvvvvvvvvvvvvvvvvvvvvvvvvv')\r\n        const {userLogin:{userInfo}}=getState()\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} =await axios.get(`/api/customer/4`,config)\r\n        console.log(data)\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n        \r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user)=>async(dispatch,getState)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n        const {userLogin:{userInfo}}=getState()\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} =await axios.put(`/api/customer/profile`,user,config)\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_SUCCESS,\r\n            payload:data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserAddress = (id)=>async(dispatch,getState)=>{\r\n    try{\r\n        \r\n        dispatch({\r\n            type:USER_ADDRESS_REQUEST\r\n        })\r\n        const {userLogin:{userInfo}}=getState()\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        console.log('oooooooooooooooooooooooooooooooooooooooooooooooooooooo')\r\n        let {data} =await axios.get(`/api/customer/5/shipment`,config)\r\n        data=data.Customer\r\n        data={addressLine1: data.address_line_1, addressLine2: data.address_line_2, zip: data.zip_code ,phone: data.phone, city: data.city, province: data.state}\r\n        console.log('oooooooooooooooooooooooooooooooooooooooooooooooooooooo')\r\n        console.log(data)\r\n        dispatch({\r\n            type:USER_ADDRESS_SUCCESS,\r\n            payload:data\r\n        })\r\n        \r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_ADDRESS_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\action\\categoryActions.js",["288"],"import axios from \"axios\";\r\nimport {\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_SUCCESS,\r\n  CATEGORY_LIST_FAIL,\r\n  CATEGORY_DETAILS_REQUEST,\r\n  CATEGORY_DETAILS_SUCCESS,\r\n  CATEGORY_DETAILS_FAIL,\r\n  CATEGORY_CREATE_FAIL,\r\n  CATEGORY_CREATE_REQUEST,\r\n  CATEGORY_CREATE_SUCCESS,\r\n  CATEGORY_UPDATE_REQUEST,\r\n  CATEGORY_UPDATE_SUCCESS,\r\n  CATEGORY_UPDATE_FAIL,\r\n  CATEGORY_DELETE_REQUEST,\r\n  CATEGORY_DELETE_FAIL,\r\n  CATEGORY_DELETE_SUCCESS,\r\n} from '../constants/categoryConstants';\r\n\r\n\r\nexport const listCategories = () => async (dispatch) => {\r\n    dispatch({ type: CATEGORY_LIST_REQUEST });\r\n    try {\r\n\r\n      const { data } = await axios.get(`/api/categories`);\r\n\r\n      dispatch({\r\n      type: CATEGORY_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: CATEGORY_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n    }\r\n};\r\n  \r\nexport const detailsCategory = (categoryId) => async (dispatch) => {\r\n  dispatch({ type: CATEGORY_DETAILS_REQUEST, payload: categoryId });\r\n  try {\r\n    dispatch({ type: CATEGORY_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/categories/${categoryId}`)\r\n\r\n    dispatch({ type: CATEGORY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: CATEGORY_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createCategory = () => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_CREATE_REQUEST });\r\n  try {\r\n\r\n    const newcategory = {\r\n      category_name: \"samplecategory\",\r\n      description: \"sampledescription\",\r\n    };\r\n    const { data } = await axios.post('/api/categories/',newcategory);\r\n\r\n\r\n    dispatch({\r\n      type: CATEGORY_CREATE_SUCCESS,\r\n      payload: data.category,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateCategory = (category) => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_UPDATE_REQUEST, payload: category });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/categories/${category.category_id}`, category);\r\n\r\n    dispatch({ type: CATEGORY_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteCategory = (categoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_DELETE_REQUEST, payload: categoryId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/categories/${categoryId}`);\r\n\r\n    dispatch({ type: CATEGORY_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\action\\orderActions.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\components\\Rating.js",[],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\action\\subcategoryActions.js",["289"],"import axios from \"axios\";\r\nimport {\r\n  SUBCATEGORY_LIST_REQUEST,\r\n  SUBCATEGORY_LIST_SUCCESS,\r\n  SUBCATEGORY_LIST_FAIL,\r\n  SUBCATEGORY_DETAILS_REQUEST,\r\n  SUBCATEGORY_DETAILS_SUCCESS,\r\n  SUBCATEGORY_DETAILS_FAIL,\r\n  SUBCATEGORY_CREATE_FAIL,\r\n  SUBCATEGORY_CREATE_REQUEST,\r\n  SUBCATEGORY_CREATE_SUCCESS,\r\n  SUBCATEGORY_UPDATE_REQUEST,\r\n  SUBCATEGORY_UPDATE_SUCCESS,\r\n  SUBCATEGORY_UPDATE_FAIL,\r\n  SUBCATEGORY_DELETE_REQUEST,\r\n  SUBCATEGORY_DELETE_FAIL,\r\n  SUBCATEGORY_DELETE_SUCCESS,\r\n} from '../constants/subcategoryConstants';\r\n\r\n\r\nexport const listSubcategories = (categoryId) => async (dispatch) =>{\r\n    dispatch({ type: SUBCATEGORY_LIST_REQUEST });\r\n    try {\r\n      // const { data } = await axios.get(\"/api/categories/${categoryId}/subcategorylist\");\r\n      const { data } = await axios.get(`/api/categories/${categoryId}/subcategories`);\r\n\r\n      dispatch({\r\n      type: SUBCATEGORY_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({\r\n        type: SUBCATEGORY_LIST_FAIL,\r\n        payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    }\r\n  }\r\n  \r\nexport const detailsSubcategory = (categoryId,subcategoryId) => async (dispatch) => {\r\n  dispatch({ type: SUBCATEGORY_DETAILS_REQUEST, payload: (categoryId,subcategoryId) });\r\n  try {\r\n    dispatch({ type: SUBCATEGORY_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/categories/${categoryId}/subcategories/${subcategoryId}`)\r\n\r\n    dispatch({ type: SUBCATEGORY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: SUBCATEGORY_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createSubcategory = (categoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_CREATE_REQUEST });\r\n  try {\r\n\r\n    const newsubcategory = {\r\n        subcat_name: \"samplesubcategory\",\r\n        category_id: categoryId,\r\n    };\r\n    const { data } = await axios.post(`/api/categories/${categoryId}/subcategories/`,newsubcategory);\r\n\r\n\r\n    dispatch({\r\n      type: SUBCATEGORY_CREATE_SUCCESS,\r\n      payload: data.subcategory,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateSubcategory = (categoryId,subcategory) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_UPDATE_REQUEST, payload: subcategory });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/categories/${categoryId}/subcategories/${subcategory.subcategory_id}`, subcategory);\r\n\r\n    dispatch({ type: SUBCATEGORY_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteSubcategory = (categoryId,subcategoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_DELETE_REQUEST, payload: (categoryId,subcategoryId) });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/categories/${categoryId}/subcategories/${subcategoryId}`);\r\n\r\n    dispatch({ type: SUBCATEGORY_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\action\\supplierActions.js",["290"],"import axios from \"axios\";\r\nimport {\r\n  SUPPLIER_LIST_REQUEST,\r\n  SUPPLIER_LIST_SUCCESS,\r\n  SUPPLIER_LIST_FAIL,\r\n  SUPPLIER_DETAILS_REQUEST,\r\n  SUPPLIER_DETAILS_SUCCESS,\r\n  SUPPLIER_DETAILS_FAIL,\r\n  SUPPLIER_CREATE_FAIL,\r\n  SUPPLIER_CREATE_REQUEST,\r\n  SUPPLIER_CREATE_SUCCESS,\r\n  SUPPLIER_UPDATE_REQUEST,\r\n  SUPPLIER_UPDATE_SUCCESS,\r\n  SUPPLIER_UPDATE_FAIL,\r\n  SUPPLIER_DELETE_REQUEST,\r\n  SUPPLIER_DELETE_FAIL,\r\n  SUPPLIER_DELETE_SUCCESS,\r\n} from '../constants/supplierConstants';\r\n\r\n\r\nexport const listSuppliers = () => async (dispatch) => {\r\n    dispatch({ type: SUPPLIER_LIST_REQUEST });\r\n    try {\r\n\r\n      const { data } = await axios.get(`/api/suppliers/`);\r\n\r\n      dispatch({\r\n      type: SUPPLIER_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: SUPPLIER_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n    }\r\n};\r\n  \r\nexport const detailsSupplier = (supplierId) => async (dispatch) => {\r\n  dispatch({ type: SUPPLIER_DETAILS_REQUEST, payload: supplierId });\r\n  try {\r\n    dispatch({ type: SUPPLIER_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/suppliers/${supplierId}`)\r\n\r\n    dispatch({ type: SUPPLIER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: SUPPLIER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createSupplier = () => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_CREATE_REQUEST });\r\n  try {\r\n\r\n    const newsupplier = {\r\n        supplier_name: \"samplesupplier\",\r\n        contact_number: null,\r\n        email: null,\r\n    };\r\n    const { data } = await axios.post('/api/suppliers/',newsupplier);\r\n\r\n\r\n    dispatch({\r\n      type: SUPPLIER_CREATE_SUCCESS,\r\n      payload: data.supplier,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateSupplier = (supplier) => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_UPDATE_REQUEST, payload: supplier });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/suppliers/${supplier.supplier_id}`, supplier);\r\n\r\n    dispatch({ type: SUPPLIER_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteSupplier = (supplierId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_DELETE_REQUEST, payload: supplierId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/suppliers/${supplierId}`);\r\n\r\n    dispatch({ type: SUPPLIER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_DELETE_FAIL, payload: message });\r\n  }\r\n};","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\ProductCreateScreen.js",["291","292","293","294"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listCategories } from '../action/categoryActions';\r\nimport { createProduct } from '../action/productAction';\r\nimport { listSubcategories } from '../action/subcategoryActions';\r\nimport { listSuppliers } from '../action/supplierActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\nexport default function ProductCreateScreen(props) {\r\n  const [product_name, setProduct_name] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [weight, setWeight] = useState('');\r\n  const [dimension, setDimension] = useState('');\r\n  const [category_name, setCategory_name] = useState('');\r\n  const [subcat_name, setSubcat_name] = useState('');\r\n  const [supplier_name, setSupplier_name] = useState('');\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading,\r\n    error,\r\n    success: successCreate,\r\n  } = productCreate;\r\n\r\n  const categoryList = useSelector((state) => state.categoryList);\r\n  const { loading: catloading, error: caterror, categories:categories } = categoryList;\r\n\r\n  const subcategoryList = useSelector((state) => state.subcategoryList);\r\n  const { loading: scatloading, error: scaterror, subcategories } = subcategoryList;\r\n  \r\n  const supplierList = useSelector((state) => state.supplierList);\r\n  const { loading: suploading, error: superror, suppliers } = supplierList;\r\n\r\n  let categoryId = null;\r\n  categories.forEach(c => {\r\n    if (category_name === c.category_name){\r\n      categoryId = c.category_id;\r\n    }\r\n  })\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successCreate) {\r\n        dispatch({ type: PRODUCT_CREATE_RESET });\r\n        props.history.push('/productlist');\r\n    }\r\n    if (!catloading && !caterror) {\r\n        dispatch(listCategories());\r\n    }\r\n    if (categoryId !== null || !scatloading && !scaterror) {\r\n        dispatch(listSubcategories(categoryId));\r\n    }\r\n    if (!suploading && !superror) {\r\n        dispatch(listSuppliers());\r\n    }\r\n    // if (!product || product.product_id!=productId || successUpdate) {\r\n    //   dispatch({ type: PRODUCT_UPDATE_RESET });\r\n    //   dispatch(detailsProductAdmin(productId));\r\n    // }\r\n    // else {\r\n    //   setProduct_name(product.product_name);\r\n    //   setDescription(product.description);\r\n    //   setWeight(product.weight);\r\n    //   setDimension(product.dimension);\r\n    //   setBrand(product.brand);\r\n    //   setCategory_name(product.category_name);\r\n    //   setSubcat_name(product.subcat_name);\r\n    //   setSupplier_name(product.supplier_name);\r\n    // }\r\n  }, [dispatch, successCreate, props.history]);\r\n\r\n  useEffect(() => {\r\n    if (categoryId !== null) {\r\n      dispatch(listSubcategories(categoryId));\r\n    }\r\n  }, [categoryId, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n        createProduct({\r\n        product_name,\r\n        description,\r\n        weight,\r\n        dimension,\r\n        brand,\r\n        category_name,\r\n        subcat_name,\r\n        supplier_name,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Create New Product</h1>\r\n        </div>\r\n        {/* {loadingUpdate && <Loader></Loader>} */}\r\n        {/* {catloading && <Loader></Loader>} */}\r\n        {/* {caterror && <Message variant=\"danger\">{caterror}</Message>} */}\r\n        {/* {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>} */}\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"product_name\">Product_name</label>\r\n              <input\r\n                id=\"product_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Product name\"\r\n                value={product_name}\r\n                onChange={(e) => setProduct_name(e.target.value)}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                rows=\"3\"\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></textarea>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"weight\">Weight</label>\r\n              <input\r\n                id=\"weight\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Weight\"\r\n                value={weight}\r\n                onChange={(e) => setWeight(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"dimension\">Dimension</label>\r\n              <input\r\n                id=\"dimension\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Dimension\"\r\n                value={dimension}\r\n                onChange={(e) => setDimension(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input\r\n                id=\"brand\"\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"category_name\">Category</label>\r\n              <select\r\n                id=\"category_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category\"\r\n                value={category_name}\r\n                onChange={(e) => setCategory_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the category</option>\r\n                {categories.map(category => <option key={category.category_id}> {category.category_name} </option> )}\r\n              </select>\r\n            </div>\r\n            {/* <div>\r\n              <label htmlFor=\"category_description\">Category_description</label>\r\n              <input\r\n                id=\"category_description\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category_description\"\r\n                value={category_description}\r\n                onChange={(e) => setCategory_description(e.target.value)}\r\n              ></input>\r\n            </div> */}\r\n            <div>\r\n              <label htmlFor=\"subcat_name\">Subcategory</label>\r\n              <select\r\n                id=\"subcat_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Subcategory_name\"\r\n                value={subcat_name}\r\n                onChange={(e) => setSubcat_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the subcategory</option>\r\n                {subcategories.map(subcategory => <option key={subcategory.subcat_id}> {subcategory.subcat_name} </option> )}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"supplier_name\">Supplier</label>\r\n              <select\r\n                id=\"supplier_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Supplier_name\"\r\n                value={supplier_name}\r\n                onChange={(e) => setSupplier_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the supplier</option>\r\n                {suppliers.map(supplier => <option key={supplier.supplier_id}> {supplier.supplier_name} </option> )}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label></label>\r\n              <button className=\"primary\" type=\"submit\">\r\n                Create\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\Report1Screen.js",["295"],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\Report2Screen.js",["296","297","298"],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\Report3Screen.js",["299"],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\Report4Screen.js",["300","301","302","303","304","305","306","307"],"D:\\Projects\\DB-Project\\dbproject\\frontend\\src\\screens\\Report5Screen.js",["308"],{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","severity":1,"message":"314","line":98,"column":3,"nodeType":"315","messageId":"316","endLine":98,"endColumn":7},{"ruleId":"313","severity":1,"message":"317","line":99,"column":3,"nodeType":"315","messageId":"316","endLine":99,"endColumn":12},{"ruleId":"313","severity":1,"message":"314","line":100,"column":3,"nodeType":"315","messageId":"316","endLine":100,"endColumn":7},{"ruleId":"318","severity":1,"message":"319","line":6,"column":8,"nodeType":"320","messageId":"321","endLine":6,"endColumn":15},{"ruleId":"318","severity":1,"message":"322","line":7,"column":8,"nodeType":"320","messageId":"321","endLine":7,"endColumn":14},{"ruleId":"318","severity":1,"message":"323","line":29,"column":12,"nodeType":"320","messageId":"321","endLine":29,"endColumn":19},{"ruleId":"318","severity":1,"message":"324","line":29,"column":21,"nodeType":"320","messageId":"321","endLine":29,"endColumn":26},{"ruleId":"325","severity":1,"message":"326","line":44,"column":53,"nodeType":"327","messageId":"316","endLine":44,"endColumn":55},{"ruleId":"328","severity":1,"message":"329","line":45,"column":33,"nodeType":"327","messageId":"330","endLine":45,"endColumn":75},{"ruleId":"325","severity":1,"message":"326","line":45,"column":53,"nodeType":"327","messageId":"316","endLine":45,"endColumn":55},{"ruleId":"325","severity":1,"message":"326","line":46,"column":42,"nodeType":"327","messageId":"316","endLine":46,"endColumn":44},{"ruleId":"325","severity":1,"message":"326","line":47,"column":37,"nodeType":"327","messageId":"316","endLine":47,"endColumn":39},{"ruleId":"325","severity":1,"message":"326","line":48,"column":45,"nodeType":"327","messageId":"316","endLine":48,"endColumn":47},{"ruleId":"325","severity":1,"message":"326","line":49,"column":39,"nodeType":"327","messageId":"316","endLine":49,"endColumn":41},{"ruleId":"331","severity":1,"message":"332","line":52,"column":7,"nodeType":"333","endLine":52,"endColumn":45,"suggestions":"334"},{"ruleId":"318","severity":1,"message":"335","line":13,"column":3,"nodeType":"320","messageId":"321","endLine":13,"endColumn":9},{"ruleId":"331","severity":1,"message":"336","line":32,"column":3,"nodeType":"333","endLine":32,"endColumn":5,"suggestions":"337"},{"ruleId":"331","severity":1,"message":"338","line":35,"column":3,"nodeType":"333","endLine":35,"endColumn":20,"suggestions":"339"},{"ruleId":"318","severity":1,"message":"340","line":22,"column":9,"nodeType":"320","messageId":"321","endLine":22,"endColumn":22},{"ruleId":"318","severity":1,"message":"341","line":31,"column":14,"nodeType":"320","messageId":"321","endLine":31,"endColumn":28},{"ruleId":"318","severity":1,"message":"342","line":32,"column":12,"nodeType":"320","messageId":"321","endLine":32,"endColumn":24},{"ruleId":"318","severity":1,"message":"343","line":9,"column":5,"nodeType":"320","messageId":"321","endLine":9,"endColumn":13},{"ruleId":"318","severity":1,"message":"344","line":3,"column":20,"nodeType":"320","messageId":"321","endLine":3,"endColumn":31},{"ruleId":"318","severity":1,"message":"345","line":3,"column":44,"nodeType":"320","messageId":"321","endLine":3,"endColumn":47},{"ruleId":"318","severity":1,"message":"346","line":3,"column":55,"nodeType":"320","messageId":"321","endLine":3,"endColumn":64},{"ruleId":"318","severity":1,"message":"347","line":3,"column":66,"nodeType":"320","messageId":"321","endLine":3,"endColumn":77},{"ruleId":"318","severity":1,"message":"348","line":48,"column":9,"nodeType":"320","messageId":"321","endLine":48,"endColumn":22},{"ruleId":"318","severity":1,"message":"349","line":1,"column":27,"nodeType":"320","messageId":"321","endLine":1,"endColumn":35},{"ruleId":"318","severity":1,"message":"322","line":5,"column":8,"nodeType":"320","messageId":"321","endLine":5,"endColumn":14},{"ruleId":"331","severity":1,"message":"350","line":29,"column":7,"nodeType":"333","endLine":29,"endColumn":31,"suggestions":"351"},{"ruleId":"352","severity":1,"message":"353","line":32,"column":49,"nodeType":"354","messageId":"355","endLine":32,"endColumn":70,"fix":"356"},{"ruleId":"352","severity":1,"message":"357","line":36,"column":51,"nodeType":"354","messageId":"355","endLine":36,"endColumn":78,"fix":"358"},{"ruleId":"325","severity":1,"message":"326","line":55,"column":39,"nodeType":"327","messageId":"316","endLine":55,"endColumn":41},{"ruleId":"318","severity":1,"message":"359","line":20,"column":16,"nodeType":"320","messageId":"321","endLine":20,"endColumn":21},{"ruleId":"318","severity":1,"message":"359","line":80,"column":12,"nodeType":"320","messageId":"321","endLine":80,"endColumn":17},{"ruleId":"318","severity":1,"message":"360","line":236,"column":13,"nodeType":"320","messageId":"321","endLine":236,"endColumn":17},{"ruleId":"318","severity":1,"message":"360","line":341,"column":13,"nodeType":"320","messageId":"321","endLine":341,"endColumn":17},{"ruleId":"318","severity":1,"message":"361","line":127,"column":15,"nodeType":"320","messageId":"321","endLine":127,"endColumn":21},{"ruleId":"318","severity":1,"message":"360","line":118,"column":13,"nodeType":"320","messageId":"321","endLine":118,"endColumn":17},{"ruleId":"318","severity":1,"message":"360","line":113,"column":13,"nodeType":"320","messageId":"321","endLine":113,"endColumn":17},{"ruleId":"318","severity":1,"message":"360","line":114,"column":13,"nodeType":"320","messageId":"321","endLine":114,"endColumn":17},{"ruleId":"352","severity":1,"message":"353","line":29,"column":49,"nodeType":"354","messageId":"355","endLine":29,"endColumn":70,"fix":"362"},{"ruleId":"363","severity":1,"message":"364","line":53,"column":29,"nodeType":"365","messageId":"366","endLine":53,"endColumn":31},{"ruleId":"363","severity":1,"message":"364","line":53,"column":45,"nodeType":"365","messageId":"366","endLine":53,"endColumn":47},{"ruleId":"331","severity":1,"message":"367","line":73,"column":6,"nodeType":"333","endLine":73,"endColumn":46,"suggestions":"368"},{"ruleId":"318","severity":1,"message":"369","line":1,"column":17,"nodeType":"320","messageId":"321","endLine":1,"endColumn":26},{"ruleId":"318","severity":1,"message":"369","line":2,"column":17,"nodeType":"320","messageId":"321","endLine":2,"endColumn":26},{"ruleId":"318","severity":1,"message":"370","line":9,"column":12,"nodeType":"320","messageId":"321","endLine":9,"endColumn":25},{"ruleId":"318","severity":1,"message":"371","line":9,"column":27,"nodeType":"320","messageId":"321","endLine":9,"endColumn":43},{"ruleId":"318","severity":1,"message":"369","line":2,"column":17,"nodeType":"320","messageId":"321","endLine":2,"endColumn":26},{"ruleId":"318","severity":1,"message":"372","line":3,"column":8,"nodeType":"320","messageId":"321","endLine":3,"endColumn":13},{"ruleId":"318","severity":1,"message":"373","line":11,"column":12,"nodeType":"320","messageId":"321","endLine":11,"endColumn":22},{"ruleId":"318","severity":1,"message":"374","line":11,"column":24,"nodeType":"320","messageId":"321","endLine":11,"endColumn":37},{"ruleId":"318","severity":1,"message":"375","line":12,"column":12,"nodeType":"320","messageId":"321","endLine":12,"endColumn":21},{"ruleId":"318","severity":1,"message":"376","line":13,"column":12,"nodeType":"320","messageId":"321","endLine":13,"endColumn":29},{"ruleId":"318","severity":1,"message":"377","line":13,"column":31,"nodeType":"320","messageId":"321","endLine":13,"endColumn":51},{"ruleId":"318","severity":1,"message":"378","line":22,"column":13,"nodeType":"320","messageId":"321","endLine":22,"endColumn":22},{"ruleId":"331","severity":1,"message":"379","line":30,"column":7,"nodeType":"333","endLine":30,"endColumn":9,"suggestions":"380"},{"ruleId":"318","severity":1,"message":"369","line":2,"column":17,"nodeType":"320","messageId":"321","endLine":2,"endColumn":26},"no-native-reassign",["381"],"no-negated-in-lhs",["382"],"no-dupe-keys","Duplicate key 'cart'.","ObjectExpression","unexpected","Duplicate key 'userLogin'.","no-unused-vars","'Message' is defined but never used.","Identifier","unusedVar","'Loader' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addressLine1', 'addressLine2', 'city', 'phone', 'postalCode', and 'province'. Either include them or remove the dependency array. You can also do a functional update 'setAddressLine1(a => ...)' if you only need 'addressLine1' in the 'setAddressLine1' call.","ArrayExpression",["383"],"'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderId'. Either include them or remove the dependency array.",["384"],"React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["385"],"'deleteHandler' is assigned a value but never used.","'loadingDeliver' is assigned a value but never used.","'errorDeliver' is assigned a value but never used.","'Dropdown' is defined but never used.","'NavDropdown' is defined but never used.","'Nav' is defined but never used.","'ListGroup' is defined but never used.","'SplitButton' is defined but never used.","'createHandler' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'variantId'. Either include it or remove the dependency array.",["386"],"no-useless-rename","Destructuring assignment categories unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"387","text":"388"},"Destructuring assignment subcategories unnecessarily renamed.",{"range":"389","text":"390"},"'data1' is assigned a value but never used.","'data' is assigned a value but never used.","'config' is assigned a value but never used.",{"range":"391","text":"388"},"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'categoryId', 'caterror', 'catloading', 'scaterror', 'scatloading', 'superror', and 'suploading'. Either include them or remove the dependency array.",["392"],"'useEffect' is defined but never used.","'productreport' is assigned a value but never used.","'setProductreport' is assigned a value but never used.","'axios' is defined but never used.","'timeperiod' is assigned a value but never used.","'setTimeperiod' is assigned a value but never used.","'submitted' is assigned a value but never used.","'producttimereport' is assigned a value but never used.","'setProducttimereport' is assigned a value but never used.","'productId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["393"],"no-global-assign","no-unsafe-negation",{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},[1398,1419],"categories",[1585,1612],"subcategories",[1275,1296],{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},"Update the dependencies array to be: [dispatch, history, userInfo, address, addressLine1, addressLine2, postalCode, city, province, phone]",{"range":"406","text":"407"},"Update the dependencies array to be: [dispatch, orderId]",{"range":"408","text":"409"},"Update the dependencies array to be: [history, order._id, success]",{"range":"410","text":"411"},"Update the dependencies array to be: [dispatch, productId, qty, variantId]",{"range":"412","text":"413"},"Update the dependencies array to be: [dispatch, successCreate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",{"range":"414","text":"415"},"Update the dependencies array to be: [dispatch]",{"range":"416","text":"417"},[2186,2224],"[dispatch, history, userInfo, address, addressLine1, addressLine2, postalCode, city, province, phone]",[835,837],"[dispatch, orderId]",[1111,1128],"[history, order._id, success]",[888,912],"[dispatch, productId, qty, variantId]",[2822,2862],"[dispatch, successCreate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",[1101,1103],"[dispatch]"]
>>>>>>> 625d83cc2006eb1d7b56d49a2a5d9b3b71f9656b
>>>>>>> de05179eaf0af7d0e766249be86cb15315ecaab4
>>>>>>> 101308342111f8b9fac7cc39836530f5cf5ecded
