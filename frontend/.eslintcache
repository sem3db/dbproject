[{"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\index.js":"1","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\reportWebVitals.js":"2","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\App.js":"3","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\store.js":"4","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\reducers\\cartreducers.js":"5","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\reducers\\orderReducers.js":"6","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\reducers\\productreducers.js":"7","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\constants\\cartConstants.js":"8","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\constants\\orderConstants.js":"9","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\constants\\productConstants.js":"10","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\ProductScreen.js":"11","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\CartScreen.js":"12","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\Footer.js":"13","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\LoginScreen.js":"14","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\PaymentScreen.js":"15","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\RegisterScreen.js":"16","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\ProfileScreen.js":"17","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\OrderScreen.js":"18","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\HomeScreen.js":"19","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\ProductEditScreen.js":"20","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\PlaceOrderScreen.js":"21","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\ShippingScreen.js":"22","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\Header.js":"23","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\ProductListScreen.js":"24","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\OrderListScreen.js":"25","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\Loader.js":"26","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\Message.js":"27","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\FormContainer.js":"28","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\CheckoutSteps.js":"29","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\Rating.js":"30","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\Product.js":"31","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\action\\cartAction.js":"32","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\Variant.js":"33","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\action\\productAction.js":"34","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\action\\userActions.js":"35","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\action\\orderActions.js":"36","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\constants\\userConstants.js":"37","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\reducers\\userReducers.js":"38"},{"size":592,"mtime":1612529778123,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"40"},{"size":2167,"mtime":1614598453572,"results":"42","hashOfConfig":"40"},{"size":2261,"mtime":1614545986265,"results":"43","hashOfConfig":"40"},{"size":1331,"mtime":1614601392658,"results":"44","hashOfConfig":"40"},{"size":3555,"mtime":1614189967961,"results":"45","hashOfConfig":"40"},{"size":3659,"mtime":1614543156767,"results":"46","hashOfConfig":"40"},{"size":279,"mtime":1613493169168,"results":"47","hashOfConfig":"40"},{"size":1475,"mtime":1613491670097,"results":"48","hashOfConfig":"40"},{"size":1324,"mtime":1613747936550,"results":"49","hashOfConfig":"40"},{"size":4361,"mtime":1614598621651,"results":"50","hashOfConfig":"40"},{"size":3691,"mtime":1614600384321,"results":"51","hashOfConfig":"40"},{"size":336,"mtime":1613718851809,"results":"52","hashOfConfig":"40"},{"size":2497,"mtime":1613549338043,"results":"53","hashOfConfig":"40"},{"size":1622,"mtime":1613532943957,"results":"54","hashOfConfig":"40"},{"size":6966,"mtime":1614520533743,"results":"55","hashOfConfig":"40"},{"size":3608,"mtime":1614541414181,"results":"56","hashOfConfig":"40"},{"size":5026,"mtime":1614195745611,"results":"57","hashOfConfig":"40"},{"size":4070,"mtime":1614543250222,"results":"58","hashOfConfig":"40"},{"size":11575,"mtime":1613727770674,"results":"59","hashOfConfig":"40"},{"size":6931,"mtime":1614111323262,"results":"60","hashOfConfig":"40"},{"size":5089,"mtime":1614586394438,"results":"61","hashOfConfig":"40"},{"size":3198,"mtime":1614527986140,"results":"62","hashOfConfig":"40"},{"size":3902,"mtime":1614226862509,"results":"63","hashOfConfig":"40"},{"size":3452,"mtime":1614360589689,"results":"64","hashOfConfig":"40"},{"size":341,"mtime":1613538775461,"results":"65","hashOfConfig":"40"},{"size":281,"mtime":1612714560647,"results":"66","hashOfConfig":"40"},{"size":389,"mtime":1612713206506,"results":"67","hashOfConfig":"40"},{"size":1421,"mtime":1613030245779,"results":"68","hashOfConfig":"40"},{"size":1342,"mtime":1614493184065,"results":"69","hashOfConfig":"40"},{"size":987,"mtime":1614496310081,"results":"70","hashOfConfig":"40"},{"size":2977,"mtime":1614601063915,"results":"71","hashOfConfig":"40"},{"size":1476,"mtime":1613807464709,"results":"72","hashOfConfig":"40"},{"size":7138,"mtime":1614578389379,"results":"73","hashOfConfig":"40"},{"size":4799,"mtime":1614590451059,"results":"74","hashOfConfig":"40"},{"size":7339,"mtime":1614360589623,"results":"75","hashOfConfig":"40"},{"size":1023,"mtime":1614545788579,"results":"76","hashOfConfig":"40"},{"size":2569,"mtime":1614572797716,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"yadj9g",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\index.js",[],["165","166"],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\reportWebVitals.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\App.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\store.js",["167","168","169","170"],"import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport {\r\n  producListReducer,\r\n  productDetailsReducer,\r\n  productCreateReducer,\r\n  productDeleteReducer,\r\n  productUpdateReducer,\r\n} from './reducers/productreducers'\r\n\r\nimport {cartReducer} from './reducers/cartreducers'\r\nimport {userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userAddressReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n  orderCreateReducer,\r\n  orderDeleteReducer,\r\n  orderDeliverReducer,\r\n  orderDetailsReducer,\r\n  orderListReducer,\r\n  orderMineListReducer,\r\n  orderPayReducer,\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  productList:producListReducer,\r\n  productDetails:productDetailsReducer,\r\n  productList:producListReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productDelete: productDeleteReducer,\r\n  cart:cartReducer,\r\n  userLogin:userLoginReducer,\r\n  userRegister:userRegisterReducer,\r\n  userDetails:userDetailsReducer,\r\n  userUpdateProfile:userUpdateProfileReducer,\r\n  userAddress:userAddressReducer,\r\n  cart:cartReducer,\r\n  userLogin:userLoginReducer,\r\n  cart:cartReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderMineList: orderMineListReducer,\r\n  orderList: orderListReducer,\r\n  orderDelete: orderDeleteReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[]\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')?JSON.parse(localStorage.getItem('shippingAddress')):{}\r\n\r\nconst initialState = {\r\n  cart:{cartItems:cartItemsFromStorage, \r\n    shippingAddress:shippingAddressFromStorage},\r\n  userLogin:{userInfo:userInfoFromStorage}\r\n};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport default store;\r\n","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\reducers\\cartreducers.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\reducers\\orderReducers.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\reducers\\productreducers.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\constants\\cartConstants.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\constants\\orderConstants.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\constants\\productConstants.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\ProductScreen.js",["171","172","173"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Rating from \"../components/Rating\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Variant from \"../components/Variant\";\r\nimport { detailsProduct, detailsProductVariant } from \"../action/productAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\n  const ProductScreen = ({history, match }) => {\r\n    const [qty, setQty]=useState(1)\r\n    const dispatch = useDispatch();\r\n    const productDetails=useSelector(state=>state.productDetails)\r\n    const {loading, error, product, variant} =productDetails\r\n    useEffect(() => {\r\n      dispatch(detailsProduct(match.params.id))\r\n    }, [dispatch, match]);\r\n\r\n    const addToCartHandler =()=>{\r\n      history.push(`/cart/${match.params.id}-${variant.variantId}?qty=${qty}`)\r\n    }\r\n    const change=(event,data)=>{\r\n      const y={...product.vary}\r\n      y[data]=event.target.value\r\n      dispatch(detailsProductVariant(2,y))\r\n    }\r\n    const varinatKeys=Object.keys(product.variants?product.variants:{})\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-dark my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading?<Loader/>:error?<Message variant='danger' Children={error}>{error}</Message>:(\r\n      <Row>\r\n        <Col md={6}>\r\n          <Image src={product.image} alt={product.name} fluid />\r\n        </Col>\r\n        <Col md={3}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h3>{product.product_name}</h3>\r\n            </ListGroup.Item>\r\n            {/* <ListGroup.Item>\r\n              <Variant type=\"radio\" vari={varinatKeys[0]} value={product.vary[varinatKeys[0]]} arr={product.variants && product.variants[varinatKeys[0]]?product.variants.size:[]} Change={change}/>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n            <Variant type=\"dropdown\" vari={varinatKeys[1]} value={product.vary[varinatKeys[1]]} arr={product.variants && product.variants[varinatKeys[1]]?product.variants.color:[]} Change={change}/>\r\n            </ListGroup.Item> */}\r\n            <ListGroup.Item>\r\n              <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} reviews`}\r\n              />\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>Price: LKR {variant.price}</ListGroup.Item>\r\n            <ListGroup.Item>\r\n              Description:{product.description}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Price:</Col>\r\n                  <Col>\r\n                    <strong>LKR {variant.price}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Status:</Col>\r\n                  <Col>\r\n                    {variant.noStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {variant.noStock>0 && (\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>\r\n                    <Form.Control as='select' value={qty} onChange={(e)=>\r\n                    setQty(e.target.value)}>\r\n                      {\r\n                      [...Array(variant.noStock).keys()].map((x)=>(\r\n                        <option key={x+1} value={x+1}>{x+1}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              )}\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  onClick={addToCartHandler}\r\n                  className=\"btn-block btn-dark\"\r\n                  type=\"button\"\r\n                  disabled={variant.noStock === 0}>\r\n                  Add To Cart\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\CartScreen.js",["174","175","176"],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\Footer.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\LoginScreen.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\PaymentScreen.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\RegisterScreen.js",["177"],"import React, {useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {register} from \"../action/userActions\";\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport {\r\n    Dropdown,\r\nForm,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"react-bootstrap\";\r\n\r\nconst RegisterScreen = ({location,history}) => {\r\n    const [first_name, setFirstName] = useState('')\r\n    const [last_name, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [province, setProvince] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [addressLine1, setAddressLine1] = useState('')\r\n    const [addressLine2, setAddressLine2] = useState('')\r\n    const [zip, setZip] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmpassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state=>state.userRegister)\r\n    const {loading, error, userInfo} = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1]:'/'\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n    const submitHandler =(event)=>{\r\n        event.preventDefault()\r\n        if(password!==confirmpassword){\r\n            setMessage('Password do not match')\r\n        }\r\n        else{\r\n            dispatch(register(email,password,first_name, last_name, zip, addressLine1, addressLine2, city, province, phone))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Row>\r\n                    <Col className='pr-1'>\r\n                        <Form.Group controlId='first_name'>\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type='first_name' placeholder='First Name' value={first_name} onChange={(event)=>setFirstName(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1'>\r\n                        <Form.Group controlId='last_name'>\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type='last_name' placeholder='Last Name' value={last_name} onChange={(event)=>setLastName(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='email Address' value={email} onChange={(event)=>setEmail(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Row>\r\n                    <Col className='pr-1' md={4}>\r\n                        <Form.Group controlId='phone'>\r\n                        <Form.Label>Contact Number</Form.Label>\r\n                        <Form.Control type='tel' placeholder='Phone Number' value={phone} onChange={(event)=>setPhone(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1' md={8}>\r\n                        <Form.Group controlId='addressLine1'>\r\n                        <Form.Label>Address Line 1</Form.Label>\r\n                        <Form.Control type='text' placeholder='Address Line 1' value={addressLine1} onChange={(event)=>setAddressLine1(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className='pr-1' md={8}>\r\n                    <Form.Group controlId='addressLine2'>\r\n                        <Form.Label>Address Line 2</Form.Label>\r\n                        <Form.Control type='text' placeholder='Address Line 2' value={addressLine2} onChange={(event)=>setAddressLine2(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1' md={4}>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className='pr-1' md={5}>\r\n                        <Form.Group controlId='province'>\r\n                        <Form.Label>Province</Form.Label>\r\n                        <Form.Control type='text' placeholder='Province' value={province} onChange={(event)=>setProvince(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='px-1' md={4}>\r\n                        <Form.Group controlId='city'>\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control type='text' placeholder='City' value={city} onChange={(event)=>setCity(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1' md={3}>\r\n                        <Form.Group controlId='zip'>\r\n                        <Form.Label>Zip Code</Form.Label>\r\n                        <Form.Control type='text' placeholder='Zip' value={zip} onChange={(event)=>setZip(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='password' value={password} onChange={(event)=>setPassword(event.target.value)} required></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='confirm password' value={confirmpassword} onChange={(event)=>setConfirmPassword(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n               \r\n                <Button type='submit' variant='primary' block>Register</Button>\r\n                </Form>\r\n                <Row className='py-3 text-right'>\r\n                    <Col>\r\n                    Have an Account?\r\n                    <Link to={redirect ? `/login?redirect=${redirect}`:'/login'} >Login</Link>\r\n                    </Col>\r\n                </Row>\r\n        </FormContainer>\r\n        </>\r\n    )\r\n}\r\nexport default RegisterScreen\r\n","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\ProfileScreen.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\OrderScreen.js",["178","179"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {getOrderDetails} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const OrderScreen = ({match}) => {\r\n    const orderId = match.params.id;\r\n    const dispatch = useDispatch()\r\n    \r\n\r\nconst orderDetails = useSelector(state=>state.orderDetails)\r\nconst {order,loading,error}=orderDetails\r\nif(!loading){\r\n    order.itemsPrice = order.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    dispatch(getOrderDetails(orderId))\r\n},[])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p><strong>Name:</strong>{order.user.name}</p>\r\n              <p><strong>Email:</strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address},{order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered?(\r\n                  <Message variant='success'>Delivered</Message>):<Message variant='success'>Not Delivered</Message>}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n              <strong>Method:</strong>\r\n              {order.paymentMethod}\r\n              </p>\r\n              <p>\r\n              <strong>Paid On:</strong>\r\n              {order.paidAt}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          <Row>\r\n                            <Col className=\"text-left\" md={2}>\r\n                              {item.qty}\r\n                            </Col>\r\n                            <Col md={1}>x</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${item.price}\r\n                            </Col>\r\n                            <Col md={1}>=</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${(item.qty * item.price).toFixed(2)}\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Delivery</Col>\r\n                  <Col>${order.deliveryCost.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\nexport default OrderScreen;\r\n","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\HomeScreen.js",["180","181","182","183"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, NavDropdown , Dropdown, Nav, Card, ListGroup, SplitButton, ButtonGroup, Button, Form} from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport { listProductsCat, listProducts } from \"../action/productAction\";\r\n\r\nconst HomeScreen = ({match}) => {\r\n  const dispatch = useDispatch();\r\n  const cat = match.params.cat ? match.params.cat:\"\"\r\n  const productList=useSelector(state=>state.productList)\r\n  const {loading, error, products, ca} =productList\r\n  // const cats={consumer_electronics:['laptop','smart phone','dongal'],  kitchen_appliances:[\"rice cooker\",\"oven\", \"electric kettle\", \"heater\"],\r\n  //  camera:[\"DSLR\",\"Mirrorless\"], phone:[\"samsung\",\"apple\",\"nokia\"], laptop:['asus','dell','toshiba','hp','lenovo'], USB:['kingston','imation'],furniture:['chair,table'],\r\n  // books:[],headphone:[],tablets:[]}\r\n  const cats=ca\r\n  console.log(cats)\r\n  console.log(ca)\r\n  console.log(Object.keys(ca))\r\n  useEffect(() => {\r\n    if(cat){\r\n      dispatch(listProductsCat(cat))\r\n    }\r\n    else{\r\n      console.log('lklk')\r\n      dispatch(listProducts())\r\n    }\r\n  }, [dispatch,cat])\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={2}>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Card.Title><h6><strong>Product Catagaries</strong></h6></Card.Title>\r\n          {Object.keys(cats).map((cat) => (\r\n            <Dropdown as={ButtonGroup} className=\"btn btn-sm p-0\" style={{width:\"100%\"}} block>\r\n              <LinkContainer to={`/products/${cat}`} className=\"p-1\" style={{width:\"85%\"}}>\r\n              <Button className=\"btn btn-sm\" style={{width:\"100%\"}} variant=\"outline-dark\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{cat.replace('_',\" \")}</p></Button>\r\n            </LinkContainer>\r\n              <Dropdown.Toggle split className=\"btn btn-sm\" id=\"dropdown-split-basic\" variant=\"outline-dark\"/>\r\n              <Dropdown.Menu>\r\n            {cats[cat].map((c)=>(\r\n              <LinkContainer to={`/products/${cat}-${c}`} className=\"p-1\" style={{width:\"100%\"}}>\r\n                <Dropdown.Item className=\"btn btn-outline-dark btn-sm\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{c.replace('_',\" \")}</p></Dropdown.Item>\r\n              </LinkContainer>\r\n            ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          ))}\r\n          </Card.Body>\r\n        </Card>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Form.Group controlId=\"formBasicRange\">\r\n            <Form.Label>Price Range</Form.Label><Form.Control type=\"range\" min={0} max={100}/>\r\n          </Form.Group>\r\n          <Row>\r\n            <Col md={6} className='pr-1'>\r\n            <Form.Label>Min</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"0\"></Form.Control>\r\n            </Col>\r\n            <Col md={6} className='pl-1'>\r\n            <Form.Label>Max</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"1,0000\"></Form.Control>\r\n            </Col>\r\n          </Row>\r\n          <Button className=\"btn btn-block btn-sm mt-3\" variant='outline-dark'>Apply</Button>\r\n          </Card.Body>\r\n        </Card>\r\n       \r\n        </Col>\r\n        <Col md={10}>\r\n        {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\" Children={error} />\r\n      ) : (\r\n        <>\r\n        <h1>Latest Products</h1>\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        </>\r\n      )}\r\n        </Col>\r\n      </Row>\r\n      \r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\ProductEditScreen.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\PlaceOrderScreen.js",["184"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {createOrder} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const PlaceOrderScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state=>state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n    cart.deliveryCost = cart.itemsPrice>100?0:cart.itemsPrice>50?cart.itemsPrice*0.05:10\r\n    cart.taxPrice =Number((0.15*cart.itemsPrice).toFixed(2))\r\n    cart.totalPrice=Number(cart.itemsPrice)+Number(cart.deliveryCost)+Number(cart.taxPrice)\r\n\r\nconst orderCreate = useSelector(state=>state.orderCreate)\r\nconst {order,success,error}=orderCreate\r\n\r\nuseEffect(()=>{\r\n    if(success){\r\n        history.push(`/order/${order._id}`)\r\n    }\r\n},[history,success])\r\n\r\n    const PlaceOrderHandler=()=>{\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            shippingAddress:cart.shippingAddress,\r\n            paymentMethod:cart.paymentMethod,\r\n            itemsPrice:cart.itemsPrice,\r\n            shippingPrice:cart.shippingPrice,\r\n            taxPrice:cart.taxPrice,\r\n            totalPrice:cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <CheckoutSteps step1 step2 step3 step4/>\r\n    <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Address:</strong>\r\n                        {cart.shippingAddress.address},{cart.shippingAddress.city}{' '}\r\n                        {cart.shippingAddress.postalCode},{' '}\r\n                        {cart.shippingAddress.country}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <strong>Method:</strong>\r\n                    {cart.paymentMethod}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {cart.cartItems.length===0?<Message>Your Cart is Empty</Message>:\r\n                    (\r\n                        <ListGroup variant='flush'>\r\n                            {cart.cartItems.map((item,index)=>(\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Row>\r\n                                                <Col className='text-left' md={2}>{item.qty}</Col>\r\n                                                <Col md={1}>x</Col>\r\n                                                <Col className='text-right' md={3}>${item.price}</Col>\r\n                                                <Col md={1}>=</Col>\r\n                                                <Col className='text-right' md={3}>${(item.qty * item.price).toFixed(2)}</Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n                                            <Card>\r\n                                                <ListGroup variant='flush'>\r\n                                                    <ListGroup.Item>\r\n                                                        <h2>Order Summary</h2>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Items</Col>\r\n                                                            <Col>${cart.itemsPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Delivery</Col>\r\n                                                            <Col>${cart.deliveryCost.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Tax</Col>\r\n                                                            <Col>${cart.taxPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Total</Col>\r\n                                                        <Col>${cart.totalPrice.toFixed(2)}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup>\r\n                                                {error && <Message variant='danger'>{error}</Message>}\r\n                                                </ListGroup>\r\n                                                <ListGroup.Item>\r\n                                                    <Button type='button' className='btn-block' disabled={cart.cartItems===0} onClick={PlaceOrderHandler}>Place Order</Button>\r\n                                                </ListGroup.Item>\r\n                                                </ListGroup>\r\n                                            </Card>\r\n                                        </Col>\r\n    </Row>\r\n</>\r\n  )\r\n}\r\nexport default PlaceOrderScreen;\r\n","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\ShippingScreen.js",["185","186","187","188","189","190","191","192","193","194","195","196"],"import React, {useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\nimport { saveShippingAddress} from \"../action/cartAction\";\r\nimport {getUserAddress} from '../action/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Typeahead } from 'react-bootstrap-typeahead'\r\nimport {\r\n  Button,\r\n  Form\r\n} from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\n\r\n  const ShippingScreen = ({history}) => {\r\n    const cart = useSelector(state=>state.cart)\r\n    const {shippingAddress} =cart\r\n    const [addressLine1, setAddressLine1] =useState(shippingAddress.addressLine1)\r\n    const [addressLine2, setAddressLine2] =useState(shippingAddress.addressLine2)\r\n    const [postalCode, setPostalCode] =useState(shippingAddress.postalCode)\r\n    const [city, setCity] = useState(shippingAddress.city?shippingAddress.city:[]);\r\n    const [province, setProvince] = useState(shippingAddress.province?shippingAddress.province:[]);\r\n    const [phone, setPhone] =useState(shippingAddress.phone)\r\n\r\n    const dispatch =useDispatch()\r\n\r\n    const userAddress= useSelector(state=>state.userAddress)\r\n    const {loading, error, address} = userAddress\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    useEffect(()=>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        else{\r\n            console.log(address)\r\n            if(!address.addressLine1){\r\n                dispatch(getUserAddress('profile'))\r\n            }\r\n            else{\r\n                setAddressLine1(address.addressLine1!=\"\"?address.addressLine1:addressLine1)\r\n                setAddressLine2(address.addressLine2!=address.addressLine2?address.addressLine2:addressLine2)\r\n                setPostalCode(address.zip!=\"\"?address.zip:postalCode)\r\n                setCity(address.city!=\"\"?address.city:city)\r\n                setProvince(address.province!=\"\"?address.province:province)\r\n                setPhone(address.phone!=\"\"?address.phone:phone)\r\n            }\r\n        }\r\n    },[dispatch, history, userInfo, address])\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        console.log(city)\r\n        dispatch(saveShippingAddress({addressLine1,addressLine2,city,postalCode,province}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    const cities=['Negombo', 'Colombo','Gampaha']\r\n    const provinces=['Western','Southern','Central','Uva','Eastern','Sabaragamuwa','North','North Western','North Central']\r\n\r\n  return (\r\n      <FormContainer>\r\n          <CheckoutSteps step1 step2/>\r\n          <h2>Delivery Details</h2>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='phone'>\r\n                  <Form.Label>Contact Number</Form.Label>\r\n                  <Form.Control type='tel' required placeholder='Contact Number' value={phone} onChange={(e)=>setPhone(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='addressLine1'>\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Address Line1' value={addressLine1} onChange={(e)=>setAddressLine1(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='addressLine2'>\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Address Line2' value={addressLine2} onChange={(e)=>setAddressLine2(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='city'>\r\n                  <Form.Label>City</Form.Label>\r\n                  {/* <Form.Control type='text' required placeholder='Enter City' value={city} onChange={(e)=>setCity(e.target.value)}></Form.Control> */}\r\n                  <Typeahead onChange={setCity} options={cities} placeholder=\"Choose a City...\" selected={city}/>\r\n              </Form.Group>\r\n              <Form.Group controlId='postalCode'>\r\n                  <Form.Label>Postal Code</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Postal Code' value={postalCode} onChange={(e)=>setPostalCode(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='province'>\r\n                  <Form.Label>Province</Form.Label>\r\n                  {/* <Form.Control type='text' required placeholder='Enter Country' value={country} onChange={(e)=>setCountry(e.target.value)}></Form.Control> */}\r\n                  <Typeahead onChange={setProvince} options={provinces} placeholder=\"Choose a province...\" selected={province}/>\r\n              </Form.Group>\r\n              {/* <Typeahead onChange={setSelected} options={['yu']} placeholder=\"Choose a state...\" selected={selected}/> */}\r\n              <Button type='submit' variant='primary'>Continue</Button>\r\n          </Form>\r\n      </FormContainer>\r\n  )\r\n}\r\nexport default ShippingScreen;","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\Header.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\ProductListScreen.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\screens\\OrderListScreen.js",["197","198","199"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteOrder, deliverOrder, listOrders } from '../action/orderActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { ORDER_DELETE_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\nexport default function OrderListScreen(props) {\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n  const orderDelete = useSelector((state) => state.orderDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = orderDelete;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({ type: ORDER_DELETE_RESET });\r\n    dispatch(listOrders());\r\n  }, [dispatch, successDelete]);\r\n  const deleteHandler = (order) => {\r\n    if (window.confirm('Are you sure to delete?')) {\r\n      dispatch(deleteOrder(order._id));\r\n    }\r\n  };\r\n\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const {\r\n    loading: loadingDeliver,\r\n    error: errorDeliver,\r\n    success: successDeliver,\r\n  } = orderDeliver;\r\n  useEffect(() => {\r\n    dispatch({ type: ORDER_DELIVER_RESET });\r\n    dispatch(listOrders());\r\n  }, [dispatch, successDeliver]);\r\n  const deliverHandler = (order) => {\r\n    if (window.confirm('Are you sure to deliver?')) {\r\n      dispatch(deliverOrder(order._id));\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <h1>Orders</h1>\r\n      {loadingDelete && <Loader></Loader>}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERY STATUS</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.order_id}>\r\n                <td>{order.order_id}</td>\r\n                <td>{order.user}</td>\r\n                <td>{}</td>\r\n                <td>{order.total_payment}</td>\r\n                <td>{}</td>\r\n                <td>{order.delivery_status}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() => {\r\n                      props.history.push(`/order/${order._id}`);\r\n                    }}\r\n                  >\r\n                    Details\r\n                  </button>\r\n                  {/* <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deleteHandler(order)}\r\n                    >\r\n                      Delete\r\n                    </button> */}\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deliverHandler(order)}\r\n                    >\r\n                      Deliver\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\Loader.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\Message.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\FormContainer.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\CheckoutSteps.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\Rating.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\Product.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\action\\cartAction.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\components\\Variant.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\action\\productAction.js",["200","201"],"import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST1,\r\n  PRODUCT_DETAILS_SUCCESS1,\r\n  PRODUCT_DETAILS_FAIL1,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n} from \"../constants/productConstants\";\r\n\r\n// frontend testing without backend\r\nconst productdata = [\r\n  {\r\n    _id: 1,\r\n    product_name: \"p-name\",\r\n    category_name: \"cat-name\",\r\n    category_description: \"cat-description\",\r\n    subcat_name: \"subcat-name\",\r\n    description: \"p-description\",\r\n    weight: \"p-weight\",\r\n    dimension: \"p-dimension\",\r\n    brand: \"p-brand\",\r\n    supplier_name: \"s-name\",\r\n    contact_number: \"s-contact\",\r\n    email: \"s-email\",\r\n    SKU: \"v-sku\",\r\n    price: \"v-price\",\r\n    offer: \"v-offer\",\r\n    color: \"v-color\",\r\n    size: \"v-size\",\r\n    no_stock: \"v-stock\",\r\n    image_url: \"/images/p1.jpg\",\r\n  },\r\n  {\r\n    _id: 2,\r\n    product_name: \"p-name\",\r\n    category_name: \"cat-name\",\r\n    category_description: \"cat-description\",\r\n    subcat_name: \"subcat-name\",\r\n    description: \"p-description\",\r\n    weight: \"p-weight\",\r\n    dimension: \"p-dimension\",\r\n    brand: \"p-brand\",\r\n    supplier_name: \"s-name\",\r\n    contact_number: \"s-contact\",\r\n    email: \"s-email\",\r\n    SKU: \"v-sku2\",\r\n    price: \"v-price2\",\r\n    offer: \"v-offer2\",\r\n    color: \"v-color2\",\r\n    size: \"v-size2\",\r\n    no_stock: \"v-stock2\",\r\n    image_url: \"/images/p2.jpg\",\r\n  },\r\n];\r\n// frontend testing without backend\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    console.log('pkpk')\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/products\");\r\n    console.log(data)\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductsCat = (cat) => async (dispatch) => {\r\n  cat=cat.split(\"-\").join('/')\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(`/api/products/category/${cat}`);\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/products/${productId}`)\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const detailsProductVariant = (productId, variants) => async (\r\n  dispatch\r\n) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST1, payload: productId });\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST1 });\r\n    const { data } = await axios.post(`/api/products/v`, variants);\r\n    // const data = productdata[productId-1];\r\n    const h = { ...data, vary: variants };\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS1, payload: h });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL1,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n  try {\r\n    // backend\r\n    const { data } = await axios.post(\"/api/products\", {});\r\n    // backend\r\n\r\n    // frontend testing without backend\r\n    // const newproduct = {\r\n    //   _id: productdata.length + 1,\r\n    //   product_name: \"sample-p-name\",\r\n    //   category_name: \"sample-cat-name\",\r\n    //   category_description: \"sample-cat-description\",\r\n    //   subcat_name: \"sample-subcat-name\",\r\n    //   description: \"sample-p-description\",\r\n    //   weight: \"sample-p-weight\",\r\n    //   dimension: \"sample-p-dimension\",\r\n    //   brand: \"sample-p-brand\",\r\n    //   supplier_name: \"sample-s-name\",\r\n    //   contact_number: \"sample-s-contact\",\r\n    //   email: \"sample-s-email\",\r\n    //   SKU: \"sample-v-sku2\",\r\n    //   price: \"sample-v-price2\",\r\n    //   offer: \"sample-v-offer2\",\r\n    //   color: \"sample-v-color2\",\r\n    //   size: \"sample-v-size2\",\r\n    //   no_stock: \"sample-v-stock2\",\r\n    //   image_url: \"/images/p0.jpg\",\r\n    // };\r\n    // productdata.push(newproduct);\r\n    // const data = { product: newproduct };\r\n    // frontend testing without backend\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    // backend\r\n    const { data } = await axios.put(`/api/products/${product._id}`, product);\r\n    // backend\r\n\r\n    // frontend testing without backend\r\n    // productdata[product._id - 1] = product;\r\n    // const { data } = productdata;\r\n    // frontend testing without backend\r\n\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    // backend\r\n    const { data } = axios.delete(`/api/products/${productId}`);\r\n    // backend\r\n\r\n    // frontend testing without backend\r\n    // productdata.splice(productId-1,1);\r\n    // const { data } = productdata;\r\n    // frontend testing without backend\r\n\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\action\\userActions.js",["202"],"import {USER_ADDRESS_FAIL, USER_ADDRESS_REQUEST, USER_ADDRESS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS} from '../constants/userConstants'\r\nimport axios from 'axios'\r\nexport const login = (email, password)=>async(dispatch)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_LOGIN_REQUEST\r\n        })\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const {data} =await axios.post('/api/customer/signin',{email,password},config)\r\n        console.log('bnbn')\r\n        console.log(data)\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout=(dispatch)=>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type:USER_LOGOUT})\r\n}\r\n\r\nexport const register = (email, password, fName,lName,zipCode,addressLine1,addressLine2,city,state,phone)=>async(dispatch)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_REGISTER_REQUEST\r\n        })\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n        const {data} =await axios.post('/api/customer/register',{email,password, fName,lName,zipCode,addressLine1,addressLine2,city,state,phone},config)\r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload:data\r\n        })\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id)=>async(dispatch,getState)=>{\r\n    try{\r\n        \r\n        dispatch({\r\n            type:USER_DETAILS_REQUEST\r\n        })\r\n        console.log('vvvvvvvvvvvvvvvvvvvvvvvvvvv')\r\n        const {userLogin:{userInfo}}=getState()\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} =await axios.get(`/api/customer/4`,config)\r\n        console.log(data)\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n        \r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user)=>async(dispatch,getState)=>{\r\n    try{\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n        const {userLogin:{userInfo}}=getState()\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data} =await axios.put(`/api/customer/profile`,user,config)\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_SUCCESS,\r\n            payload:data\r\n        })\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserAddress = (id)=>async(dispatch,getState)=>{\r\n    try{\r\n        \r\n        dispatch({\r\n            type:USER_ADDRESS_REQUEST\r\n        })\r\n        const {userLogin:{userInfo}}=getState()\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        // const {data} =await axios.get(`/api/customer/address/4`,config)\r\n        const data={addressLine1:'1 line new', addressLine2:'line 2',}\r\n        dispatch({\r\n            type:USER_ADDRESS_SUCCESS,\r\n            payload:data\r\n        })\r\n        \r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type:USER_ADDRESS_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\action\\orderActions.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\constants\\userConstants.js",[],"F:\\DRIVE\\ACA\\Fourth Semester\\Database\\Project\\frontend\\src\\reducers\\userReducers.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":34,"column":3,"nodeType":"209","messageId":"210","endLine":34,"endColumn":14},{"ruleId":"207","severity":1,"message":"211","line":44,"column":3,"nodeType":"209","messageId":"210","endLine":44,"endColumn":7},{"ruleId":"207","severity":1,"message":"212","line":45,"column":3,"nodeType":"209","messageId":"210","endLine":45,"endColumn":12},{"ruleId":"207","severity":1,"message":"211","line":46,"column":3,"nodeType":"209","messageId":"210","endLine":46,"endColumn":7},{"ruleId":"213","severity":1,"message":"214","line":7,"column":8,"nodeType":"215","messageId":"216","endLine":7,"endColumn":15},{"ruleId":"213","severity":1,"message":"217","line":31,"column":11,"nodeType":"215","messageId":"216","endLine":31,"endColumn":17},{"ruleId":"213","severity":1,"message":"218","line":36,"column":11,"nodeType":"215","messageId":"216","endLine":36,"endColumn":22},{"ruleId":"213","severity":1,"message":"219","line":1,"column":27,"nodeType":"215","messageId":"216","endLine":1,"endColumn":35},{"ruleId":"213","severity":1,"message":"220","line":5,"column":8,"nodeType":"215","messageId":"216","endLine":5,"endColumn":14},{"ruleId":"221","severity":1,"message":"222","line":29,"column":7,"nodeType":"223","endLine":29,"endColumn":31,"suggestions":"224"},{"ruleId":"213","severity":1,"message":"225","line":9,"column":5,"nodeType":"215","messageId":"216","endLine":9,"endColumn":13},{"ruleId":"213","severity":1,"message":"226","line":13,"column":3,"nodeType":"215","messageId":"216","endLine":13,"endColumn":9},{"ruleId":"221","severity":1,"message":"227","line":32,"column":3,"nodeType":"223","endLine":32,"endColumn":5,"suggestions":"228"},{"ruleId":"213","severity":1,"message":"229","line":3,"column":20,"nodeType":"215","messageId":"216","endLine":3,"endColumn":31},{"ruleId":"213","severity":1,"message":"230","line":3,"column":44,"nodeType":"215","messageId":"216","endLine":3,"endColumn":47},{"ruleId":"213","severity":1,"message":"231","line":3,"column":55,"nodeType":"215","messageId":"216","endLine":3,"endColumn":64},{"ruleId":"213","severity":1,"message":"232","line":3,"column":66,"nodeType":"215","messageId":"216","endLine":3,"endColumn":77},{"ruleId":"221","severity":1,"message":"233","line":35,"column":3,"nodeType":"223","endLine":35,"endColumn":20,"suggestions":"234"},{"ruleId":"213","severity":1,"message":"235","line":6,"column":8,"nodeType":"215","messageId":"216","endLine":6,"endColumn":15},{"ruleId":"213","severity":1,"message":"220","line":7,"column":8,"nodeType":"215","messageId":"216","endLine":7,"endColumn":14},{"ruleId":"213","severity":1,"message":"236","line":29,"column":12,"nodeType":"215","messageId":"216","endLine":29,"endColumn":19},{"ruleId":"213","severity":1,"message":"237","line":29,"column":21,"nodeType":"215","messageId":"216","endLine":29,"endColumn":26},{"ruleId":"238","severity":1,"message":"239","line":44,"column":53,"nodeType":"240","messageId":"210","endLine":44,"endColumn":55},{"ruleId":"241","severity":1,"message":"242","line":45,"column":33,"nodeType":"240","messageId":"243","endLine":45,"endColumn":75},{"ruleId":"238","severity":1,"message":"239","line":45,"column":53,"nodeType":"240","messageId":"210","endLine":45,"endColumn":55},{"ruleId":"238","severity":1,"message":"239","line":46,"column":42,"nodeType":"240","messageId":"210","endLine":46,"endColumn":44},{"ruleId":"238","severity":1,"message":"239","line":47,"column":37,"nodeType":"240","messageId":"210","endLine":47,"endColumn":39},{"ruleId":"238","severity":1,"message":"239","line":48,"column":45,"nodeType":"240","messageId":"210","endLine":48,"endColumn":47},{"ruleId":"238","severity":1,"message":"239","line":49,"column":39,"nodeType":"240","messageId":"210","endLine":49,"endColumn":41},{"ruleId":"221","severity":1,"message":"244","line":52,"column":7,"nodeType":"223","endLine":52,"endColumn":45,"suggestions":"245"},{"ruleId":"213","severity":1,"message":"246","line":22,"column":9,"nodeType":"215","messageId":"216","endLine":22,"endColumn":22},{"ruleId":"213","severity":1,"message":"247","line":31,"column":14,"nodeType":"215","messageId":"216","endLine":31,"endColumn":28},{"ruleId":"213","severity":1,"message":"248","line":32,"column":12,"nodeType":"215","messageId":"216","endLine":32,"endColumn":24},{"ruleId":"213","severity":1,"message":"249","line":24,"column":7,"nodeType":"215","messageId":"216","endLine":24,"endColumn":18},{"ruleId":"213","severity":1,"message":"250","line":228,"column":13,"nodeType":"215","messageId":"216","endLine":228,"endColumn":17},{"ruleId":"213","severity":1,"message":"251","line":127,"column":15,"nodeType":"215","messageId":"216","endLine":127,"endColumn":21},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-dupe-keys","Duplicate key 'productList'.","ObjectExpression","unexpected","Duplicate key 'cart'.","Duplicate key 'userLogin'.","no-unused-vars","'Variant' is defined but never used.","Identifier","unusedVar","'change' is assigned a value but never used.","'varinatKeys' is assigned a value but never used.","'useState' is defined but never used.","'Loader' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'variantId'. Either include it or remove the dependency array.","ArrayExpression",["254"],"'Dropdown' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderId'. Either include them or remove the dependency array.",["255"],"'NavDropdown' is defined but never used.","'Nav' is defined but never used.","'ListGroup' is defined but never used.","'SplitButton' is defined but never used.","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["256"],"'Message' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","React Hook useEffect has missing dependencies: 'addressLine1', 'addressLine2', 'city', 'phone', 'postalCode', and 'province'. Either include them or remove the dependency array. You can also do a functional update 'setAddressLine1(a => ...)' if you only need 'addressLine1' in the 'setAddressLine1' call.",["257"],"'deleteHandler' is assigned a value but never used.","'loadingDeliver' is assigned a value but never used.","'errorDeliver' is assigned a value but never used.","'productdata' is assigned a value but never used.","'data' is assigned a value but never used.","'config' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [dispatch, productId, qty, variantId]",{"range":"266","text":"267"},"Update the dependencies array to be: [dispatch, orderId]",{"range":"268","text":"269"},"Update the dependencies array to be: [history, order._id, success]",{"range":"270","text":"271"},"Update the dependencies array to be: [dispatch, history, userInfo, address, addressLine1, addressLine2, postalCode, city, province, phone]",{"range":"272","text":"273"},[888,912],"[dispatch, productId, qty, variantId]",[835,837],"[dispatch, orderId]",[1111,1128],"[history, order._id, success]",[2186,2224],"[dispatch, history, userInfo, address, addressLine1, addressLine2, postalCode, city, province, phone]"]