[{"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\index.js":"1","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\App.js":"3","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\store.js":"4","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\AdminRoute.js":"5","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Footer.js":"6","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\HomeScreen.js":"7","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Header.js":"8","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\LoginScreen.js":"9","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\CartScreen.js":"10","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js":"11","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ShippingScreen.js":"12","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PaymentScreen.js":"13","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderScreen.js":"14","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantListScreen.js":"15","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductListScreen.js":"16","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js":"17","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProfileScreen.js":"18","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ReportScreen.js":"19","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js":"20","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report4Screen.js":"21","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductScreen.js":"22","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\RegisterScreen.js":"23","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report1Screen.js":"24","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderListScreen.js":"25","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\SigninAdminScreen.js":"26","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantCreateScreen.js":"27","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductCreateScreen.js":"28","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report5Screen.js":"29","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\productreducers.js":"30","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\adminReducer.js":"31","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\userreducers.js":"32","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report3Screen.js":"33","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\cartreducers.js":"34","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\orderReducers.js":"35","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\supplierReducers.js":"36","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js":"37","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\categoryReducers.js":"38","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report2Screen.js":"39","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Message.js":"40","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\SearchBox.js":"41","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\FormContainer.js":"42","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Loader.js":"43","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Product.js":"44","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Rating.js":"45","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\productAction.js":"46","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\supplierActions.js":"47","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\userActions.js":"48","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\subcategoryActions.js":"49","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\adminActions.js":"50","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\orderActions.js":"51","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\categoryActions.js":"52","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\orderConstants.js":"53","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Variant.js":"54","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\productConstants.js":"55","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\userConstants.js":"56","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\cartConstants.js":"57","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\variantConstants.js":"58","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\supplierConstants.js":"59","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\adminConstants.js":"60","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js":"61","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\cartAction.js":"62","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\categoryConstants.js":"63","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\CheckoutSteps.js":"64"},{"size":612,"mtime":1613376057813,"results":"65","hashOfConfig":"66"},{"size":375,"mtime":1613376057814,"results":"67","hashOfConfig":"66"},{"size":4237,"mtime":1614783510861,"results":"68","hashOfConfig":"66"},{"size":4387,"mtime":1614785687881,"results":"69","hashOfConfig":"66"},{"size":561,"mtime":1614764682720,"results":"70","hashOfConfig":"66"},{"size":336,"mtime":1613661523293,"results":"71","hashOfConfig":"66"},{"size":3696,"mtime":1614771681401,"results":"72","hashOfConfig":"66"},{"size":4254,"mtime":1614805446611,"results":"73","hashOfConfig":"66"},{"size":2505,"mtime":1614785687445,"results":"74","hashOfConfig":"66"},{"size":3770,"mtime":1614785687371,"results":"75","hashOfConfig":"66"},{"size":9745,"mtime":1614827524850,"results":"76","hashOfConfig":"66"},{"size":5900,"mtime":1614827525041,"results":"77","hashOfConfig":"66"},{"size":4071,"mtime":1614827524757,"results":"78","hashOfConfig":"66"},{"size":5428,"mtime":1614827524689,"results":"79","hashOfConfig":"66"},{"size":3361,"mtime":1614781797322,"results":"80","hashOfConfig":"66"},{"size":4159,"mtime":1614792214625,"results":"81","hashOfConfig":"66"},{"size":8429,"mtime":1614701281413,"results":"82","hashOfConfig":"66"},{"size":5553,"mtime":1614827524939,"results":"83","hashOfConfig":"66"},{"size":1784,"mtime":1614787571523,"results":"84","hashOfConfig":"66"},{"size":6542,"mtime":1614788942695,"results":"85","hashOfConfig":"66"},{"size":2153,"mtime":1614827341114,"results":"86","hashOfConfig":"66"},{"size":4596,"mtime":1614771681619,"results":"87","hashOfConfig":"66"},{"size":6966,"mtime":1614523679202,"results":"88","hashOfConfig":"66"},{"size":2299,"mtime":1614827326067,"results":"89","hashOfConfig":"66"},{"size":3229,"mtime":1614805350297,"results":"90","hashOfConfig":"66"},{"size":1918,"mtime":1614780674060,"results":"91","hashOfConfig":"66"},{"size":5698,"mtime":1614747896380,"results":"92","hashOfConfig":"66"},{"size":8214,"mtime":1614747882650,"results":"93","hashOfConfig":"66"},{"size":2031,"mtime":1614827345727,"results":"94","hashOfConfig":"66"},{"size":7306,"mtime":1614713119931,"results":"95","hashOfConfig":"66"},{"size":1120,"mtime":1614765538544,"results":"96","hashOfConfig":"66"},{"size":2435,"mtime":1614659916587,"results":"97","hashOfConfig":"66"},{"size":1958,"mtime":1614827337292,"results":"98","hashOfConfig":"66"},{"size":1970,"mtime":1614785686961,"results":"99","hashOfConfig":"66"},{"size":3598,"mtime":1614827524619,"results":"100","hashOfConfig":"66"},{"size":2837,"mtime":1614602622879,"results":"101","hashOfConfig":"66"},{"size":2983,"mtime":1614586246151,"results":"102","hashOfConfig":"66"},{"size":2840,"mtime":1614586266974,"results":"103","hashOfConfig":"66"},{"size":3772,"mtime":1614827333174,"results":"104","hashOfConfig":"66"},{"size":305,"mtime":1614713119911,"results":"105","hashOfConfig":"66"},{"size":789,"mtime":1614771681251,"results":"106","hashOfConfig":"66"},{"size":389,"mtime":1613566630570,"results":"107","hashOfConfig":"66"},{"size":341,"mtime":1613566630620,"results":"108","hashOfConfig":"66"},{"size":987,"mtime":1614523679198,"results":"109","hashOfConfig":"66"},{"size":1342,"mtime":1614523679198,"results":"110","hashOfConfig":"66"},{"size":10840,"mtime":1614808100808,"results":"111","hashOfConfig":"66"},{"size":3888,"mtime":1614808611558,"results":"112","hashOfConfig":"66"},{"size":5119,"mtime":1614805446530,"results":"113","hashOfConfig":"66"},{"size":4375,"mtime":1614808479957,"results":"114","hashOfConfig":"66"},{"size":1820,"mtime":1614807255299,"results":"115","hashOfConfig":"66"},{"size":6945,"mtime":1614827524577,"results":"116","hashOfConfig":"66"},{"size":3897,"mtime":1614808275278,"results":"117","hashOfConfig":"66"},{"size":1475,"mtime":1613631796201,"results":"118","hashOfConfig":"66"},{"size":1476,"mtime":1614255385748,"results":"119","hashOfConfig":"66"},{"size":1324,"mtime":1614590257001,"results":"120","hashOfConfig":"66"},{"size":1023,"mtime":1614624056219,"results":"121","hashOfConfig":"66"},{"size":279,"mtime":1613566630833,"results":"122","hashOfConfig":"66"},{"size":1124,"mtime":1614590246270,"results":"123","hashOfConfig":"66"},{"size":1158,"mtime":1614581309700,"results":"124","hashOfConfig":"66"},{"size":402,"mtime":1614765466009,"results":"125","hashOfConfig":"66"},{"size":1266,"mtime":1614586236156,"results":"126","hashOfConfig":"66"},{"size":3874,"mtime":1614785686730,"results":"127","hashOfConfig":"66"},{"size":1160,"mtime":1614586219334,"results":"128","hashOfConfig":"66"},{"size":1421,"mtime":1613566630526,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"z675s7",{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"132"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"132"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"132"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"168","usedDeprecatedRules":"132"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"132"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"132"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"132"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"132"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"132"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"132"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"132"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"132"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"132"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"132"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\index.js",[],["273","274"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\App.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\store.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\AdminRoute.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\HomeScreen.js",["275","276","277","278","279"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, NavDropdown , Dropdown, Nav, Card, ListGroup, SplitButton, ButtonGroup, Button, Form} from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport { listProductsCat, listProducts } from \"../action/productAction\";\r\n\r\nconst HomeScreen = ({match}) => {\r\n  //Serach functionality\r\n  const keyword = match.params.keyword\r\n\r\n  const dispatch = useDispatch();\r\n  const cat = match.params.cat ? match.params.cat:\"\"\r\n  const productList=useSelector(state=>state.productList)\r\n  const {loading, error, products, ca} =productList\r\n  console.log(products)\r\n  const cats=ca\r\n\r\n  useEffect(() => {\r\n    if(cat){\r\n      dispatch(listProductsCat(cat))\r\n    }\r\n    else{\r\n      dispatch(listProducts(keyword))\r\n    }\r\n  }, [dispatch,cat])\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={2}>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Card.Title><h6><strong>Product Catagaries</strong></h6></Card.Title>\r\n          {Object.keys(cats).map((cat) => (\r\n            <Dropdown as={ButtonGroup} className=\"btn btn-sm p-0\" style={{width:\"100%\"}} block>\r\n              <LinkContainer to={`/products/${cat}`} className=\"p-1\" style={{width:\"85%\"}}>\r\n              <Button className=\"btn btn-sm\" style={{width:\"100%\"}} variant=\"outline-dark\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{cat.replace('_',\" \")}</p></Button>\r\n            </LinkContainer>\r\n              <Dropdown.Toggle split className=\"btn btn-sm\" id=\"dropdown-split-basic\" variant=\"outline-dark\"/>\r\n              <Dropdown.Menu>\r\n            {cats[cat].map((c)=>(\r\n              <LinkContainer to={`/products/${cat}-${c}`} className=\"p-1\" style={{width:\"100%\"}}>\r\n                <Dropdown.Item className=\"btn btn-outline-dark btn-sm\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{c.replace('_',\" \")}</p></Dropdown.Item>\r\n              </LinkContainer>\r\n            ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          ))}\r\n          </Card.Body>\r\n        </Card>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Form.Group controlId=\"formBasicRange\">\r\n            <Form.Label>Price Range</Form.Label><Form.Control type=\"range\" min={0} max={100}/>\r\n          </Form.Group>\r\n          <Row>\r\n            <Col md={6} className='pr-1'>\r\n            <Form.Label>Min</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"0\"></Form.Control>\r\n            </Col>\r\n            <Col md={6} className='pl-1'>\r\n            <Form.Label>Max</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"1,0000\"></Form.Control>\r\n            </Col>\r\n          </Row>\r\n          <Button className=\"btn btn-block btn-sm mt-3\" variant='outline-dark'>Apply</Button>\r\n          </Card.Body>\r\n        </Card>\r\n       \r\n        </Col>\r\n        <Col md={10}>\r\n        {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\" Children={error} />\r\n      ) : (\r\n        <>\r\n        <h1>Latest Products</h1>\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        </>\r\n      )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\LoginScreen.js",["280"],"import React, {useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {login} from \"../action/userActions\";\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport {\r\nForm,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"react-bootstrap\";\r\n\r\nconst LoginScreen = ({location,history}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {loading, error, userInfo} = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1]:'/'\r\n    console.log(redirect)\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n    const submitHandler =(event)=>{\r\n        event.preventDefault()\r\n        dispatch(login(email,password))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='email Address' value={email} onChange={(event)=>setEmail(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='password' value={password} onChange={(event)=>setPassword(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n                </Form>\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                    New Customer?\r\n                    <Row className='px-3'><Col><Link to={redirect ? `/register?redirect=${redirect}`:'/register'} >Register</Link></Col></Row>\r\n                    <Row className='px-3'><Col><Link to={redirect=='shipping' ? '/shipping':'/'} >Continue as a Guset</Link></Col></Row>\r\n                    </Col>\r\n                </Row>\r\n                \r\n        </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\CartScreen.js",["281","282","283"],"import React, {useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link} from \"react-router-dom\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { addToCart , removeFromCart} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form\r\n} from \"react-bootstrap\";\r\n\r\nconst CartScreen = ({match,location,history})=>{\r\n    const Id = match.params.id?match.params.id.split('-'):[]\r\n    const productId=Id[0]\r\n    const variantId=Id[1]\r\n    const qty = location.search ? Number(location.search.split('=')[1]):1\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state=>state.cart)\r\n    const {cartItems} = cart\r\n    useEffect(()=>{\r\n        if(productId){\r\n            dispatch(addToCart(productId,variantId,qty))\r\n        }\r\n    },[dispatch,productId,qty])\r\n\r\n    console.log(cart)\r\n\r\n    const removeFromCartHandler=(product_id,variant_id)=>{\r\n        dispatch(removeFromCart(product_id,variant_id))\r\n    }\r\n    const checkoutHandler =()=>{\r\n        history.push('/login?redirect=shipping')\r\n        // history.push('/shipping')\r\n    }\r\n\r\n    return <Row>\r\n        <Col md={8}>\r\n            <h1>Shopping Cart</h1>\r\n            {cartItems.length===0 ? (<Message Children={\"Your cart is empty\"}>Your cart is empty<Link to='/'>Go Back</Link></Message>):(<ListGroup variant='flush'>\r\n                {cartItems.map(item=>(\r\n                    <ListGroup.Item key={item.product}>\r\n                        <Row>\r\n                            <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <Link to={`/product/${item.product_id}`}>{item.name}</Link>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                ${item.price}\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Form.Control as='select' value={item.qty} onChange={(e)=>dispatch(addToCart(item.product_id,item.variant_id,Number(e.target.value)))}>\r\n                                    {[...Array(item.noStock).keys()].map((x)=>(\r\n                                        <option key={x+1} value={x+1}>{x+1}</option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Button type='button' variant='light' onClick={()=>removeFromCartHandler(item.product_id,item.variant_id)}>\r\n                                    <i className='fas fa-trash'></i>\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                ))}\r\n            </ListGroup>)}\r\n        </Col>\r\n        <Col md={4}>\r\n            <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Subtotal ({cartItems.reduce((acc,item)=>acc+item.qty, 0)})items</h2>\r\n                        LKR {cartItems.reduce((acc,item)=>acc + item.qty * item.price, 0).toFixed(2)}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n}\r\nexport default CartScreen;\r\n\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js",["284","285","286","287"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ShippingScreen.js",["288","289","290","291","292"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PaymentScreen.js",["293","294"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderScreen.js",["295"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantListScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js",["296","297","298","299","300","301"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  detailsProductAdmin,\r\n  updateProduct\r\n} from '../action/productAction';\r\nimport { listCategories } from '../action/categoryActions';\r\nimport { listSubcategories } from '../action/subcategoryActions';\r\nimport { listSuppliers } from '../action/supplierActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nexport default function ProductEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const [product_name, setProduct_name] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [weight, setWeight] = useState('');\r\n  const [dimension, setDimension] = useState('');\r\n  const [category_name, setCategory_name] = useState('');\r\n  const [subcat_name, setSubcat_name] = useState('');\r\n  const [supplier_name, setSupplier_name] = useState('');\r\n\r\n  const productDetailsAdmin = useSelector((state) => state.productDetailsAdmin);\r\n  const { loading, error, product } = productDetailsAdmin;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  const categoryList = useSelector((state) => state.categoryList);\r\n  const { loading: catloading, error: caterror, categories:categories } = categoryList;\r\n\r\n  const subcategoryList = useSelector((state) => state.subcategoryList);\r\n  const { loading: scatloading, error: scaterror, subcategories } = subcategoryList;\r\n  \r\n  const supplierList = useSelector((state) => state.supplierList);\r\n  const { loading: suploading, error: superror, suppliers } = supplierList;\r\n\r\n  let categoryId = null;\r\n  categories.forEach(c => {\r\n    if (category_name === c.category_name){\r\n      categoryId = c.category_id;\r\n    }\r\n  })\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push('/productlist');\r\n    }\r\n    if (!catloading && !caterror) {\r\n      dispatch(listCategories());\r\n    }\r\n    if (categoryId !== null || !scatloading && !scaterror) {\r\n      dispatch(listSubcategories(categoryId));\r\n    }\r\n    if (!suploading && !superror) {\r\n      dispatch(listSuppliers());\r\n    }\r\n    if (!product || product.product_id!=productId || successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      dispatch(detailsProductAdmin(productId));\r\n    } else {\r\n      setProduct_name(product.product_name);\r\n      setDescription(product.description);\r\n      setWeight(product.weight);\r\n      setDimension(product.dimension);\r\n      setBrand(product.brand);\r\n      setCategory_name(product.category_name);\r\n      setSubcat_name(product.subcat_name);\r\n      setSupplier_name(product.supplier_name);\r\n    }\r\n  }, [product, dispatch, productId, successUpdate, props.history]);\r\n\r\n  useEffect(() => {\r\n    if (categoryId !== null) {\r\n      dispatch(listSubcategories(categoryId));\r\n    }\r\n  }, [categoryId, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        product_id: productId,\r\n        product_name,\r\n        description,\r\n        weight,\r\n        dimension,\r\n        brand,\r\n        category_name,\r\n        subcat_name,\r\n        supplier_name,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit Product {productId}</h1>\r\n        </div>\r\n        {loadingUpdate && <Loader></Loader>}\r\n        {/* {catloading && <Loader></Loader>} */}\r\n        {/* {caterror && <Message variant=\"danger\">{caterror}</Message>} */}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"product_name\">Product_name</label>\r\n              <input\r\n                id=\"product_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Product name\"\r\n                value={product_name}\r\n                onChange={(e) => setProduct_name(e.target.value)}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                rows=\"3\"\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></textarea>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"weight\">Weight</label>\r\n              <input\r\n                id=\"weight\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Weight\"\r\n                value={weight}\r\n                onChange={(e) => setWeight(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"dimension\">Dimension</label>\r\n              <input\r\n                id=\"dimension\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Dimension\"\r\n                value={dimension}\r\n                onChange={(e) => setDimension(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input\r\n                id=\"brand\"\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"category_name\">Category</label>\r\n              <select\r\n                id=\"category_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category\"\r\n                value={category_name}\r\n                onChange={(e) => setCategory_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the category</option>\r\n                {categories.map(category => <option key={category.category_id}> {category.category_name} </option> )}\r\n              </select>\r\n            </div>\r\n            {/* <div>\r\n              <label htmlFor=\"category_description\">Category_description</label>\r\n              <input\r\n                id=\"category_description\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category_description\"\r\n                value={category_description}\r\n                onChange={(e) => setCategory_description(e.target.value)}\r\n              ></input>\r\n            </div> */}\r\n            <div>\r\n              <label htmlFor=\"subcat_name\">Subcategory</label>\r\n              <select\r\n                id=\"subcat_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Subcategory_name\"\r\n                value={subcat_name}\r\n                onChange={(e) => setSubcat_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the subcategory</option>\r\n                {subcategories.map(subcategory => <option key={subcategory.subcat_id}> {subcategory.subcat_name} </option> )}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"supplier_name\">Supplier</label>\r\n              <select\r\n                id=\"supplier_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Supplier_name\"\r\n                value={supplier_name}\r\n                onChange={(e) => setSupplier_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the supplier</option>\r\n                {suppliers.map(supplier => <option key={supplier.supplier_id}> {supplier.supplier_name} </option> )}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label></label>\r\n              <button className=\"primary\" type=\"submit\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ReportScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js",["302"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsVariant, updateVariant } from '../action/productAction';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { VARIANT_UPDATE_RESET } from '../constants/variantConstants';\r\n\r\nexport default function VariantEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const variantId = props.match.params.vid;\r\n  const [SKU, setSKU] = useState('');\r\n  const [image_url, setImage_url] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [offer, setOffer] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [no_stock, setNo_stock] = useState('');\r\n  \r\n  const variantDetails = useSelector((state) => state.variantDetails);\r\n  const { loading, error, variant } = variantDetails;\r\n\r\n  const variantUpdate = useSelector((state) => state.variantUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = variantUpdate;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push(`/product/${productId}/variantlist`);\r\n    }\r\n    if (!variant || (variant.variant_id != variantId || successUpdate)) {\r\n      dispatch({ type: VARIANT_UPDATE_RESET });\r\n      dispatch(detailsVariant(productId,variantId));\r\n    } else {\r\n      setSKU(variant.SKU);\r\n      setPrice(variant.price);\r\n      setOffer(variant.offer);\r\n      setColor(variant.color);\r\n      setSize(variant.size);\r\n      setNo_stock('0');\r\n      setImage_url(variant.image_url);\r\n    }\r\n  },[variant, dispatch, productId, variantId, successUpdate, props.history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n        updateVariant(\r\n            {\r\n              variant_id: variantId,\r\n              product_id: productId,\r\n              SKU,\r\n              price,\r\n              offer,\r\n              color,\r\n              size,\r\n              no_stock,\r\n              image_url,\r\n            }\r\n        )\r\n    );\r\n  };\r\n\r\n// const [loadingUpload, setLoadingUpload] = useState(false);\r\n// const [errorUpload, setErrorUpload] = useState('');\r\n// const userSignin = useSelector((state) => state.userSignin);\r\n// const { userInfo } = userSignin;\r\n// const uploadFileHandler = async (e) => {\r\n//   const file = e.target.files[0];\r\n//   const bodyFormData = new FormData();\r\n//   bodyFormData.append('image_url', file);\r\n//   setLoadingUpload(true);\r\n//   try {\r\n//     const { data } = await Axios.post('/api/uploads', bodyFormData);\r\n//     setImage_url(data);\r\n//     setLoadingUpload(false);\r\n//   } catch (error) {\r\n//     setErrorUpload(error.message);\r\n//     setLoadingUpload(false);\r\n//   }\r\n// };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit Product {productId} Variant {variantId} </h1>\r\n        </div>\r\n        {loadingUpdate && <Loader></Loader>}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <label htmlFor=\"SKU\">SKU</label>\r\n            <input\r\n              id=\"SKU\"\r\n              type=\"text\"\r\n              placeholder=\"Enter SKU\"\r\n              value={SKU}\r\n              onChange={(e) => setSKU(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"image_url\">image_url</label>\r\n            <input\r\n              id=\"image_url\"\r\n              type=\"text\"\r\n              placeholder=\"Enter image_url\"\r\n              value={image_url}\r\n              onChange={(e) => setImage_url(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          {/* <div>\r\n            <label htmlFor=\"product_imageFile\">product_image File</label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"product_imageFile\"\r\n              label=\"Choose product_image\"\r\n              onChange={uploadFileHandler}\r\n            ></input>\r\n            {loadingUpload && <Loader></Loader>}\r\n            {errorUpload && (\r\n              <Message variant=\"danger\">{errorUpload}</Message>\r\n            )}\r\n          </div> */}\r\n          <div>\r\n            <label htmlFor=\"price\">Price</label>\r\n            <input\r\n              id=\"price\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Price\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"offer\">Offer</label>\r\n            <input\r\n              id=\"offer\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Offer\"\r\n              value={offer}\r\n              onChange={(e) => setOffer(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"color\">Color</label>\r\n            <input\r\n              id=\"color\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Color\"\r\n              value={color}\r\n              onChange={(e) => setColor(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"size\">Size</label>\r\n            <input\r\n              id=\"size\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Size\"\r\n              value={size}\r\n              onChange={(e) => setSize(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          {/* <div>\r\n            <label htmlFor=\"no_stock\">Count In Stock</label>\r\n            <input\r\n              id=\"no_stock\"\r\n              type=\"text\"\r\n              placeholder=\"Enter no_stock\"\r\n              value={no_stock}\r\n              onChange={(e) => setNo_stock(e.target.value)}\r\n            ></input>\r\n          </div> */}\r\n          <div>\r\n            <label htmlFor=\"no_stock\">Add new Stock</label>\r\n            <input\r\n              id=\"no_stock\"\r\n              type=\"text\"\r\n              placeholder=\"Enter new stock\"\r\n              value={no_stock}\r\n              onChange={(e) => setNo_stock(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div>\r\n            <label></label>\r\n            <button className=\"primary\" type=\"submit\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report4Screen.js",["303"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\RegisterScreen.js",["304"],"import React, {useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {register} from \"../action/userActions\";\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport {\r\n    Dropdown,\r\nForm,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"react-bootstrap\";\r\n\r\nconst RegisterScreen = ({location,history}) => {\r\n    const [first_name, setFirstName] = useState('')\r\n    const [last_name, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [province, setProvince] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [addressLine1, setAddressLine1] = useState('')\r\n    const [addressLine2, setAddressLine2] = useState('')\r\n    const [zip, setZip] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmpassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state=>state.userRegister)\r\n    const {loading, error, userInfo} = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1]:'/'\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n    const submitHandler =(event)=>{\r\n        event.preventDefault()\r\n        if(password!==confirmpassword){\r\n            setMessage('Password do not match')\r\n        }\r\n        else{\r\n            dispatch(register(email,password,first_name, last_name, zip, addressLine1, addressLine2, city, province, phone))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Row>\r\n                    <Col className='pr-1'>\r\n                        <Form.Group controlId='first_name'>\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type='first_name' placeholder='First Name' value={first_name} onChange={(event)=>setFirstName(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1'>\r\n                        <Form.Group controlId='last_name'>\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type='last_name' placeholder='Last Name' value={last_name} onChange={(event)=>setLastName(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='email Address' value={email} onChange={(event)=>setEmail(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Row>\r\n                    <Col className='pr-1' md={4}>\r\n                        <Form.Group controlId='phone'>\r\n                        <Form.Label>Contact Number</Form.Label>\r\n                        <Form.Control type='tel' placeholder='Phone Number' value={phone} onChange={(event)=>setPhone(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1' md={8}>\r\n                        <Form.Group controlId='addressLine1'>\r\n                        <Form.Label>Address Line 1</Form.Label>\r\n                        <Form.Control type='text' placeholder='Address Line 1' value={addressLine1} onChange={(event)=>setAddressLine1(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className='pr-1' md={8}>\r\n                    <Form.Group controlId='addressLine2'>\r\n                        <Form.Label>Address Line 2</Form.Label>\r\n                        <Form.Control type='text' placeholder='Address Line 2' value={addressLine2} onChange={(event)=>setAddressLine2(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1' md={4}>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className='pr-1' md={5}>\r\n                        <Form.Group controlId='province'>\r\n                        <Form.Label>Province</Form.Label>\r\n                        <Form.Control type='text' placeholder='Province' value={province} onChange={(event)=>setProvince(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='px-1' md={4}>\r\n                        <Form.Group controlId='city'>\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control type='text' placeholder='City' value={city} onChange={(event)=>setCity(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1' md={3}>\r\n                        <Form.Group controlId='zip'>\r\n                        <Form.Label>Zip Code</Form.Label>\r\n                        <Form.Control type='text' placeholder='Zip' value={zip} onChange={(event)=>setZip(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='password' value={password} onChange={(event)=>setPassword(event.target.value)} required></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='confirm password' value={confirmpassword} onChange={(event)=>setConfirmPassword(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n               \r\n                <Button type='submit' variant='primary' block>Register</Button>\r\n                </Form>\r\n                <Row className='py-3 text-right'>\r\n                    <Col>\r\n                    Have an Account?\r\n                    <Link to={redirect ? `/login?redirect=${redirect}`:'/login'} >Login</Link>\r\n                    </Col>\r\n                </Row>\r\n        </FormContainer>\r\n        </>\r\n    )\r\n}\r\nexport default RegisterScreen\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report1Screen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\SigninAdminScreen.js",["305","306"],"import React, {useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport {\r\nForm,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport { signin } from \"../action/adminActions\";\r\n\r\n\r\nexport default function SigninAdminScreen(props) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    \r\n    const adminSignin = useSelector(state =>state.adminSignin);\r\n    const {adminInfo, loading, error} =adminSignin;\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(()=>{\r\n        if(adminInfo){\r\n            props.history.push(`/orderlist`);\r\n        }\r\n    },[adminInfo, props.history])\r\n    \r\n    const submitHandler =(e)=>{\r\n        e.preventDefault();\r\n        dispatch(signin(email,password));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <FormContainer>\r\n            <h1>Admin Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='email Address' value={email} onChange={(event)=>setEmail(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='password' value={password} onChange={(event)=>setPassword(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n        </FormContainer>\r\n        </>\r\n    )\r\n}","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantCreateScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductCreateScreen.js",["307"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listCategories } from '../action/categoryActions';\r\nimport { createProduct } from '../action/productAction';\r\nimport { listSubcategories } from '../action/subcategoryActions';\r\nimport { listSuppliers } from '../action/supplierActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\nexport default function ProductCreateScreen(props) {\r\n  const [product_name, setProduct_name] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [weight, setWeight] = useState('');\r\n  const [dimension, setDimension] = useState('');\r\n  const [category_name, setCategory_name] = useState('');\r\n  const [subcat_name, setSubcat_name] = useState('');\r\n  const [supplier_name, setSupplier_name] = useState('');\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading,\r\n    error,\r\n    success: successCreate,\r\n  } = productCreate;\r\n\r\n  const categoryList = useSelector((state) => state.categoryList);\r\n  const { loading: catloading, error: caterror, categories } = categoryList;\r\n\r\n  const subcategoryList = useSelector((state) => state.subcategoryList);\r\n  const { loading: scatloading, error: scaterror, subcategories } = subcategoryList;\r\n  \r\n  const supplierList = useSelector((state) => state.supplierList);\r\n  const { loading: suploading, error: superror, suppliers } = supplierList;\r\n\r\n  let categoryId = null;\r\n  categories.forEach(c => {\r\n    if (category_name === c.category_name){\r\n      categoryId = c.category_id;\r\n    }\r\n  })\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successCreate) {\r\n        dispatch({ type: PRODUCT_CREATE_RESET });\r\n        props.history.push('/productlist');\r\n    }\r\n    if (!catloading && !caterror) {\r\n        dispatch(listCategories());\r\n    }\r\n    if (categoryId !== null && !scatloading && !scaterror) {\r\n        dispatch(listSubcategories(categoryId));\r\n    }\r\n    if (!suploading && !superror) {\r\n        dispatch(listSuppliers());\r\n    }\r\n    // if (!product || product.product_id!=productId || successUpdate) {\r\n    //   dispatch({ type: PRODUCT_UPDATE_RESET });\r\n    //   dispatch(detailsProductAdmin(productId));\r\n    // }\r\n    // else {\r\n    //   setProduct_name(product.product_name);\r\n    //   setDescription(product.description);\r\n    //   setWeight(product.weight);\r\n    //   setDimension(product.dimension);\r\n    //   setBrand(product.brand);\r\n    //   setCategory_name(product.category_name);\r\n    //   setSubcat_name(product.subcat_name);\r\n    //   setSupplier_name(product.supplier_name);\r\n    // }\r\n  }, [dispatch, successCreate, props.history]);\r\n\r\n  useEffect(() => {\r\n    if (categoryId !== null) {\r\n      dispatch(listSubcategories(categoryId));\r\n    }\r\n  }, [categoryId, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n        createProduct({\r\n        product_name,\r\n        description,\r\n        weight,\r\n        dimension,\r\n        brand,\r\n        category_name,\r\n        subcat_name,\r\n        supplier_name,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Create New Product</h1>\r\n        </div>\r\n        {/* {loadingUpdate && <Loader></Loader>} */}\r\n        {/* {catloading && <Loader></Loader>} */}\r\n        {/* {caterror && <Message variant=\"danger\">{caterror}</Message>} */}\r\n        {/* {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>} */}\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"product_name\">Product_name</label>\r\n              <input\r\n                id=\"product_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Product name\"\r\n                value={product_name}\r\n                onChange={(e) => setProduct_name(e.target.value)}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                rows=\"3\"\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></textarea>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"weight\">Weight</label>\r\n              <input\r\n                id=\"weight\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Weight\"\r\n                value={weight}\r\n                onChange={(e) => setWeight(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"dimension\">Dimension</label>\r\n              <input\r\n                id=\"dimension\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Dimension\"\r\n                value={dimension}\r\n                onChange={(e) => setDimension(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input\r\n                id=\"brand\"\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"category_name\">Category</label>\r\n              <select\r\n                id=\"category_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category\"\r\n                value={category_name}\r\n                onChange={(e) => setCategory_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the category</option>\r\n                {categories.map(category => <option key={category.category_id}> {category.category_name} </option> )}\r\n              </select>\r\n            </div>\r\n            {/* <div>\r\n              <label htmlFor=\"category_description\">Category_description</label>\r\n              <input\r\n                id=\"category_description\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category_description\"\r\n                value={category_description}\r\n                onChange={(e) => setCategory_description(e.target.value)}\r\n              ></input>\r\n            </div> */}\r\n            <div>\r\n              <label htmlFor=\"subcat_name\">Subcategory</label>\r\n              <select\r\n                id=\"subcat_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Subcategory_name\"\r\n                value={subcat_name}\r\n                onChange={(e) => setSubcat_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the subcategory</option>\r\n                {subcategories.map(subcategory => <option key={subcategory.subcat_id}> {subcategory.subcat_name} </option> )}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"supplier_name\">Supplier</label>\r\n              <select\r\n                id=\"supplier_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Supplier_name\"\r\n                value={supplier_name}\r\n                onChange={(e) => setSupplier_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the supplier</option>\r\n                {suppliers.map(supplier => <option key={supplier.supplier_id}> {supplier.supplier_name} </option> )}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label></label>\r\n              <button className=\"primary\" type=\"submit\">\r\n                Create\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report5Screen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\productreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\adminReducer.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\userreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report3Screen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\cartreducers.js",["308","309"],"import {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS} from '../constants/cartConstants'\r\n\r\nexport const cartReducer =(state={cartItems:[], shippingAddress:{}, orderDetails:{}},action)=>{\r\n    switch(action.type){\r\n       case CART_ADD_ITEM:\r\n           const item = action.payload\r\n           console.log('item')\r\n           console.log(item)\r\n           const existItem =state.cartItems.find(x=>((x.product_id === item.product_id) && (x.variant_id === item.variant_id)))\r\n        //    console.log(existItem.variant_id)\r\n        //    console.log(item.variant_id)\r\n        //    console.log(existItem.product_id === item.product_id)\r\n        //    console.log(existItem.variant_id === item.variant_id)\r\n        //    console.log(existItem)\r\n           console.log('existitem')\r\n           if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x=>(x.product_id === existItem.product_id && x.variant_id === item.variant_id) ? item : x),\r\n                }\r\n           }else{\r\n               return{\r\n                   ...state,\r\n                   cartItems: [...state.cartItems, item]\r\n               }\r\n           }\r\n        case CART_REMOVE_ITEM:\r\n            // console.log(state.cartItems)\r\n            // console.log(action.payload)\r\n            // console.log(action.payload.variant_id)\r\n            return{\r\n                ...state,\r\n                cartItems:state.cartItems.filter(x=>!(x.product_id == action.payload.product_id && x.variant_id == action.payload.variant_id))\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                orderDetails: action.payload,\r\n            }\r\n       default:\r\n           return state\r\n    }\r\n   }","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\supplierReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\categoryReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report2Screen.js",["310"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\productAction.js",["311","312","313"],"import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST1,\r\n  PRODUCT_DETAILS_SUCCESS1,\r\n  PRODUCT_DETAILS_FAIL1,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n} from '../constants/productConstants';\r\n\r\nimport {\r\n  VARIANT_LIST_REQUEST,\r\n  VARIANT_LIST_SUCCESS,\r\n  VARIANT_LIST_FAIL,\r\n  VARIANT_DETAILS_REQUEST,\r\n  VARIANT_DETAILS_SUCCESS,\r\n  VARIANT_DETAILS_FAIL,\r\n  VARIANT_CREATE_FAIL,\r\n  VARIANT_CREATE_REQUEST,\r\n  VARIANT_CREATE_SUCCESS,\r\n  VARIANT_UPDATE_REQUEST,\r\n  VARIANT_UPDATE_SUCCESS,\r\n  VARIANT_UPDATE_FAIL,\r\n  VARIANT_DELETE_REQUEST,\r\n  VARIANT_DELETE_FAIL,\r\n  VARIANT_DELETE_SUCCESS,\r\n} from '../constants/variantConstants';\r\n\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/products\");\r\n    console.log(data)\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const listProductsCat = (cat) => async (dispatch) => {\r\n  cat=cat.split(\"-\").join('/')\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(`/api/products/category/${cat}`);\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/products/${productId}`)\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const detailsProductVariant = (productId, variants) => async (dispatch) => {\r\n  try{\r\n    const { data } = await axios.get(`/api/products/${productId}/${variants.color}/${variants.size}`);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS1, payload: data });\r\n    console.log('lllllllllll')\r\n  }\r\n  catch(error){\r\n    dispatch({\r\n            type: PRODUCT_DETAILS_FAIL1,\r\n            payload:variants\r\n          });\r\n  }\r\n}\r\n\r\n\r\n// export const detailsProductVariant = (productId, variants) => async (dispatch) => {\r\n\r\n//   dispatch({ type: PRODUCT_DETAILS_REQUEST1, payload: productId });\r\n//   try {\r\n//     console.log(variants)\r\n//     dispatch({ type: PRODUCT_DETAILS_REQUEST1 });\r\n//     const { data } = await axios.get(`/api/products/${productId}/${variants.color}/${variants.size}`);\r\n//     const h = { ...data, vary: variants };\r\n//     dispatch({ type: PRODUCT_DETAILS_SUCCESS1, payload: h });\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//     dispatch({\r\n//       type: PRODUCT_DETAILS_FAIL1,\r\n//       payload:error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const listProductsAdmin = () => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_LIST_REQUEST });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n\r\n    const { data } = await axios.get(`/api/products/productlist`, \r\n    {\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n    \r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const detailsProductAdmin = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n    \r\n    const {data} = await axios.get(`/api/products/productlist/${productId}`, {\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data[0] });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = (newproduct) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n\r\n    const { data } = await axios.post(`/api/products/addProduct`,newproduct,{\r\n        headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n      }\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_CREATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/products/productlist/edit/${product.product_id}`, product,{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n    dispatch({ \r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n\r\n    const { data } = axios.delete(`/api/products/productlist/delete/${productId}`,{},{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const listVariants = (productId) => async (dispatch, getState) =>{\r\n  dispatch({ type: VARIANT_LIST_REQUEST });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n\r\n      // const { data } = await axios.get(\"/api/product/productlist/${productId}/variantlist\");\r\n      const { data } = await axios.get(`/api/products/productlist/${productId}/variants`, {\r\n        headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n      }\r\n      );\r\n\r\n      dispatch({\r\n      type: VARIANT_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n  } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: VARIANT_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n  }\r\n}\r\n\r\nexport const detailsVariant = (productId,variantId) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_DETAILS_REQUEST, payload: (productId,variantId) });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n    \r\n    // const {data} = await axios.get(`/api/products/productlist/${productId}/variants/${variantId}`)\r\n    const {data} = await axios.get(`/api/products/productlist/${productId}/variants/${variantId}`,{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    )\r\n\r\n    dispatch({ type: VARIANT_DETAILS_SUCCESS, payload: data[0] });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: VARIANT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createVariant = (productId,newvariant) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_CREATE_REQUEST });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n    const { data } = await axios.post(`/api/products/productlist/${productId}/variants/addvariant`, newvariant, {\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n    dispatch({\r\n      type: VARIANT_CREATE_SUCCESS,\r\n      payload: data.variant,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\nexport const updateVariant = (variant) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_UPDATE_REQUEST, payload: variant });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n    const { data } = await axios.put(`/api/products/productlist/${variant.product_id}/variants/editvariant/${variant.variant_id}`, variant, {\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n    dispatch({ type: VARIANT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\nexport const deleteVariant = (productId,variantId) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_DELETE_REQUEST, payload: (productId,variantId) });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n\r\n    const { data } = axios.delete(`/api/products/productlist/${productId}/variants/delete/${variantId}`,{},{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n    dispatch({ type: VARIANT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_DELETE_FAIL, payload: message });\r\n  }\r\n};","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\supplierActions.js",["314"],"import axios from \"axios\";\r\nimport {\r\n  SUPPLIER_LIST_REQUEST,\r\n  SUPPLIER_LIST_SUCCESS,\r\n  SUPPLIER_LIST_FAIL,\r\n  SUPPLIER_DETAILS_REQUEST,\r\n  SUPPLIER_DETAILS_SUCCESS,\r\n  SUPPLIER_DETAILS_FAIL,\r\n  SUPPLIER_CREATE_FAIL,\r\n  SUPPLIER_CREATE_REQUEST,\r\n  SUPPLIER_CREATE_SUCCESS,\r\n  SUPPLIER_UPDATE_REQUEST,\r\n  SUPPLIER_UPDATE_SUCCESS,\r\n  SUPPLIER_UPDATE_FAIL,\r\n  SUPPLIER_DELETE_REQUEST,\r\n  SUPPLIER_DELETE_FAIL,\r\n  SUPPLIER_DELETE_SUCCESS,\r\n} from '../constants/supplierConstants';\r\n\r\n\r\nexport const listSuppliers = () => async (dispatch, getState) => {\r\n    dispatch({ type: SUPPLIER_LIST_REQUEST });\r\n    const { adminSignin:{adminInfo}} = getState();\r\n    try {\r\n\r\n      const { data } = await axios.get(`/api/suppliers/`,{\r\n        headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n      }\r\n      );\r\n\r\n      dispatch({\r\n      type: SUPPLIER_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: SUPPLIER_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n    }\r\n};\r\n  \r\nexport const detailsSupplier = (supplierId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_DETAILS_REQUEST, payload: supplierId });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n    dispatch({ type: SUPPLIER_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/suppliers/${supplierId}`,{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n    dispatch({ type: SUPPLIER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: SUPPLIER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createSupplier = (newsupplier) => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_CREATE_REQUEST });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n\r\n    const { data } = await axios.post('/api/suppliers/',newsupplier,{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n\r\n    dispatch({\r\n      type: SUPPLIER_CREATE_SUCCESS,\r\n      payload: data.supplier,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateSupplier = (supplier) => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_UPDATE_REQUEST, payload: supplier });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/suppliers/${supplier.supplier_id}`, supplier,{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n    dispatch({ type: SUPPLIER_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteSupplier = (supplierId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_DELETE_REQUEST, payload: supplierId });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/suppliers/${supplierId}`,{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n    dispatch({ type: SUPPLIER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_DELETE_FAIL, payload: message });\r\n  }\r\n};","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\userActions.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\subcategoryActions.js",["315"],"import axios from \"axios\";\r\nimport {\r\n  SUBCATEGORY_LIST_REQUEST,\r\n  SUBCATEGORY_LIST_SUCCESS,\r\n  SUBCATEGORY_LIST_FAIL,\r\n  SUBCATEGORY_DETAILS_REQUEST,\r\n  SUBCATEGORY_DETAILS_SUCCESS,\r\n  SUBCATEGORY_DETAILS_FAIL,\r\n  SUBCATEGORY_CREATE_FAIL,\r\n  SUBCATEGORY_CREATE_REQUEST,\r\n  SUBCATEGORY_CREATE_SUCCESS,\r\n  SUBCATEGORY_UPDATE_REQUEST,\r\n  SUBCATEGORY_UPDATE_SUCCESS,\r\n  SUBCATEGORY_UPDATE_FAIL,\r\n  SUBCATEGORY_DELETE_REQUEST,\r\n  SUBCATEGORY_DELETE_FAIL,\r\n  SUBCATEGORY_DELETE_SUCCESS,\r\n} from '../constants/subcategoryConstants';\r\n\r\n\r\nexport const listSubcategories = (categoryId) => async (dispatch, getState) =>{\r\n    dispatch({ type: SUBCATEGORY_LIST_REQUEST });\r\n    const { adminSignin:{adminInfo}} = getState();\r\n    try {\r\n      // const { data } = await axios.get(\"/api/categories/${categoryId}/subcategorylist\");\r\n      const { data } = await axios.get(`/api/categories/${categoryId}/subcategories`,{\r\n        headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n      }\r\n      );\r\n\r\n      dispatch({\r\n      type: SUBCATEGORY_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({\r\n        type: SUBCATEGORY_LIST_FAIL,\r\n        payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    }\r\n  }\r\n  \r\nexport const detailsSubcategory = (categoryId,subcategoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_DETAILS_REQUEST, payload: (categoryId,subcategoryId) });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n    dispatch({ type: SUBCATEGORY_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/categories/${categoryId}/subcategories/${subcategoryId}`,{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n    dispatch({ type: SUBCATEGORY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: SUBCATEGORY_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createSubcategory = (categoryId,newsubcategory) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_CREATE_REQUEST });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n\r\n    const { data } = await axios.post(`/api/categories/${categoryId}/subcategories/`,newsubcategory,{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n\r\n    dispatch({\r\n      type: SUBCATEGORY_CREATE_SUCCESS,\r\n      payload: data.subcategory,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateSubcategory = (categoryId,subcategory) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_UPDATE_REQUEST, payload: subcategory });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/categories/${categoryId}/subcategories/${subcategory.subcategory_id}`, subcategory,{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n    dispatch({ type: SUBCATEGORY_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteSubcategory = (categoryId,subcategoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_DELETE_REQUEST, payload: (categoryId,subcategoryId) });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/categories/${categoryId}/subcategories/${subcategoryId}`,{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n    dispatch({ type: SUBCATEGORY_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\adminActions.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\orderActions.js",["316"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\categoryActions.js",["317"],"import axios from \"axios\";\r\nimport {\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_SUCCESS,\r\n  CATEGORY_LIST_FAIL,\r\n  CATEGORY_DETAILS_REQUEST,\r\n  CATEGORY_DETAILS_SUCCESS,\r\n  CATEGORY_DETAILS_FAIL,\r\n  CATEGORY_CREATE_FAIL,\r\n  CATEGORY_CREATE_REQUEST,\r\n  CATEGORY_CREATE_SUCCESS,\r\n  CATEGORY_UPDATE_REQUEST,\r\n  CATEGORY_UPDATE_SUCCESS,\r\n  CATEGORY_UPDATE_FAIL,\r\n  CATEGORY_DELETE_REQUEST,\r\n  CATEGORY_DELETE_FAIL,\r\n  CATEGORY_DELETE_SUCCESS,\r\n} from '../constants/categoryConstants';\r\n\r\n\r\nexport const listCategories = () => async (dispatch, getState) => {\r\n    dispatch({ type: CATEGORY_LIST_REQUEST });\r\n    const { adminSignin:{adminInfo}} = getState();\r\n    try {\r\n\r\n      const { data } = await axios.get(`/api/categories`,{\r\n        headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n      }\r\n      );\r\n\r\n      dispatch({\r\n      type: CATEGORY_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: CATEGORY_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n    }\r\n};\r\n  \r\nexport const detailsCategory = (categoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_DETAILS_REQUEST, payload: categoryId });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n    dispatch({ type: CATEGORY_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/categories/${categoryId}`,{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n    dispatch({ type: CATEGORY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: CATEGORY_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createCategory = (newcategory) => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_CREATE_REQUEST });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n  try {\r\n    const { data } = await axios.post('/api/categories/',newcategory,{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n    dispatch({\r\n      type: CATEGORY_CREATE_SUCCESS,\r\n      payload: data.category,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateCategory = (category) => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_UPDATE_REQUEST, payload: category });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/categories/${category.category_id}`, category,{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n    dispatch({ type: CATEGORY_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteCategory = (categoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_DELETE_REQUEST, payload: categoryId });\r\n  const { adminSignin:{adminInfo}} = getState();\r\n\r\n  try {\r\n    \r\n    const { data } = await axios.delete(`/api/categories/${categoryId}`,{\r\n      headers:{ Authorization: `Bearer ${adminInfo.token}`}\r\n    }\r\n    );\r\n\r\n    dispatch({ type: CATEGORY_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Variant.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\variantConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\supplierConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\adminConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\cartAction.js",["318","319","320","321","322","323"],"import axios from 'axios'\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM,CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart=(product_id,variant_id,qty) => async (dispatch,getState)=>{\r\n    const {data}=await axios.get(`/api/products/${product_id}/${variant_id}`)\r\n    console.log('data from proid/variid')\r\n    console.log(data)\r\n    const {userLogin:{userInfo}}=getState()\r\n    if(userInfo){\r\n        console.log(getState().userLogin)\r\n        // const {userLogin:{userInfo}}=getState()\r\n        const config={\r\n        headers:{\r\n            'Content-Type':'application/json',\r\n            Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const cart={product:product_id, variant:variant_id, quantity:qty}\r\n        const customerID=5\r\n        const {data1} =await axios.post('/api/cart/addItem',{product_id, variant_id, qty, customerID},config)\r\n    }\r\n    \r\n    // console.log(cart)\r\n    const customerID=5\r\n    \r\n\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload:{\r\n            product_id:data.product_id,\r\n            variant_id:data.variantId,\r\n            name:data.product_name,\r\n            image:data.image,\r\n            price:data.price,\r\n            noStock:data.noStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\n\r\n// export const addToCart = (product_id,variant_id,qty)=>async(dispatch,getState)=>{\r\n//     try{\r\n//         dispatch({\r\n//             type:CART_ADD_ITEM_REQUEST\r\n//         })\r\n//         const {userLogin:{userInfo}}=getState()\r\n//         const config={\r\n//             headers:{\r\n//                 'Content-Type':'application/json',\r\n//                 Authorization:`Bearer ${userInfo.token}`\r\n//             }\r\n//         }\r\n//         const cart={product_id,variant_id,qty}\r\n//         const {data} =await axios.put(`/api/cart/addItem`,cart,config)\r\n//         dispatch({\r\n//             type:CART_ADD_ITEM_SUCCESS,\r\n//             payload:data\r\n//         })\r\n//     }\r\n//     catch(error){\r\n//         dispatch({\r\n//             type:CART_ADD_ITEM_FAIL,\r\n//             payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport const removeFromCart= (product_id,variant_id)=> async(dispatch,getState)=>{\r\n    const {userLogin:{userInfo}}=getState()\r\n    if(userInfo){\r\n        const config={\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n        console.log('remove cart item login user')\r\n        const customerID=5\r\n        const {data1} =await axios.post('/api/cart/delete',{product_id, variant_id},config)\r\n    }\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload:{product_id,variant_id},\r\n    })\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress= (data)=>async(dispatch,getState)=>{\r\n    console.log(data)\r\n    console.log('shipment')\r\n    const {userLogin:{userInfo}}=getState()\r\n    if(userInfo){\r\n        const config={\r\n        headers:{\r\n            'Content-Type':'application/json',\r\n            Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const {data1} =await axios.post('/api/customer/shipment/change',data,config)\r\n    }\r\n    dispatch({\r\n        type:CART_SAVE_SHIPPING_ADDRESS,\r\n        payload:data,\r\n    })\r\n    localStorage.setItem('shippingAddress',JSON.stringify(data))\r\n}\r\n\r\nexport const saveDeliveryDetails= (data)=>(dispatch)=>{\r\n    console.log(data)\r\n    dispatch({\r\n        type:CART_SAVE_PAYMENT_METHOD,\r\n        payload:data,\r\n    })\r\n    localStorage.setItem('orderDetails',JSON.stringify(data))\r\n}\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\categoryConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\CheckoutSteps.js",[],{"ruleId":"324","replacedBy":"325"},{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","severity":1,"message":"329","line":3,"column":20,"nodeType":"330","messageId":"331","endLine":3,"endColumn":31},{"ruleId":"328","severity":1,"message":"332","line":3,"column":44,"nodeType":"330","messageId":"331","endLine":3,"endColumn":47},{"ruleId":"328","severity":1,"message":"333","line":3,"column":55,"nodeType":"330","messageId":"331","endLine":3,"endColumn":64},{"ruleId":"328","severity":1,"message":"334","line":3,"column":66,"nodeType":"330","messageId":"331","endLine":3,"endColumn":77},{"ruleId":"335","severity":1,"message":"336","line":28,"column":6,"nodeType":"337","endLine":28,"endColumn":20,"suggestions":"338"},{"ruleId":"339","severity":1,"message":"340","line":57,"column":66,"nodeType":"341","messageId":"342","endLine":57,"endColumn":68},{"ruleId":"328","severity":1,"message":"343","line":1,"column":27,"nodeType":"330","messageId":"331","endLine":1,"endColumn":35},{"ruleId":"328","severity":1,"message":"344","line":5,"column":8,"nodeType":"330","messageId":"331","endLine":5,"endColumn":14},{"ruleId":"335","severity":1,"message":"345","line":29,"column":7,"nodeType":"337","endLine":29,"endColumn":31,"suggestions":"346"},{"ruleId":"328","severity":1,"message":"347","line":4,"column":9,"nodeType":"330","messageId":"331","endLine":4,"endColumn":24},{"ruleId":"328","severity":1,"message":"348","line":42,"column":41,"nodeType":"330","messageId":"331","endLine":42,"endColumn":51},{"ruleId":"335","severity":1,"message":"349","line":64,"column":6,"nodeType":"337","endLine":64,"endColumn":32,"suggestions":"350"},{"ruleId":"339","severity":1,"message":"340","line":248,"column":49,"nodeType":"341","messageId":"342","endLine":248,"endColumn":51},{"ruleId":"328","severity":1,"message":"351","line":6,"column":8,"nodeType":"330","messageId":"331","endLine":6,"endColumn":15},{"ruleId":"328","severity":1,"message":"344","line":7,"column":8,"nodeType":"330","messageId":"331","endLine":7,"endColumn":14},{"ruleId":"328","severity":1,"message":"352","line":34,"column":12,"nodeType":"330","messageId":"331","endLine":34,"endColumn":19},{"ruleId":"328","severity":1,"message":"353","line":34,"column":21,"nodeType":"330","messageId":"331","endLine":34,"endColumn":26},{"ruleId":"335","severity":1,"message":"354","line":57,"column":7,"nodeType":"337","endLine":57,"endColumn":45,"suggestions":"355"},{"ruleId":"339","severity":1,"message":"340","line":64,"column":157,"nodeType":"341","messageId":"342","endLine":64,"endColumn":159},{"ruleId":"339","severity":1,"message":"340","line":65,"column":148,"nodeType":"341","messageId":"342","endLine":65,"endColumn":150},{"ruleId":"328","severity":1,"message":"356","line":13,"column":3,"nodeType":"330","messageId":"331","endLine":13,"endColumn":9},{"ruleId":"328","severity":1,"message":"357","line":3,"column":8,"nodeType":"330","messageId":"331","endLine":3,"endColumn":13},{"ruleId":"358","severity":1,"message":"359","line":37,"column":49,"nodeType":"360","messageId":"361","endLine":37,"endColumn":70,"fix":"362"},{"ruleId":"363","severity":1,"message":"364","line":60,"column":29,"nodeType":"365","messageId":"366","endLine":60,"endColumn":31},{"ruleId":"363","severity":1,"message":"364","line":60,"column":45,"nodeType":"365","messageId":"366","endLine":60,"endColumn":47},{"ruleId":"339","severity":1,"message":"367","line":66,"column":39,"nodeType":"341","messageId":"342","endLine":66,"endColumn":41},{"ruleId":"335","severity":1,"message":"368","line":79,"column":6,"nodeType":"337","endLine":79,"endColumn":66,"suggestions":"369"},{"ruleId":"339","severity":1,"message":"367","line":34,"column":41,"nodeType":"341","messageId":"342","endLine":34,"endColumn":43},{"ruleId":"335","severity":1,"message":"370","line":36,"column":7,"nodeType":"337","endLine":36,"endColumn":18,"suggestions":"371"},{"ruleId":"328","severity":1,"message":"372","line":9,"column":5,"nodeType":"330","messageId":"331","endLine":9,"endColumn":13},{"ruleId":"328","severity":1,"message":"373","line":8,"column":3,"nodeType":"330","messageId":"331","endLine":8,"endColumn":6},{"ruleId":"328","severity":1,"message":"374","line":9,"column":3,"nodeType":"330","messageId":"331","endLine":9,"endColumn":6},{"ruleId":"335","severity":1,"message":"368","line":73,"column":6,"nodeType":"337","endLine":73,"endColumn":46,"suggestions":"375"},{"ruleId":"339","severity":1,"message":"340","line":33,"column":68,"nodeType":"341","messageId":"342","endLine":33,"endColumn":70},{"ruleId":"339","severity":1,"message":"340","line":33,"column":113,"nodeType":"341","messageId":"342","endLine":33,"endColumn":115},{"ruleId":"328","severity":1,"message":"376","line":2,"column":17,"nodeType":"330","messageId":"331","endLine":2,"endColumn":26},{"ruleId":"328","severity":1,"message":"377","line":9,"column":3,"nodeType":"330","messageId":"331","endLine":9,"endColumn":27},{"ruleId":"328","severity":1,"message":"378","line":242,"column":13,"nodeType":"330","messageId":"331","endLine":242,"endColumn":17},{"ruleId":"328","severity":1,"message":"378","line":350,"column":13,"nodeType":"330","messageId":"331","endLine":350,"endColumn":17},{"ruleId":"328","severity":1,"message":"378","line":122,"column":13,"nodeType":"330","messageId":"331","endLine":122,"endColumn":17},{"ruleId":"328","severity":1,"message":"378","line":122,"column":13,"nodeType":"330","messageId":"331","endLine":122,"endColumn":17},{"ruleId":"328","severity":1,"message":"379","line":132,"column":11,"nodeType":"330","messageId":"331","endLine":132,"endColumn":17},{"ruleId":"328","severity":1,"message":"378","line":120,"column":13,"nodeType":"330","messageId":"331","endLine":120,"endColumn":17},{"ruleId":"328","severity":1,"message":"380","line":19,"column":15,"nodeType":"330","messageId":"331","endLine":19,"endColumn":19},{"ruleId":"328","severity":1,"message":"381","line":21,"column":16,"nodeType":"330","messageId":"331","endLine":21,"endColumn":21},{"ruleId":"328","severity":1,"message":"382","line":25,"column":11,"nodeType":"330","messageId":"331","endLine":25,"endColumn":21},{"ruleId":"328","severity":1,"message":"382","line":83,"column":15,"nodeType":"330","messageId":"331","endLine":83,"endColumn":25},{"ruleId":"328","severity":1,"message":"381","line":84,"column":16,"nodeType":"330","messageId":"331","endLine":84,"endColumn":21},{"ruleId":"328","severity":1,"message":"381","line":104,"column":16,"nodeType":"330","messageId":"331","endLine":104,"endColumn":21},"no-native-reassign",["383"],"no-negated-in-lhs",["384"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'ListGroup' is defined but never used.","'SplitButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'keyword'. Either include it or remove the dependency array.","ArrayExpression",["385"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'Loader' is defined but never used.","React Hook useEffect has a missing dependency: 'variantId'. Either include it or remove the dependency array.",["386"],"'ORDER_PAY_RESET' is defined but never used.","'successPay' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["387"],"'Message' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addressLine1', 'addressLine2', 'city', 'phone', 'postalCode', and 'province'. Either include them or remove the dependency array. You can also do a functional update 'setAddressLine1(a => ...)' if you only need 'addressLine1' in the 'setAddressLine1' call.",["388"],"'Button' is defined but never used.","'axios' is defined but never used.","no-useless-rename","Destructuring assignment categories unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"389","text":"390"},"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'categoryId', 'caterror', 'catloading', 'scaterror', 'scatloading', 'superror', and 'suploading'. Either include them or remove the dependency array.",["391"],"React Hook useEffect has a missing dependency: 'adminInfo.token'. Either include it or remove the dependency array.",["392"],"'Dropdown' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.",["393"],"'useEffect' is defined but never used.","'PRODUCT_DETAILS_REQUEST1' is defined but never used.","'data' is assigned a value but never used.","'config' is assigned a value but never used.","'cart' is assigned a value but never used.","'data1' is assigned a value but never used.","'customerID' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"394","fix":"395"},{"desc":"396","fix":"397"},{"desc":"398","fix":"399"},{"desc":"400","fix":"401"},[1545,1566],"categories",{"desc":"402","fix":"403"},{"desc":"404","fix":"405"},{"desc":"406","fix":"407"},"Update the dependencies array to be: [dispatch, cat, keyword]",{"range":"408","text":"409"},"Update the dependencies array to be: [dispatch, productId, qty, variantId]",{"range":"410","text":"411"},"Update the dependencies array to be: [dispatch, history, order, success]",{"range":"412","text":"413"},"Update the dependencies array to be: [dispatch, history, userInfo, address, addressLine1, addressLine2, postalCode, city, province, phone]",{"range":"414","text":"415"},"Update the dependencies array to be: [product, dispatch, productId, successUpdate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",{"range":"416","text":"417"},"Update the dependencies array to be: [adminInfo.token, productId]",{"range":"418","text":"419"},"Update the dependencies array to be: [dispatch, successCreate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",{"range":"420","text":"421"},[984,998],"[dispatch, cat, keyword]",[888,912],"[dispatch, productId, qty, variantId]",[2441,2467],"[dispatch, history, order, success]",[2345,2383],"[dispatch, history, userInfo, address, addressLine1, addressLine2, postalCode, city, province, phone]",[2986,3046],"[product, dispatch, productId, successUpdate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",[1424,1435],"[adminInfo.token, productId]",[2811,2851],"[dispatch, successCreate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]"]