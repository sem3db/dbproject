[{"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\index.js":"1","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\App.js":"3","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\store.js":"4","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Header.js":"5","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\CartScreen.js":"9","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\productreducers.js":"10","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\cartreducers.js":"11","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Message.js":"12","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Loader.js":"13","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\productAction.js":"14","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\productConstants.js":"15","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\cartConstants.js":"16","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\cartAction.js":"17","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Product.js":"18","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Rating.js":"19","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\orderReducers.js":"20","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\orderConstants.js":"21","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderListScreen.js":"22","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\orderActions.js":"23","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductListScreen.js":"24","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\userreducers.js":"25","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\userConstants.js":"26","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\LoginScreen.js":"27","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ShippingScreen.js":"28","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PaymentScreen.js":"29","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\userActions.js":"31","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\FormContainer.js":"32","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\CheckoutSteps.js":"33","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js":"34","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Variant.js":"35","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\DashBoardScreen.js":"36"},{"size":612,"mtime":1613376057813,"results":"37","hashOfConfig":"38"},{"size":375,"mtime":1613376057814,"results":"39","hashOfConfig":"38"},{"size":1943,"mtime":1614076387038,"results":"40","hashOfConfig":"38"},{"size":2005,"mtime":1613686351433,"results":"41","hashOfConfig":"38"},{"size":3157,"mtime":1614075243607,"results":"42","hashOfConfig":"38"},{"size":1060,"mtime":1613633044585,"results":"43","hashOfConfig":"38"},{"size":336,"mtime":1613661523293,"results":"44","hashOfConfig":"38"},{"size":4036,"mtime":1613687037745,"results":"45","hashOfConfig":"38"},{"size":3602,"mtime":1613635544135,"results":"46","hashOfConfig":"38"},{"size":2789,"mtime":1613691120300,"results":"47","hashOfConfig":"38"},{"size":1289,"mtime":1613566630862,"results":"48","hashOfConfig":"38"},{"size":281,"mtime":1613566630659,"results":"49","hashOfConfig":"38"},{"size":341,"mtime":1613566630620,"results":"50","hashOfConfig":"38"},{"size":5926,"mtime":1613977259125,"results":"51","hashOfConfig":"38"},{"size":1124,"mtime":1613383029910,"results":"52","hashOfConfig":"38"},{"size":279,"mtime":1613566630833,"results":"53","hashOfConfig":"38"},{"size":1306,"mtime":1613635544086,"results":"54","hashOfConfig":"38"},{"size":793,"mtime":1613376057766,"results":"55","hashOfConfig":"38"},{"size":1298,"mtime":1613376057802,"results":"56","hashOfConfig":"38"},{"size":3349,"mtime":1613383050705,"results":"57","hashOfConfig":"38"},{"size":1475,"mtime":1613631796201,"results":"58","hashOfConfig":"38"},{"size":3807,"mtime":1613981216649,"results":"59","hashOfConfig":"38"},{"size":6423,"mtime":1614070438142,"results":"60","hashOfConfig":"38"},{"size":3772,"mtime":1613976277003,"results":"61","hashOfConfig":"38"},{"size":552,"mtime":1613566630938,"results":"62","hashOfConfig":"38"},{"size":202,"mtime":1613566630834,"results":"63","hashOfConfig":"38"},{"size":2497,"mtime":1613566631051,"results":"64","hashOfConfig":"38"},{"size":2399,"mtime":1613566631100,"results":"65","hashOfConfig":"38"},{"size":1622,"mtime":1613566631051,"results":"66","hashOfConfig":"38"},{"size":6097,"mtime":1613976380398,"results":"67","hashOfConfig":"38"},{"size":975,"mtime":1613566630502,"results":"68","hashOfConfig":"38"},{"size":389,"mtime":1613566630570,"results":"69","hashOfConfig":"38"},{"size":1421,"mtime":1613566630526,"results":"70","hashOfConfig":"38"},{"size":11238,"mtime":1613688837297,"results":"71","hashOfConfig":"38"},{"size":1229,"mtime":1613635544106,"results":"72","hashOfConfig":"38"},{"size":161,"mtime":1614075582949,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1i9xyw7",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\index.js",[],["152","153"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\App.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\store.js",["154","155","156","157"],"import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport {\r\n  producListReducer,\r\n  productDetailsReducer,\r\n  productCreateReducer,\r\n  productDeleteReducer,\r\n  productUpdateReducer,\r\n} from './reducers/productreducers'\r\n\r\nimport {cartReducer} from './reducers/cartreducers'\r\nimport {userLoginReducer} from './reducers/userreducers'\r\n\r\nimport {\r\n  orderCreateReducer,\r\n  orderDeleteReducer,\r\n  orderDeliverReducer,\r\n  orderDetailsReducer,\r\n  orderListReducer,\r\n  orderMineListReducer,\r\n  orderPayReducer,\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  productList:producListReducer,\r\n  productDetails:productDetailsReducer,\r\n  productList:producListReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productDelete: productDeleteReducer,\r\n  cart:cartReducer,\r\n  userLogin:userLoginReducer,\r\n  cart:cartReducer,\r\n  userLogin:userLoginReducer,\r\n  cart:cartReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderMineList: orderMineListReducer,\r\n  orderList: orderListReducer,\r\n  orderDelete: orderDeleteReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[]\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')?JSON.parse(localStorage.getItem('shippingAddress')):{}\r\n\r\nconst initialState = {\r\n  cart:{cartItems:cartItemsFromStorage, \r\n    shippingAddress:shippingAddressFromStorage},\r\n  userLogin:{userInfo:userInfoFromStorage}\r\n};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nexport default store;\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\productreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\cartreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\productAction.js",["158"],"import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_DELETE_SUCCESS,\r\n} from '../constants/productConstants'\r\n\r\nconst productdata = [\r\n  { _id: 1,\r\n    product_name: 'p-name',\r\n    category_name: 'cat-name',\r\n    category_description: 'cat-description',\r\n    subcat_name: 'subcat-name',\r\n    description: 'p-description',\r\n    weight: 'p-weight',\r\n    dimension: 'p-dimension',\r\n    brand: 'p-brand',\r\n    supplier_name: 's-name',\r\n    contact_number: 's-contact',\r\n    email: 's-email',\r\n    SKU: 'v-sku',\r\n    price: 'v-price',\r\n    offer: 'v-offer',\r\n    color: 'v-color',\r\n    size: 'v-size',\r\n    no_stock: 'v-stock',\r\n    image_url: '/images/p1.jpg',\r\n  },\r\n  { _id: 2,\r\n    product_name: 'p-name',\r\n    category_name: 'cat-name',\r\n    category_description: 'cat-description',\r\n    subcat_name: 'subcat-name',\r\n    description: 'p-description',\r\n    weight: 'p-weight',\r\n    dimension: 'p-dimension',\r\n    brand: 'p-brand',\r\n    supplier_name: 's-name',\r\n    contact_number: 's-contact',\r\n    email: 's-email',\r\n    SKU: 'v-sku2',\r\n    price: 'v-price2',\r\n    offer: 'v-offer2',\r\n    color: 'v-color2',\r\n    size: 'v-size2',\r\n    no_stock: 'v-stock2',\r\n    image_url: '/images/p2.jpg',\r\n  }\r\n]\r\n\r\n\r\nexport const listProducts = () => async (dispatch) =>{\r\n  try{\r\n      dispatch({type:PRODUCT_LIST_REQUEST})\r\n      // const {data} = await axios.get('/api/products')\r\n      const data = productdata;\r\n      dispatch({\r\n          type:PRODUCT_LIST_SUCCESS,\r\n          payload:data\r\n      })\r\n  }\r\n  catch(error){\r\n      console.log(error)\r\n      dispatch({\r\n          type:PRODUCT_LIST_FAIL,\r\n          payload : error.response && error.response.data.message ? error.response.data.message: error.message\r\n      })\r\n  }\r\n}\r\n\r\nexport const listProductsCat = (cat) => async (dispatch) =>{\r\n    try{\r\n        dispatch({type:PRODUCT_LIST_REQUEST})\r\n        const {data} = await axios.get(`/api/products/${cat}`)\r\n        dispatch({\r\n            type:PRODUCT_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n    }\r\n    catch(error){\r\n        console.log(error)\r\n        dispatch({\r\n            type:PRODUCT_LIST_FAIL,\r\n            payload : error.response && error.response.data.message ? error.response.data.message: error.message\r\n        })\r\n    }\r\n}\r\nexport const detailsProduct = (productId) => async (dispatch) =>{\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  try{\r\n      dispatch({type:PRODUCT_DETAILS_REQUEST})\r\n      // const {data} = await axios.get(`/api/product/${productId}`)\r\n      const data = productdata[productId-1];\r\n      dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  }\r\n  catch(error){\r\n      console.log(error)\r\n      dispatch({\r\n          type:PRODUCT_DETAILS_FAIL,\r\n          payload : error.response && error.response.data.message ? error.response.data.message: error.message\r\n      })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n    try {\r\n      // const { data } = await axios.post(\r\n      //   '/api/products',\r\n      //   {},\r\n      // );\r\n      const newproduct = {\r\n        _id: productdata.length +1,\r\n        product_name: 'sample',\r\n        category_name: 'sample',\r\n        category_description: 'sample',\r\n        subcat_name: 'sample',\r\n        description: 'sample',\r\n        weight: 'sample',\r\n        dimension: 'sample',\r\n        brand: 'sample',\r\n        supplier_name: 'sample',\r\n        contact_number: 'sample',\r\n        email: 'sample',\r\n        SKU: 'sample',\r\n        price: 'sample',\r\n        offer: 'sample',\r\n        color: 'sample',\r\n        size: 'sample',\r\n        no_stock: 'sample',\r\n        image_url: '/images/p0.jpg',\r\n      };\r\n      productdata.push(newproduct);\r\n      const data = {product:newproduct};\r\n      dispatch({\r\n        type: PRODUCT_CREATE_SUCCESS,\r\n        payload: data.product,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n    }\r\n  };\r\n  export const updateProduct = (product) => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n    // const {\r\n    //   userSignin: { userInfo },\r\n    // } = getState();\r\n    try {\r\n      // const { data } = await axios.put(`/api/products/${product._id}`, product);\r\n      productdata[product._id - 1] = product;\r\n      const { data } = productdata;\r\n      dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n    }\r\n  };\r\n  export const deleteProduct = (productId) => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n    // const {\r\n    //   userSignin: { userInfo },\r\n    // } = getState();\r\n    try {\r\n      // const { data } = axios.delete(`/api/products/${productId}`);\r\n      productdata.splice(productId-1,1);\r\n      const { data } = productdata;\r\n      dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n    }\r\n  };\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\cartAction.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderListScreen.js",["159","160","161"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteOrder, deliverOrder, listOrders } from '../action/orderActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { ORDER_DELETE_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\nexport default function OrderListScreen(props) {\r\n    const orderList = useSelector((state) => state.orderList);\r\n    const { loading, error, orders } = orderList;\r\n    const orderDelete = useSelector((state) => state.orderDelete);\r\n    const {\r\n      loading: loadingDelete,\r\n      error: errorDelete,\r\n      success: successDelete,\r\n    } = orderDelete;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n      dispatch({ type: ORDER_DELETE_RESET });\r\n      dispatch(listOrders());\r\n    }, [dispatch, successDelete]);\r\n    const deleteHandler = (order) => {\r\n      if (window.confirm('Are you sure to delete?')) {\r\n        dispatch(deleteOrder(order._id));\r\n      }\r\n    };\r\n\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver);\r\n    const {\r\n      loading: loadingDeliver,\r\n      error: errorDeliver,\r\n      success: successDeliver,\r\n    } = orderDeliver;\r\n    useEffect(() => {\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(listOrders());\r\n    }, [dispatch, successDeliver]);\r\n    const deliverHandler = (order) => {\r\n      if (window.confirm('Are you sure to deliver?')) {\r\n        dispatch(deliverOrder(order._id));\r\n      }\r\n    };\r\n\r\n\r\n    return (\r\n      <div className=\"admin\">\r\n        <h1>Orders</h1>\r\n        {loadingDelete && <Loader></Loader>}\r\n        {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>USER</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th>ACTIONS</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.userName}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice.toFixed(2)}</td>\r\n                  <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'No'}</td>\r\n                  <td>\r\n                    {order.isDelivered\r\n                      ? order.deliveredAt.substring(0, 10)\r\n                      : 'No'}\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => {\r\n                        props.history.push(`/order/${order._id}`);\r\n                      }}\r\n                    >\r\n                      Details\r\n                    </button>\r\n                    {/* <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deleteHandler(order)}\r\n                    >\r\n                      Delete\r\n                    </button> */}\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deliverHandler(order)}\r\n                    >\r\n                      Deliver\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    );\r\n  }","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\orderActions.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\userreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js",["162"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {createOrder} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const PlaceOrderScreen = () => {\r\n\r\n    const cart = useSelector(state=>state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n    cart.deliveryCost = cart.itemsPrice>100?0:cart.itemsPrice>50?cart.itemsPrice*0.05:10\r\n    cart.taxPrice =Number((0.15*cart.itemsPrice).toFixed(2))\r\n    cart.totalPrice=Number(cart.itemsPrice)+Number(cart.deliveryCost)+Number(cart.taxPrice)\r\n\r\n    const PlaceOrderHandler=()=>{\r\n        console.log('')\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <CheckoutSteps step1 step2 step3 step4/>\r\n    <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Address:</strong>\r\n                        {cart.shippingAddress.address},{cart.shippingAddress.city}{' '}\r\n                        {cart.shippingAddress.postalCode},{' '}\r\n                        {cart.shippingAddress.country}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <strong>Method:</strong>\r\n                    {cart.paymentMethod}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {cart.cartItems.length===0?<Message>Your Cart is Empty</Message>:\r\n                    (\r\n                        <ListGroup variant='flush'>\r\n                            {cart.cartItems.map((item,index)=>(\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Row>\r\n                                                <Col className='text-left' md={2}>{item.qty}</Col>\r\n                                                <Col md={1}>x</Col>\r\n                                                <Col className='text-right' md={3}>${item.price}</Col>\r\n                                                <Col md={1}>=</Col>\r\n                                                <Col className='text-right' md={3}>${(item.qty * item.price).toFixed(2)}</Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n                                            <Card>\r\n                                                <ListGroup variant='flush'>\r\n                                                    <ListGroup.Item>\r\n                                                        <h2>Order Summary</h2>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Items</Col>\r\n                                                            <Col>${cart.itemsPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Delivery</Col>\r\n                                                            <Col>${cart.deliveryCost.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Tax</Col>\r\n                                                            <Col>${cart.taxPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Total</Col>\r\n                                                        <Col>${cart.totalPrice.toFixed(2)}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Button type='button' className='btn-block' disabled={cart.cartItems===0} onClick={PlaceOrderHandler}>Place Order</Button>\r\n                                                </ListGroup.Item>\r\n                                                </ListGroup>\r\n                                            </Card>\r\n                                        </Col>\r\n    </Row>\r\n</>\r\n  )\r\n}\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\userActions.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Variant.js",[],["163","164"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\DashBoardScreen.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":29,"column":3,"nodeType":"171","messageId":"172","endLine":29,"endColumn":14},{"ruleId":"169","severity":1,"message":"173","line":35,"column":3,"nodeType":"171","messageId":"172","endLine":35,"endColumn":7},{"ruleId":"169","severity":1,"message":"174","line":36,"column":3,"nodeType":"171","messageId":"172","endLine":36,"endColumn":12},{"ruleId":"169","severity":1,"message":"173","line":37,"column":3,"nodeType":"171","messageId":"172","endLine":37,"endColumn":7},{"ruleId":"175","severity":1,"message":"176","line":185,"column":15,"nodeType":"177","messageId":"178","endLine":185,"endColumn":19},{"ruleId":"175","severity":1,"message":"179","line":22,"column":11,"nodeType":"177","messageId":"178","endLine":22,"endColumn":24},{"ruleId":"175","severity":1,"message":"180","line":31,"column":16,"nodeType":"177","messageId":"178","endLine":31,"endColumn":30},{"ruleId":"175","severity":1,"message":"181","line":32,"column":14,"nodeType":"177","messageId":"178","endLine":32,"endColumn":26},{"ruleId":"175","severity":1,"message":"182","line":5,"column":9,"nodeType":"177","messageId":"178","endLine":5,"endColumn":20},{"ruleId":"165","replacedBy":"183"},{"ruleId":"167","replacedBy":"184"},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-dupe-keys","Duplicate key 'productList'.","ObjectExpression","unexpected","Duplicate key 'cart'.","Duplicate key 'userLogin'.","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'deleteHandler' is assigned a value but never used.","'loadingDeliver' is assigned a value but never used.","'errorDeliver' is assigned a value but never used.","'createOrder' is defined but never used.",["185"],["186"],"no-global-assign","no-unsafe-negation"]