[{"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\index.js":"1","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\App.js":"3","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\store.js":"4","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Header.js":"5","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\CartScreen.js":"9","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\productreducers.js":"10","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\cartreducers.js":"11","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Message.js":"12","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Loader.js":"13","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\productAction.js":"14","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\productConstants.js":"15","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\cartConstants.js":"16","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\cartAction.js":"17","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Product.js":"18","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Rating.js":"19","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\orderReducers.js":"20","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\orderConstants.js":"21","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderListScreen.js":"22","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\orderActions.js":"23","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductListScreen.js":"24","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\userreducers.js":"25","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\userConstants.js":"26","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\LoginScreen.js":"27","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ShippingScreen.js":"28","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PaymentScreen.js":"29","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\userActions.js":"31","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\FormContainer.js":"32","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\CheckoutSteps.js":"33","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js":"34","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Variant.js":"35","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\RegisterScreen.js":"36","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProfileScreen.js":"37","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\DashBoardScreen.js":"38","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderScreen.js":"39","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js":"40","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantListScreen.js":"41","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\categoryReducers.js":"42","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\categoryConstants.js":"43","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\categoryActions.js":"44","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js":"45","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js":"46","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\supplierReducers.js":"47","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\supplierConstants.js":"48"},{"size":612,"mtime":1613376057813,"results":"49","hashOfConfig":"50"},{"size":375,"mtime":1613376057814,"results":"51","hashOfConfig":"50"},{"size":2874,"mtime":1614580942502,"results":"52","hashOfConfig":"50"},{"size":3774,"mtime":1614588616599,"results":"53","hashOfConfig":"50"},{"size":3240,"mtime":1614584120804,"results":"54","hashOfConfig":"50"},{"size":3968,"mtime":1614584120582,"results":"55","hashOfConfig":"50"},{"size":336,"mtime":1613661523293,"results":"56","hashOfConfig":"50"},{"size":4340,"mtime":1614523679201,"results":"57","hashOfConfig":"50"},{"size":3602,"mtime":1614584120513,"results":"58","hashOfConfig":"50"},{"size":7127,"mtime":1614588823738,"results":"59","hashOfConfig":"50"},{"size":1289,"mtime":1613566630862,"results":"60","hashOfConfig":"50"},{"size":281,"mtime":1613566630659,"results":"61","hashOfConfig":"50"},{"size":341,"mtime":1613566630620,"results":"62","hashOfConfig":"50"},{"size":7915,"mtime":1614584651461,"results":"63","hashOfConfig":"50"},{"size":2452,"mtime":1614519526487,"results":"64","hashOfConfig":"50"},{"size":279,"mtime":1613566630833,"results":"65","hashOfConfig":"50"},{"size":1322,"mtime":1614256189587,"results":"66","hashOfConfig":"50"},{"size":987,"mtime":1614523679198,"results":"67","hashOfConfig":"50"},{"size":1342,"mtime":1614523679198,"results":"68","hashOfConfig":"50"},{"size":3555,"mtime":1614255385811,"results":"69","hashOfConfig":"50"},{"size":1475,"mtime":1613631796201,"results":"70","hashOfConfig":"50"},{"size":3452,"mtime":1614261500654,"results":"71","hashOfConfig":"50"},{"size":7339,"mtime":1614261641285,"results":"72","hashOfConfig":"50"},{"size":4216,"mtime":1614577947058,"results":"73","hashOfConfig":"50"},{"size":2064,"mtime":1614255385889,"results":"74","hashOfConfig":"50"},{"size":849,"mtime":1614255385748,"results":"75","hashOfConfig":"50"},{"size":2497,"mtime":1613566631051,"results":"76","hashOfConfig":"50"},{"size":2399,"mtime":1613566631100,"results":"77","hashOfConfig":"50"},{"size":1622,"mtime":1613566631051,"results":"78","hashOfConfig":"50"},{"size":6931,"mtime":1614255385951,"results":"79","hashOfConfig":"50"},{"size":3834,"mtime":1614523679197,"results":"80","hashOfConfig":"50"},{"size":389,"mtime":1613566630570,"results":"81","hashOfConfig":"50"},{"size":1421,"mtime":1613566630526,"results":"82","hashOfConfig":"50"},{"size":7783,"mtime":1614578067412,"results":"83","hashOfConfig":"50"},{"size":1476,"mtime":1614255385748,"results":"84","hashOfConfig":"50"},{"size":6966,"mtime":1614523679202,"results":"85","hashOfConfig":"50"},{"size":3603,"mtime":1614255386092,"results":"86","hashOfConfig":"50"},{"size":161,"mtime":1614075582949,"results":"87","hashOfConfig":"50"},{"size":5026,"mtime":1614265897785,"results":"88","hashOfConfig":"50"},{"size":14556,"mtime":1614523196554,"results":"89","hashOfConfig":"50"},{"size":3832,"mtime":1614580906042,"results":"90","hashOfConfig":"50"},{"size":2840,"mtime":1614586266974,"results":"91","hashOfConfig":"50"},{"size":1160,"mtime":1614586219334,"results":"92","hashOfConfig":"50"},{"size":5754,"mtime":1614588874831,"results":"93","hashOfConfig":"50"},{"size":1266,"mtime":1614586236156,"results":"94","hashOfConfig":"50"},{"size":2983,"mtime":1614586246151,"results":"95","hashOfConfig":"50"},{"size":2837,"mtime":1614583978513,"results":"96","hashOfConfig":"50"},{"size":1158,"mtime":1614581309700,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1i9xyw7",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"169","usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\index.js",[],["199","200"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\App.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\store.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\HomeScreen.js",["201","202","203","204"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\productreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\cartreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\productAction.js",["205"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\cartAction.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderListScreen.js",["206","207","208"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteOrder, deliverOrder, listOrders } from '../action/orderActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { ORDER_DELETE_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\nexport default function OrderListScreen(props) {\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n  const orderDelete = useSelector((state) => state.orderDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = orderDelete;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({ type: ORDER_DELETE_RESET });\r\n    dispatch(listOrders());\r\n  }, [dispatch, successDelete]);\r\n  const deleteHandler = (order) => {\r\n    if (window.confirm('Are you sure to delete?')) {\r\n      dispatch(deleteOrder(order._id));\r\n    }\r\n  };\r\n\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const {\r\n    loading: loadingDeliver,\r\n    error: errorDeliver,\r\n    success: successDeliver,\r\n  } = orderDeliver;\r\n  useEffect(() => {\r\n    dispatch({ type: ORDER_DELIVER_RESET });\r\n    dispatch(listOrders());\r\n  }, [dispatch, successDeliver]);\r\n  const deliverHandler = (order) => {\r\n    if (window.confirm('Are you sure to deliver?')) {\r\n      dispatch(deliverOrder(order._id));\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <h1>Orders</h1>\r\n      {loadingDelete && <Loader></Loader>}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERY STATUS</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.order_id}>\r\n                <td>{order.order_id}</td>\r\n                <td>{order.user}</td>\r\n                <td>{}</td>\r\n                <td>{order.total_payment}</td>\r\n                <td>{}</td>\r\n                <td>{order.delivery_status}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() => {\r\n                      props.history.push(`/order/${order._id}`);\r\n                    }}\r\n                  >\r\n                    Details\r\n                  </button>\r\n                  {/* <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deleteHandler(order)}\r\n                    >\r\n                      Delete\r\n                    </button> */}\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deliverHandler(order)}\r\n                    >\r\n                      Deliver\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\orderActions.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\userreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js",["209"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {createOrder} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const PlaceOrderScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state=>state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n    cart.deliveryCost = cart.itemsPrice>100?0:cart.itemsPrice>50?cart.itemsPrice*0.05:10\r\n    cart.taxPrice =Number((0.15*cart.itemsPrice).toFixed(2))\r\n    cart.totalPrice=Number(cart.itemsPrice)+Number(cart.deliveryCost)+Number(cart.taxPrice)\r\n\r\nconst orderCreate = useSelector(state=>state.orderCreate)\r\nconst {order,success,error}=orderCreate\r\n\r\nuseEffect(()=>{\r\n    if(success){\r\n        history.push(`/order/${order._id}`)\r\n    }\r\n},[history,success])\r\n\r\n    const PlaceOrderHandler=()=>{\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            shippingAddress:cart.shippingAddress,\r\n            paymentMethod:cart.paymentMethod,\r\n            itemsPrice:cart.itemsPrice,\r\n            shippingPrice:cart.shippingPrice,\r\n            taxPrice:cart.taxPrice,\r\n            totalPrice:cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <CheckoutSteps step1 step2 step3 step4/>\r\n    <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Address:</strong>\r\n                        {cart.shippingAddress.address},{cart.shippingAddress.city}{' '}\r\n                        {cart.shippingAddress.postalCode},{' '}\r\n                        {cart.shippingAddress.country}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <strong>Method:</strong>\r\n                    {cart.paymentMethod}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {cart.cartItems.length===0?<Message>Your Cart is Empty</Message>:\r\n                    (\r\n                        <ListGroup variant='flush'>\r\n                            {cart.cartItems.map((item,index)=>(\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Row>\r\n                                                <Col className='text-left' md={2}>{item.qty}</Col>\r\n                                                <Col md={1}>x</Col>\r\n                                                <Col className='text-right' md={3}>${item.price}</Col>\r\n                                                <Col md={1}>=</Col>\r\n                                                <Col className='text-right' md={3}>${(item.qty * item.price).toFixed(2)}</Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n                                            <Card>\r\n                                                <ListGroup variant='flush'>\r\n                                                    <ListGroup.Item>\r\n                                                        <h2>Order Summary</h2>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Items</Col>\r\n                                                            <Col>${cart.itemsPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Delivery</Col>\r\n                                                            <Col>${cart.deliveryCost.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Tax</Col>\r\n                                                            <Col>${cart.taxPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Total</Col>\r\n                                                        <Col>${cart.totalPrice.toFixed(2)}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup>\r\n                                                {error && <Message variant='danger'>{error}</Message>}\r\n                                                </ListGroup>\r\n                                                <ListGroup.Item>\r\n                                                    <Button type='button' className='btn-block' disabled={cart.cartItems===0} onClick={PlaceOrderHandler}>Place Order</Button>\r\n                                                </ListGroup.Item>\r\n                                                </ListGroup>\r\n                                            </Card>\r\n                                        </Col>\r\n    </Row>\r\n</>\r\n  )\r\n}\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\userActions.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js",["210","211","212"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listCategories, listSubcategories } from '../action/categoryActions';\nimport { detailsProductAdmin, updateProduct } from '../action/productAction';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\n\nexport default function ProductEditScreen(props) {\n  const productId = props.match.params.id;\n  const [product_name, setProduct_name] = useState('');\n  const [description, setDescription] = useState('');\n  const [brand, setBrand] = useState('');\n  const [weight, setWeight] = useState('');\n  const [dimension, setDimension] = useState('');\n  const [category_name, setCategory_name] = useState('');\n  const [subcat_name, setSubcat_name] = useState('');\n  const [supplier_name, setSupplier_name] = useState('');\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const productUpdate = useSelector((state) => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate;\n\n  // Todo\n  const categoryList = useSelector((state) => state.categoryList);\n  const { loading: catloading, error: caterror, categories:categories } = categoryList;\n  // Todo\n  // Todo\n  const subcategoryList = useSelector((state) => state.subcategoryList);\n  const { loading: scatloading, error: scaterror, subcategories:subcategories } = subcategoryList;\n  // Todo\n  // Todo\n  const supplierlist = [{supplier_id:1,supplier_name:'xxx'},{supplier_id:2,supplier_name:'yyy'}]\n  // const supplierList = useSelector((state) => state.supplierList);\n  // Todo\n\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successUpdate) {\n      props.history.push('/productlist');\n    }\n    if (!catloading && !caterror) {\n      dispatch(listCategories());\n    }\n    if (!scatloading && !scaterror) {\n      dispatch(listSubcategories());\n    }\n    if (!product || product.product_id!=productId || successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET });\n      dispatch(detailsProductAdmin(productId));\n    } else {\n      setProduct_name(product.product_name);\n      setDescription(product.description);\n      setWeight(product.weight);\n      setDimension(product.dimension);\n      setBrand(product.brand);\n      setCategory_name(product.category_name);\n      setSubcat_name(product.subcat_name);\n      setSupplier_name(product.supplier_name);\n    }\n  }, [product, dispatch, productId, successUpdate, catloading, caterror, scatloading, scaterror, props.history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateProduct({\n        product_id: productId,\n        product_name,\n        description,\n        weight,\n        dimension,\n        brand,\n        category_name,\n        subcat_name,\n        supplier_name,\n      })\n    );\n  };\n\n  return (\n    <div className=\"admin\">\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <h1>Edit Product {productId}</h1>\n        </div>\n        {loadingUpdate && <Loader></Loader>}\n        {catloading && <Loader></Loader>}\n        {caterror && <Message variant=\"danger\">{caterror}</Message>}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader></Loader>\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <>\n            <div>\n              <label htmlFor=\"product_name\">Product_name</label>\n              <input\n                id=\"product_name\"\n                type=\"text\"\n                placeholder=\"Enter Product name\"\n                value={product_name}\n                onChange={(e) => setProduct_name(e.target.value)}\n                required\n              ></input>\n            </div>\n            <div>\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                id=\"description\"\n                rows=\"3\"\n                type=\"text\"\n                placeholder=\"Enter description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></textarea>\n            </div>\n            <div>\n              <label htmlFor=\"weight\">Weight</label>\n              <input\n                id=\"weight\"\n                type=\"text\"\n                placeholder=\"Enter Weight\"\n                value={weight}\n                onChange={(e) => setWeight(e.target.value)}\n              ></input>\n            </div>\n            <div>\n              <label htmlFor=\"dimension\">Dimension</label>\n              <input\n                id=\"dimension\"\n                type=\"text\"\n                placeholder=\"Enter Dimension\"\n                value={dimension}\n                onChange={(e) => setDimension(e.target.value)}\n              ></input>\n            </div>\n            <div>\n              <label htmlFor=\"brand\">Brand</label>\n              <input\n                id=\"brand\"\n                type=\"text\"\n                placeholder=\"Enter brand\"\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></input>\n            </div>\n            <div>\n              <label htmlFor=\"category_name\">Category</label>\n              <select\n                id=\"category_name\"\n                type=\"text\"\n                placeholder=\"Enter Category\"\n                value={category_name}\n                onChange={(e) => setCategory_name(e.target.value)}\n                required\n              >\n                <option value=\"\" disabled selected>select the category</option>\n                {categories.map(category => <option key={category.category_id}> {category.category_name} </option> )}\n              </select>\n            </div>\n            {/* <div>\n              <label htmlFor=\"category_description\">Category_description</label>\n              <input\n                id=\"category_description\"\n                type=\"text\"\n                placeholder=\"Enter Category_description\"\n                value={category_description}\n                onChange={(e) => setCategory_description(e.target.value)}\n              ></input>\n            </div> */}\n            <div>\n              <label htmlFor=\"subcat_name\">Subcategory</label>\n              <select\n                id=\"subcat_name\"\n                type=\"text\"\n                placeholder=\"Enter Subcategory_name\"\n                value={subcat_name}\n                onChange={(e) => setSubcat_name(e.target.value)}\n                required\n              >\n                <option value=\"\" disabled selected>select the subcategory</option>\n                {subcategories.map(subcategory => <option key={subcategory.subcat_id}> {subcategory.subcat_name} </option> )}\n              </select>\n            </div>\n            <div>\n              <label htmlFor=\"supplier_name\">Supplier</label>\n              <select\n                id=\"supplier_name\"\n                type=\"text\"\n                placeholder=\"Enter Supplier_name\"\n                value={supplier_name}\n                onChange={(e) => setSupplier_name(e.target.value)}\n                required\n              >\n                <option value=\"\" disabled selected>select the supplier</option>\n                {supplierlist.map(supplier => <option key={supplier.supplier_id}> {supplier.supplier_name} </option> )}\n              </select>\n            </div>\n\n            <div>\n              <label></label>\n              <button className=\"primary\" type=\"submit\">\n                Update\n              </button>\n            </div>\n          </>\n        )}\n      </form>\n    </div>\n  );\n}\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Variant.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\DashBoardScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderScreen.js",["213","214"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {getOrderDetails} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const OrderScreen = ({match}) => {\r\n    const orderId = match.params.id;\r\n    const dispatch = useDispatch()\r\n    \r\n\r\nconst orderDetails = useSelector(state=>state.orderDetails)\r\nconst {order,loading,error}=orderDetails\r\nif(!loading){\r\n    order.itemsPrice = order.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    dispatch(getOrderDetails(orderId))\r\n},[])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p><strong>Name:</strong>{order.user.name}</p>\r\n              <p><strong>Email:</strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address},{order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered?(\r\n                  <Message variant='success'>Delivered</Message>):<Message variant='success'>Not Delivered</Message>}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n              <strong>Method:</strong>\r\n              {order.paymentMethod}\r\n              </p>\r\n              <p>\r\n              <strong>Paid On:</strong>\r\n              {order.paidAt}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          <Row>\r\n                            <Col className=\"text-left\" md={2}>\r\n                              {item.qty}\r\n                            </Col>\r\n                            <Col md={1}>x</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${item.price}\r\n                            </Col>\r\n                            <Col md={1}>=</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${(item.qty * item.price).toFixed(2)}\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Delivery</Col>\r\n                  <Col>${order.deliveryCost.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\nexport default OrderScreen;\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantListScreen.js",["215"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\categoryReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\categoryConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\categoryActions.js",["216","217"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\supplierReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\supplierConstants.js",[],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":3,"column":20,"nodeType":"224","messageId":"225","endLine":3,"endColumn":31},{"ruleId":"222","severity":1,"message":"226","line":3,"column":44,"nodeType":"224","messageId":"225","endLine":3,"endColumn":47},{"ruleId":"222","severity":1,"message":"227","line":3,"column":55,"nodeType":"224","messageId":"225","endLine":3,"endColumn":64},{"ruleId":"222","severity":1,"message":"228","line":3,"column":66,"nodeType":"224","messageId":"225","endLine":3,"endColumn":77},{"ruleId":"222","severity":1,"message":"229","line":236,"column":13,"nodeType":"224","messageId":"225","endLine":236,"endColumn":17},{"ruleId":"222","severity":1,"message":"230","line":22,"column":9,"nodeType":"224","messageId":"225","endLine":22,"endColumn":22},{"ruleId":"222","severity":1,"message":"231","line":31,"column":14,"nodeType":"224","messageId":"225","endLine":31,"endColumn":28},{"ruleId":"222","severity":1,"message":"232","line":32,"column":12,"nodeType":"224","messageId":"225","endLine":32,"endColumn":24},{"ruleId":"233","severity":1,"message":"234","line":35,"column":3,"nodeType":"235","endLine":35,"endColumn":20,"suggestions":"236"},{"ruleId":"237","severity":1,"message":"238","line":32,"column":49,"nodeType":"239","messageId":"240","endLine":32,"endColumn":70,"fix":"241"},{"ruleId":"237","severity":1,"message":"242","line":36,"column":51,"nodeType":"239","messageId":"240","endLine":36,"endColumn":78,"fix":"243"},{"ruleId":"244","severity":1,"message":"245","line":55,"column":39,"nodeType":"246","messageId":"247","endLine":55,"endColumn":41},{"ruleId":"222","severity":1,"message":"248","line":13,"column":3,"nodeType":"224","messageId":"225","endLine":13,"endColumn":9},{"ruleId":"233","severity":1,"message":"249","line":32,"column":3,"nodeType":"235","endLine":32,"endColumn":5,"suggestions":"250"},{"ruleId":"222","severity":1,"message":"251","line":48,"column":9,"nodeType":"224","messageId":"225","endLine":48,"endColumn":22},{"ruleId":"222","severity":1,"message":"252","line":1,"column":8,"nodeType":"224","messageId":"225","endLine":1,"endColumn":13},{"ruleId":"222","severity":1,"message":"229","line":192,"column":13,"nodeType":"224","messageId":"225","endLine":192,"endColumn":17},"no-native-reassign",["253"],"no-negated-in-lhs",["254"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'ListGroup' is defined but never used.","'SplitButton' is defined but never used.","'data' is assigned a value but never used.","'deleteHandler' is assigned a value but never used.","'loadingDeliver' is assigned a value but never used.","'errorDeliver' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.","ArrayExpression",["255"],"no-useless-rename","Destructuring assignment categories unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"256","text":"257"},"Destructuring assignment subcategories unnecessarily renamed.",{"range":"258","text":"259"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderId'. Either include them or remove the dependency array.",["260"],"'createHandler' is assigned a value but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},[1367,1388],"categories",[1550,1577],"subcategories",{"desc":"263","fix":"264"},"Update the dependencies array to be: [history, order._id, success]",{"range":"265","text":"266"},"Update the dependencies array to be: [dispatch, orderId]",{"range":"267","text":"268"},[1111,1128],"[history, order._id, success]",[835,837],"[dispatch, orderId]"]