[{"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\index.js":"1","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\App.js":"3","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\store.js":"4","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Header.js":"5","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\CartScreen.js":"9","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\productreducers.js":"10","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\cartreducers.js":"11","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Message.js":"12","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Loader.js":"13","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\productAction.js":"14","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\productConstants.js":"15","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\cartConstants.js":"16","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\cartAction.js":"17","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Product.js":"18","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Rating.js":"19","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\orderReducers.js":"20","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\orderConstants.js":"21","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderListScreen.js":"22","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\orderActions.js":"23","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductListScreen.js":"24","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\userreducers.js":"25","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\userConstants.js":"26","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\LoginScreen.js":"27","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ShippingScreen.js":"28","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PaymentScreen.js":"29","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\userActions.js":"31","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\FormContainer.js":"32","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\CheckoutSteps.js":"33","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js":"34","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Variant.js":"35","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\RegisterScreen.js":"36","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProfileScreen.js":"37","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderScreen.js":"38","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js":"39","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantListScreen.js":"40","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\categoryReducers.js":"41","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\categoryConstants.js":"42","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\categoryActions.js":"43","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js":"44","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js":"45","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\supplierReducers.js":"46","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\supplierConstants.js":"47","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\variantConstants.js":"48","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\supplierActions.js":"49","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\subcategoryActions.js":"50","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductCreateScreen.js":"51","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report2Screen.js":"52","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report3Screen.js":"53","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report4Screen.js":"54","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report5Screen.js":"55","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report1Screen.js":"56","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantCreateScreen.js":"57","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ReportScreen.js":"58","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\SigninAdminScreen.js":"59","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\adminReducer.js":"60","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\adminConstants.js":"61","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\adminActions.js":"62","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\AdminRoute.js":"63"},{"size":612,"mtime":1613376057813,"results":"64","hashOfConfig":"65"},{"size":375,"mtime":1613376057814,"results":"66","hashOfConfig":"65"},{"size":4161,"mtime":1614765145790,"results":"67","hashOfConfig":"65"},{"size":4211,"mtime":1614758966558,"results":"68","hashOfConfig":"65"},{"size":3841,"mtime":1614764204632,"results":"69","hashOfConfig":"65"},{"size":4070,"mtime":1614624056382,"results":"70","hashOfConfig":"65"},{"size":336,"mtime":1613661523293,"results":"71","hashOfConfig":"65"},{"size":4563,"mtime":1614713119953,"results":"72","hashOfConfig":"65"},{"size":3795,"mtime":1614713119933,"results":"73","hashOfConfig":"65"},{"size":7306,"mtime":1614713119931,"results":"74","hashOfConfig":"65"},{"size":1347,"mtime":1614713119912,"results":"75","hashOfConfig":"65"},{"size":305,"mtime":1614713119911,"results":"76","hashOfConfig":"65"},{"size":341,"mtime":1613566630620,"results":"77","hashOfConfig":"65"},{"size":10830,"mtime":1614770460098,"results":"78","hashOfConfig":"65"},{"size":1324,"mtime":1614590257001,"results":"79","hashOfConfig":"65"},{"size":279,"mtime":1613566630833,"results":"80","hashOfConfig":"65"},{"size":3464,"mtime":1614713119859,"results":"81","hashOfConfig":"65"},{"size":987,"mtime":1614523679198,"results":"82","hashOfConfig":"65"},{"size":1342,"mtime":1614523679198,"results":"83","hashOfConfig":"65"},{"size":3555,"mtime":1614255385811,"results":"84","hashOfConfig":"65"},{"size":1475,"mtime":1613631796201,"results":"85","hashOfConfig":"65"},{"size":2902,"mtime":1614771294440,"results":"86","hashOfConfig":"65"},{"size":5817,"mtime":1614771177653,"results":"87","hashOfConfig":"65"},{"size":4263,"mtime":1614747506848,"results":"88","hashOfConfig":"65"},{"size":2435,"mtime":1614659916587,"results":"89","hashOfConfig":"65"},{"size":1023,"mtime":1614624056219,"results":"90","hashOfConfig":"65"},{"size":2497,"mtime":1613566631051,"results":"91","hashOfConfig":"65"},{"size":5775,"mtime":1614713119955,"results":"92","hashOfConfig":"65"},{"size":1622,"mtime":1613566631051,"results":"93","hashOfConfig":"65"},{"size":6931,"mtime":1614255385951,"results":"94","hashOfConfig":"65"},{"size":5101,"mtime":1614713119910,"results":"95","hashOfConfig":"65"},{"size":389,"mtime":1613566630570,"results":"96","hashOfConfig":"65"},{"size":1421,"mtime":1613566630526,"results":"97","hashOfConfig":"65"},{"size":8429,"mtime":1614701281413,"results":"98","hashOfConfig":"65"},{"size":1476,"mtime":1614255385748,"results":"99","hashOfConfig":"65"},{"size":6966,"mtime":1614523679202,"results":"100","hashOfConfig":"65"},{"size":3608,"mtime":1614624056572,"results":"101","hashOfConfig":"65"},{"size":5026,"mtime":1614265897785,"results":"102","hashOfConfig":"65"},{"size":6214,"mtime":1614746381611,"results":"103","hashOfConfig":"65"},{"size":3823,"mtime":1614747495284,"results":"104","hashOfConfig":"65"},{"size":2840,"mtime":1614586266974,"results":"105","hashOfConfig":"65"},{"size":1160,"mtime":1614586219334,"results":"106","hashOfConfig":"65"},{"size":3368,"mtime":1614771284181,"results":"107","hashOfConfig":"65"},{"size":1266,"mtime":1614586236156,"results":"108","hashOfConfig":"65"},{"size":2983,"mtime":1614586246151,"results":"109","hashOfConfig":"65"},{"size":2837,"mtime":1614602622879,"results":"110","hashOfConfig":"65"},{"size":1158,"mtime":1614581309700,"results":"111","hashOfConfig":"65"},{"size":1124,"mtime":1614590246270,"results":"112","hashOfConfig":"65"},{"size":3484,"mtime":1614605374816,"results":"113","hashOfConfig":"65"},{"size":3952,"mtime":1614630152215,"results":"114","hashOfConfig":"65"},{"size":8214,"mtime":1614747882650,"results":"115","hashOfConfig":"65"},{"size":3508,"mtime":1614750818195,"results":"116","hashOfConfig":"65"},{"size":1390,"mtime":1614751018724,"results":"117","hashOfConfig":"65"},{"size":3865,"mtime":1614747627729,"results":"118","hashOfConfig":"65"},{"size":1832,"mtime":1614750894589,"results":"119","hashOfConfig":"65"},{"size":2083,"mtime":1614750831814,"results":"120","hashOfConfig":"65"},{"size":5698,"mtime":1614747896380,"results":"121","hashOfConfig":"65"},{"size":161,"mtime":1614756928087,"results":"122","hashOfConfig":"65"},{"size":1918,"mtime":1614762397731,"results":"123","hashOfConfig":"65"},{"size":1120,"mtime":1614765538544,"results":"124","hashOfConfig":"65"},{"size":402,"mtime":1614765466009,"results":"125","hashOfConfig":"65"},{"size":1842,"mtime":1614771290793,"results":"126","hashOfConfig":"65"},{"size":561,"mtime":1614764682720,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"1i9xyw7",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"130"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"130"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"130"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"200","usedDeprecatedRules":"130"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"130"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"130"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"130"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"130"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"130"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\index.js",[],["264","265"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\App.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\store.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\HomeScreen.js",["266","267","268","269"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, NavDropdown , Dropdown, Nav, Card, ListGroup, SplitButton, ButtonGroup, Button, Form} from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport { listProductsCat, listProducts } from \"../action/productAction\";\r\n\r\nconst HomeScreen = ({match}) => {\r\n  const dispatch = useDispatch();\r\n  const cat = match.params.cat ? match.params.cat:\"\"\r\n  const productList=useSelector(state=>state.productList)\r\n  const {loading, error, products} =productList\r\n  const cats={consumer_electronics:['laptop','smart phone','dongal'],  kitchen_appliances:[\"rice cooker\",\"oven\", \"electric kettle\", \"heater\"],\r\n   camera:[\"DSLR\",\"Mirrorless\"], phone:[\"samsung\",\"apple\",\"nokia\"], laptop:['asus','dell','toshiba','hp','lenovo'], USB:['kingston','imation'],furniture:['chair,table'],\r\n  books:[],headphone:[],tablets:[]}\r\n  useEffect(() => {\r\n    if(cat){\r\n      dispatch(listProductsCat(cat))\r\n    }\r\n    else{\r\n      console.log('lklk')\r\n      dispatch(listProducts())\r\n    }\r\n  }, [dispatch,cat])\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={2}>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Card.Title><h6><strong>Product Catagaries</strong></h6></Card.Title>\r\n          {Object.keys(cats).map((cat) => (\r\n            <Dropdown as={ButtonGroup} className=\"btn btn-sm p-0\" style={{width:\"100%\"}} block>\r\n              <LinkContainer to={`/products/${cat}`} className=\"p-1\" style={{width:\"85%\"}}>\r\n              <Button className=\"btn btn-sm\" style={{width:\"100%\"}} variant=\"outline-dark\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{cat.replace('_',\" \")}</p></Button>\r\n            </LinkContainer>\r\n              <Dropdown.Toggle split className=\"btn btn-sm\" id=\"dropdown-split-basic\" variant=\"outline-dark\"/>\r\n              <Dropdown.Menu>\r\n            {cats[cat].map((c)=>(\r\n              <LinkContainer to={`/products/${cat}-${c}`} className=\"p-1\" style={{width:\"100%\"}}>\r\n                <Dropdown.Item className=\"btn btn-outline-dark btn-sm\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{c.replace('_',\" \")}</p></Dropdown.Item>\r\n              </LinkContainer>\r\n            ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          ))}\r\n          </Card.Body>\r\n        </Card>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Form.Group controlId=\"formBasicRange\">\r\n            <Form.Label>Price Range</Form.Label><Form.Control type=\"range\" min={0} max={100}/>\r\n          </Form.Group>\r\n          <Row>\r\n            <Col md={6} className='pr-1'>\r\n            <Form.Label>Min</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"0\"></Form.Control>\r\n            </Col>\r\n            <Col md={6} className='pl-1'>\r\n            <Form.Label>Max</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"1,0000\"></Form.Control>\r\n            </Col>\r\n          </Row>\r\n          <Button className=\"btn btn-block btn-sm mt-3\" variant='outline-dark'>Apply</Button>\r\n          </Card.Body>\r\n        </Card>\r\n       \r\n        </Col>\r\n        <Col md={10}>\r\n        {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\" Children={error} />\r\n      ) : (\r\n        <>\r\n        <h1>Latest Products</h1>\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        </>\r\n      )}\r\n        </Col>\r\n      </Row>\r\n      \r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\productreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\cartreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\productAction.js",["270","271","272"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\cartAction.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\orderActions.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\userreducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ShippingScreen.js",["273","274","275","276","277"],"import React, {useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\nimport { saveShippingAddress} from \"../action/cartAction\";\r\nimport {getUserAddress} from '../action/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Typeahead } from 'react-bootstrap-typeahead'\r\nimport {\r\n  Button,\r\n  Form\r\n} from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\n\r\n  const ShippingScreen = ({history}) => {\r\n    const cart = useSelector(state=>state.cart)\r\n    const {shippingAddress} =cart\r\n    console.log('ttttttttt')\r\n    console.log(shippingAddress)\r\n    console.log('ttttttttt')\r\n    const [addressLine1, setAddressLine1] =useState(shippingAddress.addressLine1)\r\n    const [addressLine2, setAddressLine2] =useState(shippingAddress.addressLine2)\r\n    const [postalCode, setPostalCode] =useState(shippingAddress.postalCode)\r\n    let [city, setCity] = useState(shippingAddress.city?[shippingAddress.city]:[]);\r\n    let [province, setProvince] = useState(shippingAddress.province?[shippingAddress.province]:[]);\r\n    console.log(shippingAddress.province)\r\n    console.log(province)\r\n    const [phone, setPhone] =useState(shippingAddress.phone)\r\n\r\n    const dispatch =useDispatch()\r\n\r\n    const userAddress= useSelector(state=>state.userAddress)\r\n    const {loading, error, address} = userAddress\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    useEffect(()=>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n        else{\r\n            console.log(address)\r\n            if(!address.addressLine1){\r\n                dispatch(getUserAddress('profile'))\r\n            }\r\n            else{\r\n                setAddressLine1(address.addressLine1!==\"\"?address.addressLine1:addressLine1)\r\n                setAddressLine2(address.addressLine2!==\"\"?address.addressLine2:addressLine2)\r\n                setPostalCode(address.zip!==\"\"?address.zip:postalCode)\r\n                setCity(address.city!==\"\"?[address.city]:city)\r\n                setProvince(address.province!==\"\"?[address.province]:province)\r\n                setPhone(address.phone!==\"\"?address.phone:phone)\r\n            }\r\n        }\r\n    },[dispatch, history, userInfo, address])\r\n\r\n    const submitHandler=(e)=>{\r\n        e.preventDefault()\r\n        city=city[0]\r\n        province=province[0]\r\n        dispatch(saveShippingAddress({addressLine1,addressLine2,city,postalCode,province,phone}))\r\n        history.push('/payment')\r\n    }\r\n    const sub=(a)=>{\r\n        console.log(a[0])\r\n        setProvince(a)\r\n    }\r\n    const subCity=(a)=>{\r\n        if(typeof a[0] ==='object'){\r\n            console.log(a[0].label)\r\n            setCity([a[0].label])\r\n        }\r\n        else{\r\n            console.log(a[0])\r\n            setCity(a)\r\n        }\r\n    }\r\n\r\n    const cities=['Negombo', 'Colombo','Gampaha']\r\n    const provinces=['Western','Southern','Central','Uva','Eastern','Sabaragamuwa','North','North Western','North Central']\r\n\r\n  return (\r\n      <FormContainer>\r\n          <CheckoutSteps step1 step2/>\r\n          <h2>Delivery Details</h2>\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='phone'>\r\n                  <Form.Label>Contact Number</Form.Label>\r\n                  <Form.Control type='tel' required placeholder='Contact Number' value={phone} onChange={(e)=>setPhone(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='addressLine1'>\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Address Line1' value={addressLine1} onChange={(e)=>setAddressLine1(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='addressLine2'>\r\n                  <Form.Label>Address</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Address Line2' value={addressLine2} onChange={(e)=>setAddressLine2(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='city'>\r\n                  <Form.Label>City</Form.Label>\r\n                  {/* <Form.Control type='text' required placeholder='Enter City' value={city} onChange={(e)=>setCity(e.target.value)}></Form.Control> */}\r\n                  {/* <Typeahead onChange={setCity} options={cities} placeholder=\"Choose a City...\" selected={city}/> */}\r\n                  <Typeahead allowNew onChange={(selected)=>subCity(selected)} options={cities} selected={city} placeholder=\"Choose a City...\"/>\r\n              </Form.Group>\r\n              <Form.Group controlId='postalCode'>\r\n                  <Form.Label>Postal Code</Form.Label>\r\n                  <Form.Control type='text' required placeholder='Enter Postal Code' value={postalCode} onChange={(e)=>setPostalCode(e.target.value)}></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='province'>\r\n                  <Form.Label>Province</Form.Label>\r\n                  {/* <Form.Control type='text' required placeholder='Enter Country' value={country} onChange={(e)=>setCountry(e.target.value)}></Form.Control> */}\r\n                  <Typeahead onChange={(selected)=>sub(selected)} options={provinces} selected={province} placeholder=\"Choose a province...\"/>\r\n              </Form.Group>\r\n              {/* <Typeahead onChange={setSelected} options={['yu']} placeholder=\"Choose a state...\" selected={selected}/> */}\r\n              \r\n              <Button type='submit' variant='primary'>Continue</Button>\r\n          </Form>\r\n      </FormContainer>\r\n  )\r\n}\r\nexport default ShippingScreen;","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js",["278"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {createOrder} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const PlaceOrderScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state=>state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n    cart.deliveryCost = cart.itemsPrice>100?0:cart.itemsPrice>50?cart.itemsPrice*0.05:10\r\n    cart.taxPrice =Number((0.15*cart.itemsPrice).toFixed(2))\r\n    cart.totalPrice=Number(cart.itemsPrice)+Number(cart.deliveryCost)+Number(cart.taxPrice)\r\n\r\nconst orderCreate = useSelector(state=>state.orderCreate)\r\nconst {order,success,error}=orderCreate\r\n\r\nuseEffect(()=>{\r\n    if(success){\r\n        history.push(`/order/${order._id}`)\r\n    }\r\n},[history,success])\r\n\r\n    const PlaceOrderHandler=()=>{\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            shippingAddress:cart.shippingAddress,\r\n            paymentMethod:cart.paymentMethod,\r\n            itemsPrice:cart.itemsPrice,\r\n            shippingPrice:cart.shippingPrice,\r\n            taxPrice:cart.taxPrice,\r\n            totalPrice:cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <CheckoutSteps step1 step2 step3 step4/>\r\n    <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Address:</strong>\r\n                        {cart.shippingAddress.address},{cart.shippingAddress.city}{' '}\r\n                        {cart.shippingAddress.postalCode},{' '}\r\n                        {cart.shippingAddress.country}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <strong>Method:</strong>\r\n                    {cart.paymentMethod}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {cart.cartItems.length===0?<Message>Your Cart is Empty</Message>:\r\n                    (\r\n                        <ListGroup variant='flush'>\r\n                            {cart.cartItems.map((item,index)=>(\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Row>\r\n                                                <Col className='text-left' md={2}>{item.qty}</Col>\r\n                                                <Col md={1}>x</Col>\r\n                                                <Col className='text-right' md={3}>${item.price}</Col>\r\n                                                <Col md={1}>=</Col>\r\n                                                <Col className='text-right' md={3}>${(item.qty * item.price).toFixed(2)}</Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n                                            <Card>\r\n                                                <ListGroup variant='flush'>\r\n                                                    <ListGroup.Item>\r\n                                                        <h2>Order Summary</h2>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Items</Col>\r\n                                                            <Col>${cart.itemsPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Delivery</Col>\r\n                                                            <Col>${cart.deliveryCost.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Tax</Col>\r\n                                                            <Col>${cart.taxPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Total</Col>\r\n                                                        <Col>${cart.totalPrice.toFixed(2)}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup>\r\n                                                {error && <Message variant='danger'>{error}</Message>}\r\n                                                </ListGroup>\r\n                                                <ListGroup.Item>\r\n                                                    <Button type='button' className='btn-block' disabled={cart.cartItems===0} onClick={PlaceOrderHandler}>Place Order</Button>\r\n                                                </ListGroup.Item>\r\n                                                </ListGroup>\r\n                                            </Card>\r\n                                        </Col>\r\n    </Row>\r\n</>\r\n  )\r\n}\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\userActions.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js",["279","280","281","282","283","284"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  detailsProductAdmin,\r\n  updateProduct\r\n} from '../action/productAction';\r\nimport { listCategories } from '../action/categoryActions';\r\nimport { listSubcategories } from '../action/subcategoryActions';\r\nimport { listSuppliers } from '../action/supplierActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nexport default function ProductEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const [product_name, setProduct_name] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [weight, setWeight] = useState('');\r\n  const [dimension, setDimension] = useState('');\r\n  const [category_name, setCategory_name] = useState('');\r\n  const [subcat_name, setSubcat_name] = useState('');\r\n  const [supplier_name, setSupplier_name] = useState('');\r\n\r\n  const productDetailsAdmin = useSelector((state) => state.productDetailsAdmin);\r\n  const { loading, error, product } = productDetailsAdmin;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  const categoryList = useSelector((state) => state.categoryList);\r\n  const { loading: catloading, error: caterror, categories:categories } = categoryList;\r\n\r\n  const subcategoryList = useSelector((state) => state.subcategoryList);\r\n  const { loading: scatloading, error: scaterror, subcategories } = subcategoryList;\r\n  \r\n  const supplierList = useSelector((state) => state.supplierList);\r\n  const { loading: suploading, error: superror, suppliers } = supplierList;\r\n\r\n  let categoryId = null;\r\n  categories.forEach(c => {\r\n    if (category_name === c.category_name){\r\n      categoryId = c.category_id;\r\n    }\r\n  })\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push('/productlist');\r\n    }\r\n    if (!catloading && !caterror) {\r\n      dispatch(listCategories());\r\n    }\r\n    if (categoryId !== null || !scatloading && !scaterror) {\r\n      dispatch(listSubcategories(categoryId));\r\n    }\r\n    if (!suploading && !superror) {\r\n      dispatch(listSuppliers());\r\n    }\r\n    if (!product || product.product_id!=productId || successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      dispatch(detailsProductAdmin(productId));\r\n    } else {\r\n      setProduct_name(product.product_name);\r\n      setDescription(product.description);\r\n      setWeight(product.weight);\r\n      setDimension(product.dimension);\r\n      setBrand(product.brand);\r\n      setCategory_name(product.category_name);\r\n      setSubcat_name(product.subcat_name);\r\n      setSupplier_name(product.supplier_name);\r\n    }\r\n  }, [product, dispatch, productId, successUpdate, props.history]);\r\n\r\n  useEffect(() => {\r\n    if (categoryId !== null) {\r\n      dispatch(listSubcategories(categoryId));\r\n    }\r\n  }, [categoryId, dispatch]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        product_id: productId,\r\n        product_name,\r\n        description,\r\n        weight,\r\n        dimension,\r\n        brand,\r\n        category_name,\r\n        subcat_name,\r\n        supplier_name,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit Product {productId}</h1>\r\n        </div>\r\n        {loadingUpdate && <Loader></Loader>}\r\n        {/* {catloading && <Loader></Loader>} */}\r\n        {/* {caterror && <Message variant=\"danger\">{caterror}</Message>} */}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"product_name\">Product_name</label>\r\n              <input\r\n                id=\"product_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Product name\"\r\n                value={product_name}\r\n                onChange={(e) => setProduct_name(e.target.value)}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                rows=\"3\"\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></textarea>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"weight\">Weight</label>\r\n              <input\r\n                id=\"weight\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Weight\"\r\n                value={weight}\r\n                onChange={(e) => setWeight(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"dimension\">Dimension</label>\r\n              <input\r\n                id=\"dimension\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Dimension\"\r\n                value={dimension}\r\n                onChange={(e) => setDimension(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input\r\n                id=\"brand\"\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"category_name\">Category</label>\r\n              <select\r\n                id=\"category_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category\"\r\n                value={category_name}\r\n                onChange={(e) => setCategory_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the category</option>\r\n                {categories.map(category => <option key={category.category_id}> {category.category_name} </option> )}\r\n              </select>\r\n            </div>\r\n            {/* <div>\r\n              <label htmlFor=\"category_description\">Category_description</label>\r\n              <input\r\n                id=\"category_description\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category_description\"\r\n                value={category_description}\r\n                onChange={(e) => setCategory_description(e.target.value)}\r\n              ></input>\r\n            </div> */}\r\n            <div>\r\n              <label htmlFor=\"subcat_name\">Subcategory</label>\r\n              <select\r\n                id=\"subcat_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Subcategory_name\"\r\n                value={subcat_name}\r\n                onChange={(e) => setSubcat_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the subcategory</option>\r\n                {subcategories.map(subcategory => <option key={subcategory.subcat_id}> {subcategory.subcat_name} </option> )}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"supplier_name\">Supplier</label>\r\n              <select\r\n                id=\"supplier_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Supplier_name\"\r\n                value={supplier_name}\r\n                onChange={(e) => setSupplier_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the supplier</option>\r\n                {suppliers.map(supplier => <option key={supplier.supplier_id}> {supplier.supplier_name} </option> )}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label></label>\r\n              <button className=\"primary\" type=\"submit\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\Variant.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\OrderScreen.js",["285","286"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {getOrderDetails} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const OrderScreen = ({match}) => {\r\n    const orderId = match.params.id;\r\n    const dispatch = useDispatch()\r\n    \r\n\r\nconst orderDetails = useSelector(state=>state.orderDetails)\r\nconst {order,loading,error}=orderDetails\r\nif(!loading){\r\n    order.itemsPrice = order.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    dispatch(getOrderDetails(orderId))\r\n},[])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p><strong>Name:</strong>{order.user.name}</p>\r\n              <p><strong>Email:</strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address},{order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered?(\r\n                  <Message variant='success'>Delivered</Message>):<Message variant='success'>Not Delivered</Message>}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n              <strong>Method:</strong>\r\n              {order.paymentMethod}\r\n              </p>\r\n              <p>\r\n              <strong>Paid On:</strong>\r\n              {order.paidAt}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          <Row>\r\n                            <Col className=\"text-left\" md={2}>\r\n                              {item.qty}\r\n                            </Col>\r\n                            <Col md={1}>x</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${item.price}\r\n                            </Col>\r\n                            <Col md={1}>=</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${(item.qty * item.price).toFixed(2)}\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Delivery</Col>\r\n                  <Col>${order.deliveryCost.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\nexport default OrderScreen;\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js",["287"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsVariant, updateVariant } from '../action/productAction';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { VARIANT_UPDATE_RESET } from '../constants/variantConstants';\r\n\r\nexport default function VariantEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const variantId = props.match.params.vid;\r\n  const [SKU, setSKU] = useState('');\r\n  const [image_url, setImage_url] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [offer, setOffer] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [no_stock, setNo_stock] = useState('');\r\n  \r\n  const variantDetails = useSelector((state) => state.variantDetails);\r\n  const { loading, error, variant } = variantDetails;\r\n\r\n  const variantUpdate = useSelector((state) => state.variantUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = variantUpdate;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push(`/product/${productId}/variantlist`);\r\n    }\r\n    if (!variant || (variant.variant_id != variantId || successUpdate)) {\r\n      dispatch({ type: VARIANT_UPDATE_RESET });\r\n      dispatch(detailsVariant(productId,variantId));\r\n    } else {\r\n      setSKU(variant.SKU);\r\n      setPrice(variant.price);\r\n      setOffer(variant.offer);\r\n      setColor(variant.color);\r\n      setSize(variant.size);\r\n      setNo_stock(variant.no_stock);\r\n      setImage_url(variant.image_url);\r\n    }\r\n  },[variant, dispatch, productId, variantId, successUpdate, props.history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n        updateVariant(\r\n            {\r\n              variant_id: variantId,\r\n              product_id: productId,\r\n              SKU,\r\n              price,\r\n              offer,\r\n              color,\r\n              size,\r\n              no_stock,\r\n              image_url,\r\n            }\r\n        )\r\n    );\r\n  };\r\n\r\n// const [loadingUpload, setLoadingUpload] = useState(false);\r\n// const [errorUpload, setErrorUpload] = useState('');\r\n// const userSignin = useSelector((state) => state.userSignin);\r\n// const { userInfo } = userSignin;\r\n// const uploadFileHandler = async (e) => {\r\n//   const file = e.target.files[0];\r\n//   const bodyFormData = new FormData();\r\n//   bodyFormData.append('image_url', file);\r\n//   setLoadingUpload(true);\r\n//   try {\r\n//     const { data } = await Axios.post('/api/uploads', bodyFormData);\r\n//     setImage_url(data);\r\n//     setLoadingUpload(false);\r\n//   } catch (error) {\r\n//     setErrorUpload(error.message);\r\n//     setLoadingUpload(false);\r\n//   }\r\n// };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit Product {productId} Variant {variantId} </h1>\r\n        </div>\r\n        {loadingUpdate && <Loader></Loader>}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <label htmlFor=\"SKU\">SKU</label>\r\n            <input\r\n              id=\"SKU\"\r\n              type=\"text\"\r\n              placeholder=\"Enter SKU\"\r\n              value={SKU}\r\n              onChange={(e) => setSKU(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"image_url\">image_url</label>\r\n            <input\r\n              id=\"image_url\"\r\n              type=\"text\"\r\n              placeholder=\"Enter image_url\"\r\n              value={image_url}\r\n              onChange={(e) => setImage_url(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          {/* <div>\r\n            <label htmlFor=\"product_imageFile\">product_image File</label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"product_imageFile\"\r\n              label=\"Choose product_image\"\r\n              onChange={uploadFileHandler}\r\n            ></input>\r\n            {loadingUpload && <Loader></Loader>}\r\n            {errorUpload && (\r\n              <Message variant=\"danger\">{errorUpload}</Message>\r\n            )}\r\n          </div> */}\r\n          <div>\r\n            <label htmlFor=\"price\">Price</label>\r\n            <input\r\n              id=\"price\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Price\"\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"offer\">Offer</label>\r\n            <input\r\n              id=\"offer\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Offer\"\r\n              value={offer}\r\n              onChange={(e) => setOffer(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"color\">Color</label>\r\n            <input\r\n              id=\"color\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Color\"\r\n              value={color}\r\n              onChange={(e) => setColor(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"size\">Size</label>\r\n            <input\r\n              id=\"size\"\r\n              type=\"text\"\r\n              placeholder=\"Enter Size\"\r\n              value={size}\r\n              onChange={(e) => setSize(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"no_stock\">Count In Stock</label>\r\n            <input\r\n              id=\"no_stock\"\r\n              type=\"text\"\r\n              placeholder=\"Enter no_stock\"\r\n              value={no_stock}\r\n              onChange={(e) => setNo_stock(e.target.value)}\r\n            ></input>\r\n          </div>\r\n\r\n          <div>\r\n            <label></label>\r\n            <button className=\"primary\" type=\"submit\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantListScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\categoryReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\categoryConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\categoryActions.js",["288"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\supplierReducers.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\supplierConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\variantConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\supplierActions.js",["289"],"import axios from \"axios\";\r\nimport {\r\n  SUPPLIER_LIST_REQUEST,\r\n  SUPPLIER_LIST_SUCCESS,\r\n  SUPPLIER_LIST_FAIL,\r\n  SUPPLIER_DETAILS_REQUEST,\r\n  SUPPLIER_DETAILS_SUCCESS,\r\n  SUPPLIER_DETAILS_FAIL,\r\n  SUPPLIER_CREATE_FAIL,\r\n  SUPPLIER_CREATE_REQUEST,\r\n  SUPPLIER_CREATE_SUCCESS,\r\n  SUPPLIER_UPDATE_REQUEST,\r\n  SUPPLIER_UPDATE_SUCCESS,\r\n  SUPPLIER_UPDATE_FAIL,\r\n  SUPPLIER_DELETE_REQUEST,\r\n  SUPPLIER_DELETE_FAIL,\r\n  SUPPLIER_DELETE_SUCCESS,\r\n} from '../constants/supplierConstants';\r\n\r\n\r\nexport const listSuppliers = () => async (dispatch) => {\r\n    dispatch({ type: SUPPLIER_LIST_REQUEST });\r\n    try {\r\n\r\n      const { data } = await axios.get(`/api/suppliers/`);\r\n\r\n      dispatch({\r\n      type: SUPPLIER_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: SUPPLIER_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n    }\r\n};\r\n  \r\nexport const detailsSupplier = (supplierId) => async (dispatch) => {\r\n  dispatch({ type: SUPPLIER_DETAILS_REQUEST, payload: supplierId });\r\n  try {\r\n    dispatch({ type: SUPPLIER_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/suppliers/${supplierId}`)\r\n\r\n    dispatch({ type: SUPPLIER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: SUPPLIER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createSupplier = () => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_CREATE_REQUEST });\r\n  try {\r\n\r\n    const newsupplier = {\r\n        supplier_name: \"samplesupplier\",\r\n        contact_number: null,\r\n        email: null,\r\n    };\r\n    const { data } = await axios.post('/api/suppliers/',newsupplier);\r\n\r\n\r\n    dispatch({\r\n      type: SUPPLIER_CREATE_SUCCESS,\r\n      payload: data.supplier,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateSupplier = (supplier) => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_UPDATE_REQUEST, payload: supplier });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/suppliers/${supplier.supplier_id}`, supplier);\r\n\r\n    dispatch({ type: SUPPLIER_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteSupplier = (supplierId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUPPLIER_DELETE_REQUEST, payload: supplierId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/suppliers/${supplierId}`);\r\n\r\n    dispatch({ type: SUPPLIER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUPPLIER_DELETE_FAIL, payload: message });\r\n  }\r\n};","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\subcategoryActions.js",["290"],"import axios from \"axios\";\r\nimport {\r\n  SUBCATEGORY_LIST_REQUEST,\r\n  SUBCATEGORY_LIST_SUCCESS,\r\n  SUBCATEGORY_LIST_FAIL,\r\n  SUBCATEGORY_DETAILS_REQUEST,\r\n  SUBCATEGORY_DETAILS_SUCCESS,\r\n  SUBCATEGORY_DETAILS_FAIL,\r\n  SUBCATEGORY_CREATE_FAIL,\r\n  SUBCATEGORY_CREATE_REQUEST,\r\n  SUBCATEGORY_CREATE_SUCCESS,\r\n  SUBCATEGORY_UPDATE_REQUEST,\r\n  SUBCATEGORY_UPDATE_SUCCESS,\r\n  SUBCATEGORY_UPDATE_FAIL,\r\n  SUBCATEGORY_DELETE_REQUEST,\r\n  SUBCATEGORY_DELETE_FAIL,\r\n  SUBCATEGORY_DELETE_SUCCESS,\r\n} from '../constants/subcategoryConstants';\r\n\r\n\r\nexport const listSubcategories = (categoryId) => async (dispatch) =>{\r\n    dispatch({ type: SUBCATEGORY_LIST_REQUEST });\r\n    try {\r\n      // const { data } = await axios.get(\"/api/categories/${categoryId}/subcategorylist\");\r\n      const { data } = await axios.get(`/api/categories/${categoryId}/subcategories`);\r\n\r\n      dispatch({\r\n      type: SUBCATEGORY_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n        console.log(error);\r\n        dispatch({\r\n        type: SUBCATEGORY_LIST_FAIL,\r\n        payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n        });\r\n    }\r\n  }\r\n  \r\nexport const detailsSubcategory = (categoryId,subcategoryId) => async (dispatch) => {\r\n  dispatch({ type: SUBCATEGORY_DETAILS_REQUEST, payload: (categoryId,subcategoryId) });\r\n  try {\r\n    dispatch({ type: SUBCATEGORY_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/categories/${categoryId}/subcategories/${subcategoryId}`)\r\n\r\n    dispatch({ type: SUBCATEGORY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: SUBCATEGORY_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createSubcategory = (categoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_CREATE_REQUEST });\r\n  try {\r\n\r\n    const newsubcategory = {\r\n        subcat_name: \"samplesubcategory\",\r\n        category_id: categoryId,\r\n    };\r\n    const { data } = await axios.post(`/api/categories/${categoryId}/subcategories/`,newsubcategory);\r\n\r\n\r\n    dispatch({\r\n      type: SUBCATEGORY_CREATE_SUCCESS,\r\n      payload: data.subcategory,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateSubcategory = (categoryId,subcategory) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_UPDATE_REQUEST, payload: subcategory });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/categories/${categoryId}/subcategories/${subcategory.subcategory_id}`, subcategory);\r\n\r\n    dispatch({ type: SUBCATEGORY_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteSubcategory = (categoryId,subcategoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: SUBCATEGORY_DELETE_REQUEST, payload: (categoryId,subcategoryId) });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/categories/${categoryId}/subcategories/${subcategoryId}`);\r\n\r\n    dispatch({ type: SUBCATEGORY_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: SUBCATEGORY_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ProductCreateScreen.js",["291"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report2Screen.js",["292"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report3Screen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report4Screen.js",["293","294","295","296","297","298","299","300"],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report5Screen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\Report1Screen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\VariantCreateScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\ReportScreen.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\screens\\SigninAdminScreen.js",["301","302"],"import React, {useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport {\r\nForm,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport { signin } from \"../action/adminActions\";\r\n\r\n\r\nexport default function SigninAdminScreen(props) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    \r\n    const adminSignin = useSelector(state =>state.adminSignin);\r\n    const {adminInfo, loading, error} =adminSignin;\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(()=>{\r\n        if(adminInfo){\r\n            props.history.push(`/orderlist`);\r\n        }\r\n    },[adminInfo, props.history])\r\n    \r\n    const submitHandler =(e)=>{\r\n        e.preventDefault();\r\n        dispatch(signin(email,password));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <FormContainer>\r\n            <h1>Admin Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='email Address' value={email} onChange={(event)=>setEmail(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='password' value={password} onChange={(event)=>setPassword(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n        </FormContainer>\r\n        </>\r\n    )\r\n}","C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\reducers\\adminReducer.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\constants\\adminConstants.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\action\\adminActions.js",[],"C:\\Users\\Danuka\\Documents\\dbproject\\frontend\\src\\components\\AdminRoute.js",[],{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","replacedBy":"306"},{"ruleId":"307","severity":1,"message":"308","line":3,"column":20,"nodeType":"309","messageId":"310","endLine":3,"endColumn":31},{"ruleId":"307","severity":1,"message":"311","line":3,"column":44,"nodeType":"309","messageId":"310","endLine":3,"endColumn":47},{"ruleId":"307","severity":1,"message":"312","line":3,"column":55,"nodeType":"309","messageId":"310","endLine":3,"endColumn":64},{"ruleId":"307","severity":1,"message":"313","line":3,"column":66,"nodeType":"309","messageId":"310","endLine":3,"endColumn":77},{"ruleId":"307","severity":1,"message":"314","line":9,"column":3,"nodeType":"309","messageId":"310","endLine":9,"endColumn":27},{"ruleId":"307","severity":1,"message":"315","line":241,"column":13,"nodeType":"309","messageId":"310","endLine":241,"endColumn":17},{"ruleId":"307","severity":1,"message":"315","line":349,"column":13,"nodeType":"309","messageId":"310","endLine":349,"endColumn":17},{"ruleId":"307","severity":1,"message":"316","line":6,"column":8,"nodeType":"309","messageId":"310","endLine":6,"endColumn":15},{"ruleId":"307","severity":1,"message":"317","line":7,"column":8,"nodeType":"309","messageId":"310","endLine":7,"endColumn":14},{"ruleId":"307","severity":1,"message":"318","line":34,"column":12,"nodeType":"309","messageId":"310","endLine":34,"endColumn":19},{"ruleId":"307","severity":1,"message":"319","line":34,"column":21,"nodeType":"309","messageId":"310","endLine":34,"endColumn":26},{"ruleId":"320","severity":1,"message":"321","line":57,"column":7,"nodeType":"322","endLine":57,"endColumn":45,"suggestions":"323"},{"ruleId":"320","severity":1,"message":"324","line":35,"column":3,"nodeType":"322","endLine":35,"endColumn":20,"suggestions":"325"},{"ruleId":"307","severity":1,"message":"326","line":3,"column":8,"nodeType":"309","messageId":"310","endLine":3,"endColumn":13},{"ruleId":"327","severity":1,"message":"328","line":37,"column":49,"nodeType":"329","messageId":"330","endLine":37,"endColumn":70,"fix":"331"},{"ruleId":"332","severity":1,"message":"333","line":60,"column":29,"nodeType":"334","messageId":"335","endLine":60,"endColumn":31},{"ruleId":"332","severity":1,"message":"333","line":60,"column":45,"nodeType":"334","messageId":"335","endLine":60,"endColumn":47},{"ruleId":"336","severity":1,"message":"337","line":66,"column":39,"nodeType":"338","messageId":"339","endLine":66,"endColumn":41},{"ruleId":"320","severity":1,"message":"340","line":79,"column":6,"nodeType":"322","endLine":79,"endColumn":66,"suggestions":"341"},{"ruleId":"307","severity":1,"message":"342","line":13,"column":3,"nodeType":"309","messageId":"310","endLine":13,"endColumn":9},{"ruleId":"320","severity":1,"message":"343","line":32,"column":3,"nodeType":"322","endLine":32,"endColumn":5,"suggestions":"344"},{"ruleId":"336","severity":1,"message":"337","line":34,"column":41,"nodeType":"338","messageId":"339","endLine":34,"endColumn":43},{"ruleId":"307","severity":1,"message":"315","line":107,"column":13,"nodeType":"309","messageId":"310","endLine":107,"endColumn":17},{"ruleId":"307","severity":1,"message":"315","line":114,"column":13,"nodeType":"309","messageId":"310","endLine":114,"endColumn":17},{"ruleId":"307","severity":1,"message":"315","line":113,"column":13,"nodeType":"309","messageId":"310","endLine":113,"endColumn":17},{"ruleId":"320","severity":1,"message":"340","line":73,"column":6,"nodeType":"322","endLine":73,"endColumn":46,"suggestions":"345"},{"ruleId":"307","severity":1,"message":"346","line":2,"column":17,"nodeType":"309","messageId":"310","endLine":2,"endColumn":26},{"ruleId":"307","severity":1,"message":"326","line":3,"column":8,"nodeType":"309","messageId":"310","endLine":3,"endColumn":13},{"ruleId":"307","severity":1,"message":"347","line":11,"column":12,"nodeType":"309","messageId":"310","endLine":11,"endColumn":22},{"ruleId":"307","severity":1,"message":"348","line":11,"column":24,"nodeType":"309","messageId":"310","endLine":11,"endColumn":37},{"ruleId":"307","severity":1,"message":"349","line":12,"column":12,"nodeType":"309","messageId":"310","endLine":12,"endColumn":21},{"ruleId":"307","severity":1,"message":"350","line":13,"column":12,"nodeType":"309","messageId":"310","endLine":13,"endColumn":29},{"ruleId":"307","severity":1,"message":"351","line":13,"column":31,"nodeType":"309","messageId":"310","endLine":13,"endColumn":51},{"ruleId":"307","severity":1,"message":"352","line":22,"column":13,"nodeType":"309","messageId":"310","endLine":22,"endColumn":22},{"ruleId":"320","severity":1,"message":"353","line":30,"column":7,"nodeType":"322","endLine":30,"endColumn":9,"suggestions":"354"},{"ruleId":"307","severity":1,"message":"355","line":8,"column":3,"nodeType":"309","messageId":"310","endLine":8,"endColumn":6},{"ruleId":"307","severity":1,"message":"356","line":9,"column":3,"nodeType":"309","messageId":"310","endLine":9,"endColumn":6},"no-native-reassign",["357"],"no-negated-in-lhs",["358"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'ListGroup' is defined but never used.","'SplitButton' is defined but never used.","'PRODUCT_DETAILS_REQUEST1' is defined but never used.","'data' is assigned a value but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addressLine1', 'addressLine2', 'city', 'phone', 'postalCode', and 'province'. Either include them or remove the dependency array. You can also do a functional update 'setAddressLine1(a => ...)' if you only need 'addressLine1' in the 'setAddressLine1' call.","ArrayExpression",["359"],"React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["360"],"'axios' is defined but never used.","no-useless-rename","Destructuring assignment categories unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"361","text":"362"},"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'categoryId', 'caterror', 'catloading', 'scaterror', 'scatloading', 'superror', and 'suploading'. Either include them or remove the dependency array.",["363"],"'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'orderId'. Either include them or remove the dependency array.",["364"],["365"],"'useEffect' is defined but never used.","'timeperiod' is assigned a value but never used.","'setTimeperiod' is assigned a value but never used.","'submitted' is assigned a value but never used.","'producttimereport' is assigned a value but never used.","'setProducttimereport' is assigned a value but never used.","'productId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["366"],"'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},[1545,1566],"categories",{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},"Update the dependencies array to be: [dispatch, history, userInfo, address, addressLine1, addressLine2, postalCode, city, province, phone]",{"range":"379","text":"380"},"Update the dependencies array to be: [history, order._id, success]",{"range":"381","text":"382"},"Update the dependencies array to be: [product, dispatch, productId, successUpdate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",{"range":"383","text":"384"},"Update the dependencies array to be: [dispatch, orderId]",{"range":"385","text":"386"},"Update the dependencies array to be: [dispatch, successCreate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",{"range":"387","text":"388"},"Update the dependencies array to be: [dispatch]",{"range":"389","text":"390"},[2342,2380],"[dispatch, history, userInfo, address, addressLine1, addressLine2, postalCode, city, province, phone]",[1111,1128],"[history, order._id, success]",[2986,3046],"[product, dispatch, productId, successUpdate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",[835,837],"[dispatch, orderId]",[2811,2851],"[dispatch, successCreate, props.history, catloading, caterror, categoryId, scatloading, scaterror, suploading, superror]",[1101,1103],"[dispatch]"]