[{"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\index.js":"1","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\store.js":"2","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\App.js":"3","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reportWebVitals.js":"4","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\orderReducers.js":"5","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\cartreducers.js":"6","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\userreducers.js":"7","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\supplierReducers.js":"8","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\categoryReducers.js":"9","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js":"10","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\productreducers.js":"11","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Footer.js":"12","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProductScreen.js":"13","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\LoginScreen.js":"14","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\HomeScreen.js":"15","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\CartScreen.js":"16","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\RegisterScreen.js":"17","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\OrderScreen.js":"18","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Header.js":"19","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\PaymentScreen.js":"20","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\OrderListScreen.js":"21","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ShippingScreen.js":"22","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\DashBoardScreen.js":"23","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js":"24","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js":"25","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js":"26","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProductListScreen.js":"27","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\VariantListScreen.js":"28","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProfileScreen.js":"29","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Loader.js":"30","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Message.js":"31","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Rating.js":"32","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\FormContainer.js":"33","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Product.js":"34","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Variant.js":"35","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\CheckoutSteps.js":"36","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\supplierConstants.js":"37","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\categoryConstants.js":"38","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\userConstants.js":"39","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\cartConstants.js":"40","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js":"41","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\variantConstants.js":"42","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\cartAction.js":"43","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\productAction.js":"44","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\categoryActions.js":"45","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\productConstants.js":"46","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\userActions.js":"47","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\orderConstants.js":"48","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\orderActions.js":"49"},{"size":612,"mtime":1613232055980,"results":"50","hashOfConfig":"51"},{"size":3774,"mtime":1614590014338,"results":"52","hashOfConfig":"51"},{"size":2874,"mtime":1614590014338,"results":"53","hashOfConfig":"51"},{"size":375,"mtime":1613232055981,"results":"54","hashOfConfig":"51"},{"size":3555,"mtime":1614227886266,"results":"55","hashOfConfig":"51"},{"size":1289,"mtime":1613581624613,"results":"56","hashOfConfig":"51"},{"size":2064,"mtime":1614227886267,"results":"57","hashOfConfig":"51"},{"size":2837,"mtime":1614590014338,"results":"58","hashOfConfig":"51"},{"size":2840,"mtime":1614590014338,"results":"59","hashOfConfig":"51"},{"size":2983,"mtime":1614590014338,"results":"60","hashOfConfig":"51"},{"size":7179,"mtime":1614601453746,"results":"61","hashOfConfig":"51"},{"size":336,"mtime":1613835498591,"results":"62","hashOfConfig":"51"},{"size":4340,"mtime":1614531672711,"results":"63","hashOfConfig":"51"},{"size":2497,"mtime":1613581624640,"results":"64","hashOfConfig":"51"},{"size":3968,"mtime":1614606696836,"results":"65","hashOfConfig":"51"},{"size":3602,"mtime":1614531672711,"results":"66","hashOfConfig":"51"},{"size":6966,"mtime":1614531672711,"results":"67","hashOfConfig":"51"},{"size":5026,"mtime":1614227886308,"results":"68","hashOfConfig":"51"},{"size":3240,"mtime":1614590014338,"results":"69","hashOfConfig":"51"},{"size":1622,"mtime":1613581624643,"results":"70","hashOfConfig":"51"},{"size":3452,"mtime":1614269436058,"results":"71","hashOfConfig":"51"},{"size":2399,"mtime":1613581624644,"results":"72","hashOfConfig":"51"},{"size":161,"mtime":1614269436058,"results":"73","hashOfConfig":"51"},{"size":6931,"mtime":1614227886308,"results":"74","hashOfConfig":"51"},{"size":14556,"mtime":1614590014338,"results":"75","hashOfConfig":"51"},{"size":8002,"mtime":1614590014338,"results":"76","hashOfConfig":"51"},{"size":4231,"mtime":1614601453746,"results":"77","hashOfConfig":"51"},{"size":3832,"mtime":1614590014338,"results":"78","hashOfConfig":"51"},{"size":3603,"mtime":1614227886309,"results":"79","hashOfConfig":"51"},{"size":341,"mtime":1613581624605,"results":"80","hashOfConfig":"51"},{"size":281,"mtime":1613581624605,"results":"81","hashOfConfig":"51"},{"size":1342,"mtime":1614531672695,"results":"82","hashOfConfig":"51"},{"size":389,"mtime":1613581624563,"results":"83","hashOfConfig":"51"},{"size":987,"mtime":1614531672695,"results":"84","hashOfConfig":"51"},{"size":1476,"mtime":1614227886253,"results":"85","hashOfConfig":"51"},{"size":1421,"mtime":1613581624563,"results":"86","hashOfConfig":"51"},{"size":1158,"mtime":1614590014338,"results":"87","hashOfConfig":"51"},{"size":1160,"mtime":1614590014338,"results":"88","hashOfConfig":"51"},{"size":849,"mtime":1614227886254,"results":"89","hashOfConfig":"51"},{"size":279,"mtime":1613581624605,"results":"90","hashOfConfig":"51"},{"size":1266,"mtime":1614590014338,"results":"91","hashOfConfig":"51"},{"size":1124,"mtime":1614601453746,"results":"92","hashOfConfig":"51"},{"size":1322,"mtime":1614227886217,"results":"93","hashOfConfig":"51"},{"size":10860,"mtime":1614601453746,"results":"94","hashOfConfig":"51"},{"size":4273,"mtime":1614601453746,"results":"95","hashOfConfig":"51"},{"size":1324,"mtime":1614601453746,"results":"96","hashOfConfig":"51"},{"size":3834,"mtime":1614531672695,"results":"97","hashOfConfig":"51"},{"size":1475,"mtime":1613412534826,"results":"98","hashOfConfig":"51"},{"size":7339,"mtime":1614269436011,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"aaukxb",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"159","usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"102"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\index.js",[],["210","211"],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\store.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\App.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reportWebVitals.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\cartreducers.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\userreducers.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\supplierReducers.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\categoryReducers.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\subcategoryReducers.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\reducers\\productreducers.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Footer.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProductScreen.js",["212","213","214"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Rating from \"../components/Rating\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport Variant from \"../components/Variant\";\r\nimport { detailsProduct, detailsProductVariant } from \"../action/productAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\n\r\n  const ProductScreen = ({history, match }) => {\r\n    const [qty, setQty]=useState(1)\r\n    const dispatch = useDispatch();\r\n    const productDetails=useSelector(state=>state.productDetails)\r\n    const {loading, error, product, variant} =productDetails\r\n    useEffect(() => {\r\n      dispatch(detailsProduct(match.params.id))\r\n    }, [dispatch, match]);\r\n\r\n    const addToCartHandler =()=>{\r\n      history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n    const change=(event,data)=>{\r\n      const y={...product.vary}\r\n      y[data]=event.target.value\r\n      dispatch(detailsProductVariant(2,y))\r\n    }\r\n    const varinatKeys=Object.keys(product.variants?product.variants:{})\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-dark my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading?<Loader/>:error?<Message variant='danger' Children={error}>{error}</Message>:(\r\n      <Row>\r\n        <Col md={6}>\r\n          <Image src={product.image} alt={product.name} fluid />\r\n        </Col>\r\n        <Col md={3}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h3>{product.product_name}</h3>\r\n            </ListGroup.Item>\r\n            {/* <ListGroup.Item>\r\n              <Variant type=\"radio\" vari={varinatKeys[0]} value={product.vary[varinatKeys[0]]} arr={product.variants && product.variants[varinatKeys[0]]?product.variants.size:[]} Change={change}/>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n            <Variant type=\"dropdown\" vari={varinatKeys[1]} value={product.vary[varinatKeys[1]]} arr={product.variants && product.variants[varinatKeys[1]]?product.variants.color:[]} Change={change}/>\r\n            </ListGroup.Item> */}\r\n            <ListGroup.Item>\r\n              <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} reviews`}\r\n              />\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>Price: LKR {variant.price}</ListGroup.Item>\r\n            <ListGroup.Item>\r\n              Description:{product.description}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Price:</Col>\r\n                  <Col>\r\n                    <strong>LKR {variant.price}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Status:</Col>\r\n                  <Col>\r\n                    {variant.noStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {variant.noStock>0 && (\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>\r\n                    <Form.Control as='select' value={qty} onChange={(e)=>\r\n                    setQty(e.target.value)}>\r\n                      {\r\n                      [...Array(variant.noStock).keys()].map((x)=>(\r\n                        <option key={x+1} value={x+1}>{x+1}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              )}\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  onClick={addToCartHandler}\r\n                  className=\"btn-block btn-dark\"\r\n                  type=\"button\"\r\n                  disabled={variant.noStock === 0}>\r\n                  Add To Cart\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\HomeScreen.js",["215","216","217","218"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, NavDropdown , Dropdown, Nav, Card, ListGroup, SplitButton, ButtonGroup, Button, Form} from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport { listProductsCat, listProducts } from \"../action/productAction\";\r\n\r\nconst HomeScreen = ({match}) => {\r\n  const dispatch = useDispatch();\r\n  const cat = match.params.cat ? match.params.cat:\"\"\r\n  const productList=useSelector(state=>state.productList)\r\n  const {loading, error, products} =productList\r\n  const cats={consumer_electronics:['laptop','smart phone','dongal'],  kitchen_appliances:[\"rice cooker\",\"oven\", \"electric kettle\", \"heater\"],\r\n   camera:[\"DSLR\",\"Mirrorless\"], phone:[\"samsung\",\"apple\",\"nokia\"], laptop:['asus','dell','toshiba','hp','lenovo'], USB:['kingston','imation'],furniture:['chair,table'],\r\n  books:[],headphone:[],tablets:[]}\r\n  useEffect(() => {\r\n    if(cat){\r\n      dispatch(listProductsCat(cat))\r\n    }\r\n    else{\r\n      console.log('lklk')\r\n      dispatch(listProducts())\r\n    }\r\n  }, [dispatch,cat])\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={2}>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Card.Title><h6><strong>Product Catagaries</strong></h6></Card.Title>\r\n          {Object.keys(cats).map((cat) => (\r\n            <Dropdown as={ButtonGroup} className=\"btn btn-sm p-0\" style={{width:\"100%\"}} block>\r\n              <LinkContainer to={`/products/${cat}`} className=\"p-1\" style={{width:\"85%\"}}>\r\n              <Button className=\"btn btn-sm\" style={{width:\"100%\"}} variant=\"outline-dark\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{cat.replace('_',\" \")}</p></Button>\r\n            </LinkContainer>\r\n              <Dropdown.Toggle split className=\"btn btn-sm\" id=\"dropdown-split-basic\" variant=\"outline-dark\"/>\r\n              <Dropdown.Menu>\r\n            {cats[cat].map((c)=>(\r\n              <LinkContainer to={`/products/${cat}-${c}`} className=\"p-1\" style={{width:\"100%\"}}>\r\n                <Dropdown.Item className=\"btn btn-outline-dark btn-sm\"><p className='p-0, m-0' style={{whiteSpace: 'nowrap', overflow: 'hidden', textTransform: 'capitalize'}}>{c.replace('_',\" \")}</p></Dropdown.Item>\r\n              </LinkContainer>\r\n            ))}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          ))}\r\n          </Card.Body>\r\n        </Card>\r\n        <Card>\r\n          <Card.Body className=\"pt-3 pb-1 px-1\">\r\n          <Form.Group controlId=\"formBasicRange\">\r\n            <Form.Label>Price Range</Form.Label><Form.Control type=\"range\" min={0} max={100}/>\r\n          </Form.Group>\r\n          <Row>\r\n            <Col md={6} className='pr-1'>\r\n            <Form.Label>Min</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"0\"></Form.Control>\r\n            </Col>\r\n            <Col md={6} className='pl-1'>\r\n            <Form.Label>Max</Form.Label>\r\n              <Form.Control size=\"sm\" type=\"number\" placeholder=\"1,0000\"></Form.Control>\r\n            </Col>\r\n          </Row>\r\n          <Button className=\"btn btn-block btn-sm mt-3\" variant='outline-dark'>Apply</Button>\r\n          </Card.Body>\r\n        </Card>\r\n       \r\n        </Col>\r\n        <Col md={10}>\r\n        {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\" Children={error} />\r\n      ) : (\r\n        <>\r\n        <h1>Latest Products</h1>\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        </>\r\n      )}\r\n        </Col>\r\n      </Row>\r\n      \r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\CartScreen.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\RegisterScreen.js",["219"],"import React, {useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport {register} from \"../action/userActions\";\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport {\r\n    Dropdown,\r\nForm,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"react-bootstrap\";\r\n\r\nconst RegisterScreen = ({location,history}) => {\r\n    const [first_name, setFirstName] = useState('')\r\n    const [last_name, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [province, setProvince] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [addressLine1, setAddressLine1] = useState('')\r\n    const [addressLine2, setAddressLine2] = useState('')\r\n    const [zip, setZip] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmpassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state=>state.userRegister)\r\n    const {loading, error, userInfo} = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1]:'/'\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n    const submitHandler =(event)=>{\r\n        event.preventDefault()\r\n        if(password!==confirmpassword){\r\n            setMessage('Password do not match')\r\n        }\r\n        else{\r\n            dispatch(register(email,password,first_name, last_name, zip, addressLine1, addressLine2, city, province, phone))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Row>\r\n                    <Col className='pr-1'>\r\n                        <Form.Group controlId='first_name'>\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type='first_name' placeholder='First Name' value={first_name} onChange={(event)=>setFirstName(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1'>\r\n                        <Form.Group controlId='last_name'>\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type='last_name' placeholder='Last Name' value={last_name} onChange={(event)=>setLastName(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='email Address' value={email} onChange={(event)=>setEmail(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Row>\r\n                    <Col className='pr-1' md={4}>\r\n                        <Form.Group controlId='phone'>\r\n                        <Form.Label>Contact Number</Form.Label>\r\n                        <Form.Control type='tel' placeholder='Phone Number' value={phone} onChange={(event)=>setPhone(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1' md={8}>\r\n                        <Form.Group controlId='addressLine1'>\r\n                        <Form.Label>Address Line 1</Form.Label>\r\n                        <Form.Control type='text' placeholder='Address Line 1' value={addressLine1} onChange={(event)=>setAddressLine1(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className='pr-1' md={8}>\r\n                    <Form.Group controlId='addressLine2'>\r\n                        <Form.Label>Address Line 2</Form.Label>\r\n                        <Form.Control type='text' placeholder='Address Line 2' value={addressLine2} onChange={(event)=>setAddressLine2(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1' md={4}>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className='pr-1' md={5}>\r\n                        <Form.Group controlId='province'>\r\n                        <Form.Label>Province</Form.Label>\r\n                        <Form.Control type='text' placeholder='Province' value={province} onChange={(event)=>setProvince(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='px-1' md={4}>\r\n                        <Form.Group controlId='city'>\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control type='text' placeholder='City' value={city} onChange={(event)=>setCity(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col className='pl-1' md={3}>\r\n                        <Form.Group controlId='zip'>\r\n                        <Form.Label>Zip Code</Form.Label>\r\n                        <Form.Control type='text' placeholder='Zip' value={zip} onChange={(event)=>setZip(event.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                    </Col>\r\n                </Row>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='password' value={password} onChange={(event)=>setPassword(event.target.value)} required></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='confirm password' value={confirmpassword} onChange={(event)=>setConfirmPassword(event.target.value)}></Form.Control>\r\n                </Form.Group>\r\n               \r\n                <Button type='submit' variant='primary' block>Register</Button>\r\n                </Form>\r\n                <Row className='py-3 text-right'>\r\n                    <Col>\r\n                    Have an Account?\r\n                    <Link to={redirect ? `/login?redirect=${redirect}`:'/login'} >Login</Link>\r\n                    </Col>\r\n                </Row>\r\n        </FormContainer>\r\n        </>\r\n    )\r\n}\r\nexport default RegisterScreen\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\OrderScreen.js",["220","221"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {getOrderDetails} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const OrderScreen = ({match}) => {\r\n    const orderId = match.params.id;\r\n    const dispatch = useDispatch()\r\n    \r\n\r\nconst orderDetails = useSelector(state=>state.orderDetails)\r\nconst {order,loading,error}=orderDetails\r\nif(!loading){\r\n    order.itemsPrice = order.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n    dispatch(getOrderDetails(orderId))\r\n},[])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p><strong>Name:</strong>{order.user.name}</p>\r\n              <p><strong>Email:</strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address},{order.shippingAddress.city}{\" \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered?(\r\n                  <Message variant='success'>Delivered</Message>):<Message variant='success'>Not Delivered</Message>}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n              <strong>Method:</strong>\r\n              {order.paymentMethod}\r\n              </p>\r\n              <p>\r\n              <strong>Paid On:</strong>\r\n              {order.paidAt}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is Empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          <Row>\r\n                            <Col className=\"text-left\" md={2}>\r\n                              {item.qty}\r\n                            </Col>\r\n                            <Col md={1}>x</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${item.price}\r\n                            </Col>\r\n                            <Col md={1}>=</Col>\r\n                            <Col className=\"text-right\" md={3}>\r\n                              ${(item.qty * item.price).toFixed(2)}\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Delivery</Col>\r\n                  <Col>${order.deliveryCost.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice.toFixed(2)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\nexport default OrderScreen;\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Header.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\OrderListScreen.js",["222","223","224"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteOrder, deliverOrder, listOrders } from '../action/orderActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { ORDER_DELETE_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\nexport default function OrderListScreen(props) {\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n  const orderDelete = useSelector((state) => state.orderDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = orderDelete;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({ type: ORDER_DELETE_RESET });\r\n    dispatch(listOrders());\r\n  }, [dispatch, successDelete]);\r\n  const deleteHandler = (order) => {\r\n    if (window.confirm('Are you sure to delete?')) {\r\n      dispatch(deleteOrder(order._id));\r\n    }\r\n  };\r\n\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const {\r\n    loading: loadingDeliver,\r\n    error: errorDeliver,\r\n    success: successDeliver,\r\n  } = orderDeliver;\r\n  useEffect(() => {\r\n    dispatch({ type: ORDER_DELIVER_RESET });\r\n    dispatch(listOrders());\r\n  }, [dispatch, successDeliver]);\r\n  const deliverHandler = (order) => {\r\n    if (window.confirm('Are you sure to deliver?')) {\r\n      dispatch(deliverOrder(order._id));\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <h1>Orders</h1>\r\n      {loadingDelete && <Loader></Loader>}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERY STATUS</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.order_id}>\r\n                <td>{order.order_id}</td>\r\n                <td>{order.user}</td>\r\n                <td>{}</td>\r\n                <td>{order.total_payment}</td>\r\n                <td>{}</td>\r\n                <td>{order.delivery_status}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() => {\r\n                      props.history.push(`/order/${order._id}`);\r\n                    }}\r\n                  >\r\n                    Details\r\n                  </button>\r\n                  {/* <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deleteHandler(order)}\r\n                    >\r\n                      Delete\r\n                    </button> */}\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"small\"\r\n                      onClick={() => deliverHandler(order)}\r\n                    >\r\n                      Deliver\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\DashBoardScreen.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\PlaceOrderScreen.js",["225"],"import React, {useEffect} from \"react\";\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {createOrder} from '../action/orderActions'\r\n// import { saveShippingAddress} from \"../action/cartAction\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n  const PlaceOrderScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state=>state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc,item)=>acc +item.price*item.qty,0)\r\n    cart.deliveryCost = cart.itemsPrice>100?0:cart.itemsPrice>50?cart.itemsPrice*0.05:10\r\n    cart.taxPrice =Number((0.15*cart.itemsPrice).toFixed(2))\r\n    cart.totalPrice=Number(cart.itemsPrice)+Number(cart.deliveryCost)+Number(cart.taxPrice)\r\n\r\nconst orderCreate = useSelector(state=>state.orderCreate)\r\nconst {order,success,error}=orderCreate\r\n\r\nuseEffect(()=>{\r\n    if(success){\r\n        history.push(`/order/${order._id}`)\r\n    }\r\n},[history,success])\r\n\r\n    const PlaceOrderHandler=()=>{\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            shippingAddress:cart.shippingAddress,\r\n            paymentMethod:cart.paymentMethod,\r\n            itemsPrice:cart.itemsPrice,\r\n            shippingPrice:cart.shippingPrice,\r\n            taxPrice:cart.taxPrice,\r\n            totalPrice:cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <CheckoutSteps step1 step2 step3 step4/>\r\n    <Row>\r\n        <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                    <h2>Shipping</h2>\r\n                    <p>\r\n                        <strong>Address:</strong>\r\n                        {cart.shippingAddress.address},{cart.shippingAddress.city}{' '}\r\n                        {cart.shippingAddress.postalCode},{' '}\r\n                        {cart.shippingAddress.country}\r\n                    </p>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Payment Method</h2>\r\n                    <strong>Method:</strong>\r\n                    {cart.paymentMethod}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {cart.cartItems.length===0?<Message>Your Cart is Empty</Message>:\r\n                    (\r\n                        <ListGroup variant='flush'>\r\n                            {cart.cartItems.map((item,index)=>(\r\n                                <ListGroup.Item key={index}>\r\n                                    <Row>\r\n                                        <Col md={1}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Row>\r\n                                                <Col className='text-left' md={2}>{item.qty}</Col>\r\n                                                <Col md={1}>x</Col>\r\n                                                <Col className='text-right' md={3}>${item.price}</Col>\r\n                                                <Col md={1}>=</Col>\r\n                                                <Col className='text-right' md={3}>${(item.qty * item.price).toFixed(2)}</Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n                                            <Card>\r\n                                                <ListGroup variant='flush'>\r\n                                                    <ListGroup.Item>\r\n                                                        <h2>Order Summary</h2>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Items</Col>\r\n                                                            <Col>${cart.itemsPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Delivery</Col>\r\n                                                            <Col>${cart.deliveryCost.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Tax</Col>\r\n                                                            <Col>${cart.taxPrice.toFixed(2)}</Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Total</Col>\r\n                                                        <Col>${cart.totalPrice.toFixed(2)}</Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                                <ListGroup>\r\n                                                {error && <Message variant='danger'>{error}</Message>}\r\n                                                </ListGroup>\r\n                                                <ListGroup.Item>\r\n                                                    <Button type='button' className='btn-block' disabled={cart.cartItems===0} onClick={PlaceOrderHandler}>Place Order</Button>\r\n                                                </ListGroup.Item>\r\n                                                </ListGroup>\r\n                                            </Card>\r\n                                        </Col>\r\n    </Row>\r\n</>\r\n  )\r\n}\r\nexport default PlaceOrderScreen;\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\VariantEditScreen.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProductEditScreen.js",["226","227","228"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listCategories, listSubcategories } from '../action/categoryActions';\r\nimport { detailsProductAdmin, updateProduct } from '../action/productAction';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nexport default function ProductEditScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const [product_name, setProduct_name] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [weight, setWeight] = useState('');\r\n  const [dimension, setDimension] = useState('');\r\n  const [category_name, setCategory_name] = useState('');\r\n  const [subcat_name, setSubcat_name] = useState('');\r\n  const [supplier_name, setSupplier_name] = useState('');\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  // Todo\r\n  const categoryList = useSelector((state) => state.categoryList);\r\n  const { loading: catloading, error: caterror, categories:categories } = categoryList;\r\n  // Todo\r\n  // Todo\r\n  const subcategoryList = useSelector((state) => state.subcategoryList);\r\n  const { loading: scatloading, error: scaterror, subcategories:subcategories } = subcategoryList;\r\n  // Todo\r\n  // Todo\r\n  const supplierlist = [{supplier_id:1,supplier_name:'xxx'},{supplier_id:2,supplier_name:'yyy'}]\r\n  // const supplierList = useSelector((state) => state.supplierList);\r\n  // Todo\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      props.history.push('/productlist');\r\n    }\r\n    if (!catloading && !caterror) {\r\n      dispatch(listCategories());\r\n    }\r\n    if (!scatloading && !scaterror) {\r\n      dispatch(listSubcategories());\r\n    }\r\n    if (!product || product.product_id!=productId || successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      dispatch(detailsProductAdmin(productId));\r\n    } else {\r\n      setProduct_name(product.product_name);\r\n      setDescription(product.description);\r\n      setWeight(product.weight);\r\n      setDimension(product.dimension);\r\n      setBrand(product.brand);\r\n      setCategory_name(product.category_name);\r\n      setSubcat_name(product.subcat_name);\r\n      setSupplier_name(product.supplier_name);\r\n    }\r\n  }, [product, dispatch, productId, successUpdate, catloading, caterror, scatloading, scaterror, props.history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        product_id: productId,\r\n        product_name,\r\n        description,\r\n        weight,\r\n        dimension,\r\n        brand,\r\n        category_name,\r\n        subcat_name,\r\n        supplier_name,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Edit Product {productId}</h1>\r\n        </div>\r\n        {loadingUpdate && <Loader></Loader>}\r\n        {catloading && <Loader></Loader>}\r\n        {caterror && <Message variant=\"danger\">{caterror}</Message>}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader></Loader>\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <>\r\n            <div>\r\n              <label htmlFor=\"product_name\">Product_name</label>\r\n              <input\r\n                id=\"product_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Product name\"\r\n                value={product_name}\r\n                onChange={(e) => setProduct_name(e.target.value)}\r\n                required\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                rows=\"3\"\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></textarea>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"weight\">Weight</label>\r\n              <input\r\n                id=\"weight\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Weight\"\r\n                value={weight}\r\n                onChange={(e) => setWeight(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"dimension\">Dimension</label>\r\n              <input\r\n                id=\"dimension\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Dimension\"\r\n                value={dimension}\r\n                onChange={(e) => setDimension(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"brand\">Brand</label>\r\n              <input\r\n                id=\"brand\"\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></input>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"category_name\">Category</label>\r\n              <select\r\n                id=\"category_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category\"\r\n                value={category_name}\r\n                onChange={(e) => setCategory_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the category</option>\r\n                {categories.map(category => <option key={category.category_id}> {category.category_name} </option> )}\r\n              </select>\r\n            </div>\r\n            {/* <div>\r\n              <label htmlFor=\"category_description\">Category_description</label>\r\n              <input\r\n                id=\"category_description\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Category_description\"\r\n                value={category_description}\r\n                onChange={(e) => setCategory_description(e.target.value)}\r\n              ></input>\r\n            </div> */}\r\n            <div>\r\n              <label htmlFor=\"subcat_name\">Subcategory</label>\r\n              <select\r\n                id=\"subcat_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Subcategory_name\"\r\n                value={subcat_name}\r\n                onChange={(e) => setSubcat_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the subcategory</option>\r\n                {subcategories.map(subcategory => <option key={subcategory.subcat_id}> {subcategory.subcat_name} </option> )}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"supplier_name\">Supplier</label>\r\n              <select\r\n                id=\"supplier_name\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Supplier_name\"\r\n                value={supplier_name}\r\n                onChange={(e) => setSupplier_name(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"\" disabled selected>select the supplier</option>\r\n                {supplierlist.map(supplier => <option key={supplier.supplier_id}> {supplier.supplier_name} </option> )}\r\n              </select>\r\n            </div>\r\n\r\n            <div>\r\n              <label></label>\r\n              <button className=\"primary\" type=\"submit\">\r\n                Update\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProductListScreen.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\VariantListScreen.js",["229"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    listVariants,\r\n} from \"../action/productAction\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nexport default function VariantListScreen(props) {\r\n    const productId = props.match.params.id;\r\n\r\n    const variantList = useSelector((state) => state.variantList);\r\n    const { loading, error, variants } = variantList;\r\n\r\n//   const variantCreate = useSelector((state) => state.variantCreate);\r\n//   const {\r\n//     loading: loadingCreate,\r\n//     error: errorCreate,\r\n//     success: successCreate,\r\n//     variant: createdVariant,\r\n//   } = variantCreate;\r\n\r\n// todo\r\n//   const variantDelete = useSelector((state) => state.variantDelete);\r\n//   const {\r\n//     loading: loadingDelete,\r\n//     error: errorDelete,\r\n//     success: successDelete,\r\n//   } = variantDelete;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    // if (successCreate) {\r\n    //   dispatch({ type: VARIANT_CREATE_RESET });\r\n    //   props.history.push(`/product/${productId}/variant/${createdVariant.variant_id}/edit`);\r\n    // }\r\n    // if (successDelete) {\r\n    //   dispatch({ type: VARIANT_DELETE_RESET });\r\n    // }\r\n    dispatch(listVariants(productId));\r\n  }, [productId, dispatch, props.history]);\r\n\r\n  const deleteHandler = (variant) => {\r\n    // if (window.confirm(\"Are you sure to delete?\")) {\r\n    //   dispatch(deleteVariant(variant.variant_id));\r\n    // }\r\n  };\r\n  const createHandler = () => {\r\n    // dispatch(createVariant());\r\n  };\r\n  return (\r\n    <div className=\"admin\">\r\n      <div className=\"row\">\r\n        <h1>Variants List - Product {productId}</h1>\r\n        {/* <button type=\"button\" className=\"primary\" onClick={createHandler}>\r\n          Create Variant\r\n        </button> */}\r\n      </div>\r\n\r\n      {/* {loadingDelete && <Loader></Loader>} */}\r\n      {/* {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>} */}\r\n      {/* {loadingCreate && <Loader></Loader>} */}\r\n      {/* {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>} */}\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>SKU</th>\r\n              <th>COLOR</th>\r\n              <th>SIZE</th>\r\n              <th>PRICE</th>\r\n              <th>OFFER</th>\r\n              <th>IMAGE_URL</th>\r\n              <th>NO_STOCK</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {variants.map((variant) => (\r\n              <tr key={variant.variant_id}>\r\n                <td>{variant.variant_id}</td>\r\n                <td>{variant.SKU}</td>\r\n                <td>{variant.color}</td>\r\n                <td>{variant.size}</td>\r\n                <td>{variant.price}</td>\r\n                <td>{variant.offer}</td>\r\n                <td>{variant.image_url}</td>\r\n                <td>{variant.no_stock}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() =>\r\n                      props.history.push(`/product/${productId}/variant/${variant.variant_id}/edit`)\r\n                    }\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"small\"\r\n                    onClick={() => deleteHandler(variant)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\screens\\ProfileScreen.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Loader.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Message.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Rating.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\FormContainer.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Product.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\Variant.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\supplierConstants.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\categoryConstants.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\userConstants.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\subcategoryConstants.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\variantConstants.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\cartAction.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\productAction.js",["230","231"],"import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_REQUEST1,\r\n  PRODUCT_DETAILS_SUCCESS1,\r\n  PRODUCT_DETAILS_FAIL1,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n} from '../constants/productConstants';\r\n\r\nimport {\r\n  VARIANT_LIST_REQUEST,\r\n  VARIANT_LIST_SUCCESS,\r\n  VARIANT_LIST_FAIL,\r\n  VARIANT_DETAILS_REQUEST,\r\n  VARIANT_DETAILS_SUCCESS,\r\n  VARIANT_DETAILS_FAIL,\r\n  VARIANT_CREATE_FAIL,\r\n  VARIANT_CREATE_REQUEST,\r\n  VARIANT_CREATE_SUCCESS,\r\n  VARIANT_UPDATE_REQUEST,\r\n  VARIANT_UPDATE_SUCCESS,\r\n  VARIANT_UPDATE_FAIL,\r\n  VARIANT_DELETE_REQUEST,\r\n  VARIANT_DELETE_FAIL,\r\n  VARIANT_DELETE_SUCCESS,\r\n} from '../constants/variantConstants';\r\n\r\n// frontend testing without backend\r\n// const productdata = [\r\n//   {\r\n//     product_id: 1,\r\n//     product_name: \"p-name\",\r\n//     category_name: \"AAAA\",\r\n//     subcat_name: \"aaa\",\r\n//     description: \"p-description\",\r\n//     weight: \"p-weight\",\r\n//     dimension: \"p-dimension\",\r\n//     brand: \"p-brand\",\r\n//     supplier_name: \"xxx\",\r\n//   },\r\n//   {\r\n//     product_id: 2,\r\n//     product_name: \"p-name2\",\r\n//     category_name: \"BBBB\",\r\n//     subcat_name: \"bbb\",\r\n//     description: \"p-description2\",\r\n//     weight: \"p-weight2\",\r\n//     dimension: \"p-dimension2\",\r\n//     brand: \"p-brand2\",\r\n//     supplier_name: \"yyy\",\r\n//   },\r\n// ];\r\n// frontend testing without backend\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/products\");\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const listProductsCat = (cat) => async (dispatch) => {\r\n  cat=cat.split(\"-\").join('/')\r\n  console.log('l1')\r\n  console.log(cat)\r\n  console.log('l1')\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    if(cat){\r\n    }\r\n    const { data } = await axios.get(`/api/products/category/${cat}`);\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n    \r\n    const {data} = await axios.get(`/api/products/${productId}`)\r\n    \r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const detailsProductVariant = (productId, variants) => async (\r\n  dispatch\r\n  ) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST1, payload: productId });\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST1 });\r\n    const { data } = await axios.post(`/api/products/v`, variants);\r\n    // const data = productdata[productId-1];\r\n    const h = { ...data, vary: variants };\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS1, payload: h });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL1,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const listProductsAdmin = () => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_LIST_REQUEST });\r\n  try {\r\n\r\n    // const { data } = await axios.get(`/api/products/productlist`);\r\n    const data = [\r\n      {\r\n        product_id: 1,\r\n        product_name: \"ssdsd\",\r\n        category_name: \"dvsvs\",\r\n        subcat_name: \"sdvsv\",\r\n        brand: \"svsv\",\r\n        supplier_name: \"sdvsvs\",\r\n        weight: \"sdvsdvs\",\r\n        dimension: \"vsdvdsv\",\r\n        description: \"svsdvsd\",\r\n      }\r\n    ]\r\n    \r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const detailsProductAdmin = (productId) => async (dispatch) => {\r\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n  try {\r\n    \r\n    const {data} = await axios.get(`/api/products/productlist/${productId}`)\r\n    \r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n  try {\r\n    const newproduct = {\r\n      product_name: \"sampleproduct\",\r\n      category_name: null,\r\n      subcat_name: null,\r\n      description: \"sampledescription\",\r\n      weight: \"sampleweight\",\r\n      dimension: \"sampledimension\",\r\n      brand: \"samplebrand\",\r\n      supplier_name: null,\r\n    };\r\n    const { data } = await axios.post(`/api/products/addProduct`, newproduct);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.post(`/api/products/productlist/edit/${product.product_id}`, product);\r\n\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = axios.delete(`/api/products/productlist/delete/${productId}`);\r\n\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const listVariants = (productId) => async (dispatch) =>{\r\n  dispatch({ type: VARIANT_LIST_REQUEST });\r\n  try {\r\n\r\n      // const { data } = await axios.get(\"/api/product/productlist/${productId}/variantlist\");\r\n      const { data } = await axios.get(`/api/products/productlist/variants/${productId}`);\r\n\r\n      dispatch({\r\n      type: VARIANT_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n  } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: VARIANT_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n  }\r\n}\r\n\r\nexport const detailsVariant = (productId,variantId) => async (dispatch) => {\r\n  dispatch({ type: VARIANT_DETAILS_REQUEST, payload: (productId,variantId) });\r\n  try {\r\n    \r\n    // const {data} = await axios.get(`/api/products/productlist/${productId}/variants/${variantId}`)\r\n    const {data} = await axios.get(`/api/products/productlist/variants/${productId}/${variantId}`)\r\n    \r\n    dispatch({ type: VARIANT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: VARIANT_DETAILS_FAIL,\r\n      payload:\r\n      error.response && error.response.data.message\r\n      ? error.response.data.message\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createVariant = (productId) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_CREATE_REQUEST });\r\n  try {\r\n    const newvariant = {\r\n      product_id: productId,\r\n      SKU:\"samplesku\",\r\n      price: null,\r\n      offer: null,\r\n      color: null,\r\n      size: null,\r\n      no_stock: null,\r\n      image_url: null,\r\n    };\r\n    const { data } = await axios.post(`/api/products/productlist/variants/addvariant/${productId}`, newvariant);\r\n    dispatch({\r\n      type: VARIANT_CREATE_SUCCESS,\r\n      payload: data.variant,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\nexport const updateVariant = (productId,variant) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_UPDATE_REQUEST, payload: variant });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.post(`/api/products/productlist/variants/editvariant/${productId}/${variant.variant_id}`, variant);\r\n\r\n    dispatch({ type: VARIANT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\nexport const deleteVariant = (productId,variantId) => async (dispatch, getState) => {\r\n  dispatch({ type: VARIANT_DELETE_REQUEST, payload: (productId,variantId) });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = axios.delete(`/api/products/productlist/variants/delete/${productId}/${variantId}`);\r\n\r\n    dispatch({ type: VARIANT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: VARIANT_DELETE_FAIL, payload: message });\r\n  }\r\n};","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\categoryActions.js",["232"],"import axios from \"axios\";\r\nimport {\r\n  CATEGORY_LIST_REQUEST,\r\n  CATEGORY_LIST_SUCCESS,\r\n  CATEGORY_LIST_FAIL,\r\n  CATEGORY_DETAILS_REQUEST,\r\n  CATEGORY_DETAILS_SUCCESS,\r\n  CATEGORY_DETAILS_FAIL,\r\n  CATEGORY_CREATE_FAIL,\r\n  CATEGORY_CREATE_REQUEST,\r\n  CATEGORY_CREATE_SUCCESS,\r\n  CATEGORY_UPDATE_REQUEST,\r\n  CATEGORY_UPDATE_SUCCESS,\r\n  CATEGORY_UPDATE_FAIL,\r\n  CATEGORY_DELETE_REQUEST,\r\n  CATEGORY_DELETE_FAIL,\r\n  CATEGORY_DELETE_SUCCESS,\r\n} from '../constants/categoryConstants';\r\n\r\nimport {\r\n  SUBCATEGORY_LIST_FAIL,\r\n  SUBCATEGORY_LIST_REQUEST,\r\n  SUBCATEGORY_LIST_SUCCESS,\r\n} from '../constants/subcategoryConstants';\r\n\r\nexport const listCategories = () => async (dispatch) => {\r\n    dispatch({ type: CATEGORY_LIST_REQUEST });\r\n    try {\r\n\r\n      const { data } = await axios.get(`/api/categories`);\r\n\r\n      dispatch({\r\n      type: CATEGORY_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: CATEGORY_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n    }\r\n};\r\n  \r\nexport const detailsCategory = (categoryId) => async (dispatch) => {\r\n  dispatch({ type: CATEGORY_DETAILS_REQUEST, payload: categoryId });\r\n  try {\r\n    dispatch({ type: CATEGORY_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/categories/${categoryId}`)\r\n\r\n    dispatch({ type: CATEGORY_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: CATEGORY_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createCategory = () => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_CREATE_REQUEST });\r\n  try {\r\n\r\n    const newcategory = {\r\n      category_name: \"samplecategory\",\r\n      description: \"sampledescription\",\r\n    };\r\n    const { data } = await axios.post('/api/categories/',newcategory);\r\n\r\n\r\n    dispatch({\r\n      type: CATEGORY_CREATE_SUCCESS,\r\n      payload: data.category,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_CREATE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const updateCategory = (category) => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_UPDATE_REQUEST, payload: category });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n\r\n    const { data } = await axios.put(`/api/categories/${category.category_id}`, category);\r\n\r\n    dispatch({ type: CATEGORY_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_UPDATE_FAIL, error: message });\r\n  }\r\n};\r\n\r\nexport const deleteCategory = (categoryId) => async (dispatch, getState) => {\r\n  dispatch({ type: CATEGORY_DELETE_REQUEST, payload: categoryId });\r\n  // const {\r\n  //   userSignin: { userInfo },\r\n  // } = getState();\r\n  try {\r\n    \r\n    const { data } = axios.delete(`/api/categories/${categoryId}`);\r\n\r\n    dispatch({ type: CATEGORY_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: CATEGORY_DELETE_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const listSubcategories = (categoryId) => async (dispatch) =>{\r\n  dispatch({ type: SUBCATEGORY_LIST_REQUEST });\r\n  try {\r\n\r\n      // const { data } = await axios.get(\"/api/categories/${categoryId}/subcategorylist\");\r\n      const { data } = await axios.get(`/api/categories/subcategories/:id`);\r\n\r\n      dispatch({\r\n      type: SUBCATEGORY_LIST_SUCCESS,\r\n      payload: data,\r\n      });\r\n  } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n      type: SUBCATEGORY_LIST_FAIL,\r\n      payload:\r\n          error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n      });\r\n  }\r\n}","D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\productConstants.js",[],["233","234"],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\userActions.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Semester-4\\CS3042 - Database Systems\\Project\\dbms_project\\dbproject\\frontend\\src\\action\\orderActions.js",[],{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":7,"column":8,"nodeType":"241","messageId":"242","endLine":7,"endColumn":15},{"ruleId":"239","severity":1,"message":"243","line":31,"column":11,"nodeType":"241","messageId":"242","endLine":31,"endColumn":17},{"ruleId":"239","severity":1,"message":"244","line":36,"column":11,"nodeType":"241","messageId":"242","endLine":36,"endColumn":22},{"ruleId":"239","severity":1,"message":"245","line":3,"column":20,"nodeType":"241","messageId":"242","endLine":3,"endColumn":31},{"ruleId":"239","severity":1,"message":"246","line":3,"column":44,"nodeType":"241","messageId":"242","endLine":3,"endColumn":47},{"ruleId":"239","severity":1,"message":"247","line":3,"column":55,"nodeType":"241","messageId":"242","endLine":3,"endColumn":64},{"ruleId":"239","severity":1,"message":"248","line":3,"column":66,"nodeType":"241","messageId":"242","endLine":3,"endColumn":77},{"ruleId":"239","severity":1,"message":"249","line":9,"column":5,"nodeType":"241","messageId":"242","endLine":9,"endColumn":13},{"ruleId":"239","severity":1,"message":"250","line":13,"column":3,"nodeType":"241","messageId":"242","endLine":13,"endColumn":9},{"ruleId":"251","severity":1,"message":"252","line":32,"column":3,"nodeType":"253","endLine":32,"endColumn":5,"suggestions":"254"},{"ruleId":"239","severity":1,"message":"255","line":22,"column":9,"nodeType":"241","messageId":"242","endLine":22,"endColumn":22},{"ruleId":"239","severity":1,"message":"256","line":31,"column":14,"nodeType":"241","messageId":"242","endLine":31,"endColumn":28},{"ruleId":"239","severity":1,"message":"257","line":32,"column":12,"nodeType":"241","messageId":"242","endLine":32,"endColumn":24},{"ruleId":"251","severity":1,"message":"258","line":35,"column":3,"nodeType":"253","endLine":35,"endColumn":20,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":32,"column":49,"nodeType":"262","messageId":"263","endLine":32,"endColumn":70,"fix":"264"},{"ruleId":"260","severity":1,"message":"265","line":36,"column":51,"nodeType":"262","messageId":"263","endLine":36,"endColumn":78,"fix":"266"},{"ruleId":"267","severity":1,"message":"268","line":55,"column":39,"nodeType":"269","messageId":"270","endLine":55,"endColumn":41},{"ruleId":"239","severity":1,"message":"271","line":48,"column":9,"nodeType":"241","messageId":"242","endLine":48,"endColumn":22},{"ruleId":"239","severity":1,"message":"272","line":266,"column":13,"nodeType":"241","messageId":"242","endLine":266,"endColumn":17},{"ruleId":"239","severity":1,"message":"272","line":371,"column":13,"nodeType":"241","messageId":"242","endLine":371,"endColumn":17},{"ruleId":"239","severity":1,"message":"272","line":118,"column":13,"nodeType":"241","messageId":"242","endLine":118,"endColumn":17},{"ruleId":"235","replacedBy":"273"},{"ruleId":"237","replacedBy":"274"},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"no-unused-vars","'Variant' is defined but never used.","Identifier","unusedVar","'change' is assigned a value but never used.","'varinatKeys' is assigned a value but never used.","'NavDropdown' is defined but never used.","'Nav' is defined but never used.","'ListGroup' is defined but never used.","'SplitButton' is defined but never used.","'Dropdown' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'orderId'. Either include them or remove the dependency array.","ArrayExpression",["277"],"'deleteHandler' is assigned a value but never used.","'loadingDeliver' is assigned a value but never used.","'errorDeliver' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["278"],"no-useless-rename","Destructuring assignment categories unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"279","text":"280"},"Destructuring assignment subcategories unnecessarily renamed.",{"range":"281","text":"282"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'createHandler' is assigned a value but never used.","'data' is assigned a value but never used.",["275"],["276"],"no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},[1398,1419],"categories",[1585,1612],"subcategories","Update the dependencies array to be: [dispatch, orderId]",{"range":"287","text":"288"},"Update the dependencies array to be: [history, order._id, success]",{"range":"289","text":"290"},[835,837],"[dispatch, orderId]",[1111,1128],"[history, order._id, success]"]